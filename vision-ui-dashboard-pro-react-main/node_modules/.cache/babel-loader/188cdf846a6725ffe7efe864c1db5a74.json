{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProxyProvider = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar transaction_1 = require(\"./transaction\");\n\nvar networkConfig_1 = require(\"./networkConfig\");\n\nvar errors = __importStar(require(\"./errors\"));\n\nvar account_1 = require(\"./account\");\n\nvar queryResponse_1 = require(\"./smartcontracts/queryResponse\");\n\nvar logger_1 = require(\"./logger\");\n\nvar networkStatus_1 = require(\"./networkStatus\");\n\nvar transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\n\nvar constants_1 = require(\"./constants\");\n/**\n * This will be deprecated once all the endpoints move to ApiProvider\n */\n\n\nvar ProxyProvider = /*#__PURE__*/function () {\n  /**\n   * Creates a new ProxyProvider.\n   * @param url the URL of the Elrond Proxy\n   * @param config axios request config options\n   */\n  function ProxyProvider(url, config) {\n    _classCallCheck(this, ProxyProvider);\n\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n  }\n  /**\n   * Fetches the state of an {@link Account}.\n   */\n\n\n  _createClass(ProxyProvider, [{\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.doGetGeneric(\"address/\".concat(address.bech32()), function (response) {\n                  return account_1.AccountOnNetwork.fromHttpResponse(response.account);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getAddressEsdtList\",\n    value: function getAddressEsdtList(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var url, raw, tokens;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = \"address/\".concat(address.bech32(), \"/esdt\");\n                _context2.next = 3;\n                return this.doGetGeneric(url, function (response) {\n                  return response.esdts;\n                });\n\n              case 3:\n                raw = _context2.sent;\n                tokens = Object.values(raw).map(function (item) {\n                  return account_1.TokenOfAccountOnNetwork.fromHttpResponse(item);\n                });\n                return _context2.abrupt(\"return\", tokens);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getAddressEsdt\",\n    value: function getAddressEsdt(address, tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.doGetGeneric(\"address/\".concat(address.bech32(), \"/esdt/\").concat(tokenIdentifier), function (response) {\n                  return response.tokenData;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"getAddressNft\",\n    value: function getAddressNft(address, tokenIdentifier, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.doGetGeneric(\"address/\".concat(address.bech32(), \"/nft/\").concat(tokenIdentifier, \"/nonce/\").concat(nonce), function (response) {\n                  return response.tokenData;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n    /**\n     * Queries a Smart Contract - runs a pure function defined by the contract and returns its results.\n     */\n\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                data = query.toHttpRequest();\n                return _context5.abrupt(\"return\", this.doPostGeneric(\"vm-values/query\", data, function (response) {\n                  return queryResponse_1.QueryResponse.fromHttpResponse(response.data || response.vmOutput);\n                }));\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                throw errors.ErrContractQuery.increaseSpecificity(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 5]]);\n      }));\n    }\n    /**\n     * Broadcasts an already-signed {@link Transaction}.\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.doPostGeneric(\"transaction/send\", tx.toSendable(), function (response) {\n                  return new transaction_1.TransactionHash(response.txHash);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n    /**\n     * Simulates the processing of an already-signed {@link Transaction}.\n     */\n\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.doPostGeneric(\"transaction/simulate\", tx.toSendable(), function (response) {\n                  return response;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n    /**\n     * Fetches the state of a {@link Transaction}.\n     */\n\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash, hintSender, withResults) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                url = this.buildUrlWithQueryParameters(\"transaction/\".concat(txHash.toString()), {\n                  withSender: hintSender ? hintSender.bech32() : \"\",\n                  withResults: withResults ? \"true\" : \"\"\n                });\n                return _context8.abrupt(\"return\", this.doGetGeneric(url, function (response) {\n                  return transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(txHash, response.transaction);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n    /**\n     * Queries the status of a {@link Transaction}.\n     */\n\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this.doGetGeneric(\"transaction/\".concat(txHash.toString(), \"/status\"), function (response) {\n                  return new transaction_1.TransactionStatus(response.status);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n    /**\n     * Fetches the Network configuration.\n     */\n\n  }, {\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.doGetGeneric(\"network/config\", function (response) {\n                  return networkConfig_1.NetworkConfig.fromHttpResponse(response.config);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n    /**\n     * Fetches the network status configuration.\n     */\n\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this.doGetGeneric(\"network/status/4294967295\", function (response) {\n                  return networkStatus_1.NetworkStatus.fromHttpResponse(response.status);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n    /**\n     * Get method that receives the resource url and on callback the method used to map the response.\n     */\n\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl, callback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doGet(resourceUrl);\n\n              case 2:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", callback(response));\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n    /**\n     * Post method that receives the resource url, the post payload and on callback the method used to map the response.\n     */\n\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(resourceUrl, payload, callback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.doPost(resourceUrl, payload);\n\n              case 2:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", callback(response));\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var url, response, payload;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context14.next = 4;\n                return axios_1.default.get(url, this.config);\n\n              case 4:\n                response = _context14.sent;\n                payload = response.data.data;\n                return _context14.abrupt(\"return\", payload);\n\n              case 9:\n                _context14.prev = 9;\n                _context14.t0 = _context14[\"catch\"](0);\n                this.handleApiError(_context14.t0, resourceUrl);\n\n              case 12:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"doPost\",\n    value: function doPost(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var url, response, responsePayload;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context15.next = 4;\n                return axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }));\n\n              case 4:\n                response = _context15.sent;\n                responsePayload = response.data.data;\n                return _context15.abrupt(\"return\", responsePayload);\n\n              case 9:\n                _context15.prev = 9;\n                _context15.t0 = _context15[\"catch\"](0);\n                this.handleApiError(_context15.t0, resourceUrl);\n\n              case 12:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"buildUrlWithQueryParameters\",\n    value: function buildUrlWithQueryParameters(endpoint, params) {\n      var searchParams = new URLSearchParams();\n\n      for (var _i = 0, _Object$entries = Object.entries(params); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (value) {\n          searchParams.append(key, value);\n        }\n      }\n\n      return \"\".concat(endpoint, \"?\").concat(searchParams.toString());\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        logger_1.Logger.warn(error);\n        throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n      }\n\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n\n  return ProxyProvider;\n}();\n\nexports.ProxyProvider = ProxyProvider;","map":{"version":3,"sources":["../src/proxyProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst transaction_1 = require(\"./transaction\");\nconst networkConfig_1 = require(\"./networkConfig\");\nconst errors = __importStar(require(\"./errors\"));\nconst account_1 = require(\"./account\");\nconst queryResponse_1 = require(\"./smartcontracts/queryResponse\");\nconst logger_1 = require(\"./logger\");\nconst networkStatus_1 = require(\"./networkStatus\");\nconst transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\nconst constants_1 = require(\"./constants\");\n/**\n * This will be deprecated once all the endpoints move to ApiProvider\n */\nclass ProxyProvider {\n    /**\n     * Creates a new ProxyProvider.\n     * @param url the URL of the Elrond Proxy\n     * @param config axios request config options\n     */\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n    }\n    /**\n     * Fetches the state of an {@link Account}.\n     */\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}`, (response) => account_1.AccountOnNetwork.fromHttpResponse(response.account));\n        });\n    }\n    getAddressEsdtList(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `address/${address.bech32()}/esdt`;\n            let raw = yield this.doGetGeneric(url, response => response.esdts);\n            let tokens = Object.values(raw).map(item => account_1.TokenOfAccountOnNetwork.fromHttpResponse(item));\n            return tokens;\n        });\n    }\n    getAddressEsdt(address, tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}/esdt/${tokenIdentifier}`, (response) => response.tokenData);\n        });\n    }\n    getAddressNft(address, tokenIdentifier, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}/nft/${tokenIdentifier}/nonce/${nonce}`, (response) => response.tokenData);\n        });\n    }\n    /**\n     * Queries a Smart Contract - runs a pure function defined by the contract and returns its results.\n     */\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let data = query.toHttpRequest();\n                return this.doPostGeneric(\"vm-values/query\", data, (response) => queryResponse_1.QueryResponse.fromHttpResponse(response.data || response.vmOutput));\n            }\n            catch (err) {\n                throw errors.ErrContractQuery.increaseSpecificity(err);\n            }\n        });\n    }\n    /**\n     * Broadcasts an already-signed {@link Transaction}.\n     */\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doPostGeneric(\"transaction/send\", tx.toSendable(), (response) => new transaction_1.TransactionHash(response.txHash));\n        });\n    }\n    /**\n     * Simulates the processing of an already-signed {@link Transaction}.\n     */\n    simulateTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doPostGeneric(\"transaction/simulate\", tx.toSendable(), (response) => response);\n        });\n    }\n    /**\n     * Fetches the state of a {@link Transaction}.\n     */\n    getTransaction(txHash, hintSender, withResults) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = this.buildUrlWithQueryParameters(`transaction/${txHash.toString()}`, {\n                withSender: hintSender ? hintSender.bech32() : \"\",\n                withResults: withResults ? \"true\" : \"\",\n            });\n            return this.doGetGeneric(url, (response) => transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(txHash, response.transaction));\n        });\n    }\n    /**\n     * Queries the status of a {@link Transaction}.\n     */\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`transaction/${txHash.toString()}/status`, (response) => new transaction_1.TransactionStatus(response.status));\n        });\n    }\n    /**\n     * Fetches the Network configuration.\n     */\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"network/config\", (response) => networkConfig_1.NetworkConfig.fromHttpResponse(response.config));\n        });\n    }\n    /**\n     * Fetches the network status configuration.\n     */\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"network/status/4294967295\", (response) => networkStatus_1.NetworkStatus.fromHttpResponse(response.status));\n        });\n    }\n    /**\n     * Get method that receives the resource url and on callback the method used to map the response.\n     */\n    doGetGeneric(resourceUrl, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return callback(response);\n        });\n    }\n    /**\n     * Post method that receives the resource url, the post payload and on callback the method used to map the response.\n     */\n    doPostGeneric(resourceUrl, payload, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPost(resourceUrl, payload);\n            return callback(response);\n        });\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.get(url, this.config);\n                let payload = response.data.data;\n                return payload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    doPost(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), { headers: {\n                        \"Content-Type\": \"application/json\",\n                    } }));\n                let responsePayload = response.data.data;\n                return responsePayload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    buildUrlWithQueryParameters(endpoint, params) {\n        let searchParams = new URLSearchParams();\n        for (let [key, value] of Object.entries(params)) {\n            if (value) {\n                searchParams.append(key, value);\n            }\n        }\n        return `${endpoint}?${searchParams.toString()}`;\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            logger_1.Logger.warn(error);\n            throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ProxyProvider = ProxyProvider;\n//# sourceMappingURL=proxyProvider.js.map"]},"metadata":{},"sourceType":"script"}