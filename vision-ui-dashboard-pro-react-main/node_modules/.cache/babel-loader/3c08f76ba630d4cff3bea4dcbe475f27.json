{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiProvider = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar errors = __importStar(require(\"./errors\"));\n\nvar logger_1 = require(\"./logger\");\n\nvar networkStake_1 = require(\"./networkStake\");\n\nvar stats_1 = require(\"./stats\");\n\nvar transaction_1 = require(\"./transaction\");\n\nvar transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\n\nvar token_1 = require(\"./token\");\n\nvar nftToken_1 = require(\"./nftToken\");\n\nvar constants_1 = require(\"./constants\");\n/**\n * This is a temporary change, this will be the only provider used, ProxyProvider will be deprecated\n */\n\n\nvar ApiProvider = /*#__PURE__*/function () {\n  /**\n   * Creates a new ApiProvider.\n   * @param url the URL of the Elrond Api\n   * @param config axios request config options\n   */\n  function ApiProvider(url, config) {\n    _classCallCheck(this, ApiProvider);\n\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n  }\n  /**\n   * Fetches the Network Stake.\n   */\n\n\n  _createClass(ApiProvider, [{\n    key: \"getNetworkStake\",\n    value: function getNetworkStake() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.doGetGeneric(\"stake\", function (response) {\n                  return networkStake_1.NetworkStake.fromHttpResponse(response);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * Fetches the Network Stats.\n     */\n\n  }, {\n    key: \"getNetworkStats\",\n    value: function getNetworkStats() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.doGetGeneric(\"stats\", function (response) {\n                  return stats_1.Stats.fromHttpResponse(response);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n    /**\n     * Fetches the state of a {@link Transaction}.\n     */\n\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.doGetGeneric(\"transactions/\".concat(txHash.toString()), function (response) {\n                  return transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(txHash, response);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n    /**\n     * Queries the status of a {@link Transaction}.\n     */\n\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.doGetGeneric(\"transactions/\".concat(txHash.toString(), \"?fields=status\"), function (response) {\n                  return new transaction_1.TransactionStatus(response.status);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.doGetGeneric(\"tokens/\".concat(tokenIdentifier), function (response) {\n                  return token_1.Token.fromHttpResponse(response);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getNFTToken\",\n    value: function getNFTToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.doGetGeneric(\"nfts/\".concat(tokenIdentifier), function (response) {\n                  return nftToken_1.NFTToken.fromHttpResponse(response);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n    /**\n     * Get method that receives the resource url and on callback the method used to map the response.\n     */\n\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl, callback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.doGet(resourceUrl);\n\n              case 2:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", callback(response));\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context8.next = 4;\n                return axios_1.default.get(url, this.config);\n\n              case 4:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response.data);\n\n              case 8:\n                _context8.prev = 8;\n                _context8.t0 = _context8[\"catch\"](0);\n                this.handleApiError(_context8.t0, resourceUrl);\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 8]]);\n      }));\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        logger_1.Logger.warn(error);\n        throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n      }\n\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n\n  return ApiProvider;\n}();\n\nexports.ApiProvider = ApiProvider;","map":{"version":3,"sources":["../src/apiProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst errors = __importStar(require(\"./errors\"));\nconst logger_1 = require(\"./logger\");\nconst networkStake_1 = require(\"./networkStake\");\nconst stats_1 = require(\"./stats\");\nconst transaction_1 = require(\"./transaction\");\nconst transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\nconst token_1 = require(\"./token\");\nconst nftToken_1 = require(\"./nftToken\");\nconst constants_1 = require(\"./constants\");\n/**\n * This is a temporary change, this will be the only provider used, ProxyProvider will be deprecated\n */\nclass ApiProvider {\n    /**\n     * Creates a new ApiProvider.\n     * @param url the URL of the Elrond Api\n     * @param config axios request config options\n     */\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n    }\n    /**\n     * Fetches the Network Stake.\n     */\n    getNetworkStake() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"stake\", (response) => networkStake_1.NetworkStake.fromHttpResponse(response));\n        });\n    }\n    /**\n     * Fetches the Network Stats.\n     */\n    getNetworkStats() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"stats\", (response) => stats_1.Stats.fromHttpResponse(response));\n        });\n    }\n    /**\n     * Fetches the state of a {@link Transaction}.\n     */\n    getTransaction(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`transactions/${txHash.toString()}`, (response) => transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(txHash, response));\n        });\n    }\n    /**\n     * Queries the status of a {@link Transaction}.\n     */\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`transactions/${txHash.toString()}?fields=status`, (response) => new transaction_1.TransactionStatus(response.status));\n        });\n    }\n    getToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`tokens/${tokenIdentifier}`, (response) => token_1.Token.fromHttpResponse(response));\n        });\n    }\n    getNFTToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`nfts/${tokenIdentifier}`, (response) => nftToken_1.NFTToken.fromHttpResponse(response));\n        });\n    }\n    /**\n     * Get method that receives the resource url and on callback the method used to map the response.\n     */\n    doGetGeneric(resourceUrl, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return callback(response);\n        });\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.get(url, this.config);\n                return response.data;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            logger_1.Logger.warn(error);\n            throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ApiProvider = ApiProvider;\n//# sourceMappingURL=apiProvider.js.map"]},"metadata":{},"sourceType":"script"}