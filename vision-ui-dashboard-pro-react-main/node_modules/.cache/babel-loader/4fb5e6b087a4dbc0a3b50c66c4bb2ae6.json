{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionEventTopic = exports.TransactionEvent = exports.TransactionLogs = void 0;\n\nvar _1 = require(\".\");\n\nvar errors_1 = require(\"./errors\");\n\nvar TransactionLogs = /*#__PURE__*/function () {\n  function TransactionLogs(address, events) {\n    _classCallCheck(this, TransactionLogs);\n\n    this.address = address;\n    this.events = events;\n  }\n\n  _createClass(TransactionLogs, [{\n    key: \"findEventByIdentifier\",\n    value: function findEventByIdentifier(identifier) {\n      var event = this.events.filter(function (event) {\n        return event.identifier == identifier;\n      })[0];\n\n      if (event) {\n        return event;\n      }\n\n      throw new errors_1.ErrTransactionEventNotFound(identifier);\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new TransactionLogs(new _1.Address(), []);\n    }\n  }, {\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(logs) {\n      var address = new _1.Address(logs.address);\n      var events = (logs.events || []).map(function (event) {\n        return TransactionEvent.fromHttpResponse(event);\n      });\n      return new TransactionLogs(address, events);\n    }\n  }]);\n\n  return TransactionLogs;\n}();\n\nexports.TransactionLogs = TransactionLogs;\n\nvar TransactionEvent = /*#__PURE__*/function () {\n  function TransactionEvent(address, identifier, topics) {\n    _classCallCheck(this, TransactionEvent);\n\n    this.address = address;\n    this.identifier = identifier;\n    this.topics = topics;\n  }\n\n  _createClass(TransactionEvent, null, [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(responsePart) {\n      var topics = (responsePart.topics || []).map(function (topic) {\n        return new TransactionEventTopic(topic);\n      });\n      var address = new _1.Address(responsePart.address);\n      var identifier = responsePart.identifier || \"\";\n      var event = new TransactionEvent(address, identifier, topics);\n      return event;\n    }\n  }]);\n\n  return TransactionEvent;\n}();\n\nexports.TransactionEvent = TransactionEvent;\n\nvar TransactionEventTopic = /*#__PURE__*/function () {\n  function TransactionEventTopic(topic) {\n    _classCallCheck(this, TransactionEventTopic);\n\n    this.raw = Buffer.from(topic || \"\", \"base64\");\n  }\n\n  _createClass(TransactionEventTopic, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.raw.toString(\"utf8\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.raw;\n    }\n  }]);\n\n  return TransactionEventTopic;\n}();\n\nexports.TransactionEventTopic = TransactionEventTopic;","map":{"version":3,"sources":["../src/transactionLogs.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,EAAA,GAAA,OAAA,CAAA,GAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;IAEa,e;EAIT,yBAAY,OAAZ,EAA8B,MAA9B,EAAwD;IAAA;;IACpD,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,MAAL,GAAc,MAAd;EACH;;;;WAYD,+BAAsB,UAAtB,EAAwC;MACpC,IAAI,KAAK,GAAG,KAAK,MAAL,CAAY,MAAZ,CAAmB,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,UAAN,IAAoB,UAAxB;MAAA,CAAxB,EAA4D,CAA5D,CAAZ;;MACA,IAAI,KAAJ,EAAW;QACP,OAAO,KAAP;MACH;;MAED,MAAM,IAAI,QAAA,CAAA,2BAAJ,CAAgC,UAAhC,CAAN;IACH;;;WAjBD,iBAAY;MACR,OAAO,IAAI,eAAJ,CAAoB,IAAI,EAAA,CAAA,OAAJ,EAApB,EAAmC,EAAnC,CAAP;IACH;;;WAED,0BAAwB,IAAxB,EAAiC;MAC7B,IAAI,OAAO,GAAG,IAAI,EAAA,CAAA,OAAJ,CAAY,IAAI,CAAC,OAAjB,CAAd;MACA,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,MAAL,IAAe,EAAhB,EAAoB,GAApB,CAAwB,UAAC,KAAD;QAAA,OAAgB,gBAAgB,CAAC,gBAAjB,CAAkC,KAAlC,CAAhB;MAAA,CAAxB,CAAb;MACA,OAAO,IAAI,eAAJ,CAAoB,OAApB,EAA6B,MAA7B,CAAP;IACH;;;;;;AAjBL,OAAA,CAAA,eAAA,GAAA,eAAA;;IA6Ba,gB;EAKT,0BAAY,OAAZ,EAA8B,UAA9B,EAAkD,MAAlD,EAAiF;IAAA;;IAC7E,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,UAAL,GAAkB,UAAlB;IACA,KAAK,MAAL,GAAc,MAAd;EACH;;;;WAED,0BAAwB,YAAxB,EAIC;MACG,IAAI,MAAM,GAAG,CAAC,YAAY,CAAC,MAAb,IAAuB,EAAxB,EAA4B,GAA5B,CAAgC,UAAA,KAAK;QAAA,OAAI,IAAI,qBAAJ,CAA0B,KAA1B,CAAJ;MAAA,CAArC,CAAb;MACA,IAAI,OAAO,GAAG,IAAI,EAAA,CAAA,OAAJ,CAAY,YAAY,CAAC,OAAzB,CAAd;MACA,IAAI,UAAU,GAAG,YAAY,CAAC,UAAb,IAA2B,EAA5C;MACA,IAAI,KAAK,GAAG,IAAI,gBAAJ,CAAqB,OAArB,EAA8B,UAA9B,EAA0C,MAA1C,CAAZ;MACA,OAAO,KAAP;IACH;;;;;;AArBL,OAAA,CAAA,gBAAA,GAAA,gBAAA;;IAwBa,qB;EAGT,+BAAY,KAAZ,EAAyB;IAAA;;IACrB,KAAK,GAAL,GAAW,MAAM,CAAC,IAAP,CAAY,KAAK,IAAI,EAArB,EAAyB,QAAzB,CAAX;EACH;;;;WAED,oBAAQ;MACJ,OAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,MAAlB,CAAP;IACH;;;WAED,mBAAO;MACH,OAAO,KAAK,GAAZ;IACH;;;;;;AAbL,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionEventTopic = exports.TransactionEvent = exports.TransactionLogs = void 0;\nconst _1 = require(\".\");\nconst errors_1 = require(\"./errors\");\nclass TransactionLogs {\n    constructor(address, events) {\n        this.address = address;\n        this.events = events;\n    }\n    static empty() {\n        return new TransactionLogs(new _1.Address(), []);\n    }\n    static fromHttpResponse(logs) {\n        let address = new _1.Address(logs.address);\n        let events = (logs.events || []).map((event) => TransactionEvent.fromHttpResponse(event));\n        return new TransactionLogs(address, events);\n    }\n    findEventByIdentifier(identifier) {\n        let event = this.events.filter(event => event.identifier == identifier)[0];\n        if (event) {\n            return event;\n        }\n        throw new errors_1.ErrTransactionEventNotFound(identifier);\n    }\n}\nexports.TransactionLogs = TransactionLogs;\nclass TransactionEvent {\n    constructor(address, identifier, topics) {\n        this.address = address;\n        this.identifier = identifier;\n        this.topics = topics;\n    }\n    static fromHttpResponse(responsePart) {\n        let topics = (responsePart.topics || []).map(topic => new TransactionEventTopic(topic));\n        let address = new _1.Address(responsePart.address);\n        let identifier = responsePart.identifier || \"\";\n        let event = new TransactionEvent(address, identifier, topics);\n        return event;\n    }\n}\nexports.TransactionEvent = TransactionEvent;\nclass TransactionEventTopic {\n    constructor(topic) {\n        this.raw = Buffer.from(topic || \"\", \"base64\");\n    }\n    toString() {\n        return this.raw.toString(\"utf8\");\n    }\n    valueOf() {\n        return this.raw;\n    }\n}\nexports.TransactionEventTopic = TransactionEventTopic;\n//# sourceMappingURL=transactionLogs.js.map"]},"metadata":{},"sourceType":"script"}