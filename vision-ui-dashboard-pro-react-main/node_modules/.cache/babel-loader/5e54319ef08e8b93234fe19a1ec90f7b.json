{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CollectionOfTypedValues = void 0;\n\nclass CollectionOfTypedValues {\n  constructor(items) {\n    this.items = items;\n  }\n\n  getLength() {\n    return this.items.length;\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  valueOf() {\n    return this.items.map(item => item.valueOf());\n  }\n\n  equals(other) {\n    if (this.getLength() != other.getLength()) {\n      return false;\n    }\n\n    for (let i = 0; i < this.getLength(); i++) {\n      let selfItem = this.items[i];\n      let otherItem = other.items[i];\n\n      if (!selfItem.equals(otherItem)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n}\n\nexports.CollectionOfTypedValues = CollectionOfTypedValues;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/collections.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAa,uBAAb,CAAoC;EAGhC,WAAA,CAAY,KAAZ,EAA+B;IAC3B,KAAK,KAAL,GAAa,KAAb;EACH;;EAED,SAAS,GAAA;IACL,OAAO,KAAK,KAAL,CAAW,MAAlB;EACH;;EAED,QAAQ,GAAA;IACJ,OAAO,KAAK,KAAZ;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,KAAL,CAAW,GAAX,CAAgB,IAAD,IAAU,IAAI,CAAC,OAAL,EAAzB,CAAP;EACH;;EAED,MAAM,CAAC,KAAD,EAA+B;IACjC,IAAI,KAAK,SAAL,MAAoB,KAAK,CAAC,SAAN,EAAxB,EAA2C;MACvC,OAAO,KAAP;IACH;;IAED,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,SAAL,EAApB,EAAsC,CAAC,EAAvC,EAA2C;MACvC,IAAI,QAAQ,GAAG,KAAK,KAAL,CAAW,CAAX,CAAf;MACA,IAAI,SAAS,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAhB;;MAEA,IAAI,CAAC,QAAQ,CAAC,MAAT,CAAgB,SAAhB,CAAL,EAAiC;QAC7B,OAAO,KAAP;MACH;IACJ;;IAED,OAAO,IAAP;EACH;;AAlC+B;;AAApC,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectionOfTypedValues = void 0;\nclass CollectionOfTypedValues {\n    constructor(items) {\n        this.items = items;\n    }\n    getLength() {\n        return this.items.length;\n    }\n    getItems() {\n        return this.items;\n    }\n    valueOf() {\n        return this.items.map((item) => item.valueOf());\n    }\n    equals(other) {\n        if (this.getLength() != other.getLength()) {\n            return false;\n        }\n        for (let i = 0; i < this.getLength(); i++) {\n            let selfItem = this.items[i];\n            let otherItem = other.items[i];\n            if (!selfItem.equals(otherItem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.CollectionOfTypedValues = CollectionOfTypedValues;\n//# sourceMappingURL=collections.js.map"]},"metadata":{},"sourceType":"script"}