{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressValue = exports.AddressType = void 0;\n\nvar types_1 = require(\"./types\");\n\nvar AddressType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(AddressType, _types_1$PrimitiveTyp);\n\n  var _super = _createSuper(AddressType);\n\n  function AddressType() {\n    _classCallCheck(this, AddressType);\n\n    return _super.call(this, \"Address\");\n  }\n\n  return _createClass(AddressType);\n}(types_1.PrimitiveType);\n\nexports.AddressType = AddressType;\n/**\n * An address fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nvar AddressValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(AddressValue, _types_1$PrimitiveVal);\n\n  var _super2 = _createSuper(AddressValue);\n\n  function AddressValue(value) {\n    var _this;\n\n    _classCallCheck(this, AddressValue);\n\n    _this = _super2.call(this, new AddressType());\n    _this.value = value;\n    return _this;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another AddressValue\n   */\n\n\n  _createClass(AddressValue, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.value.equals(other.value);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }]);\n\n  return AddressValue;\n}(types_1.PrimitiveValue);\n\nexports.AddressValue = AddressValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/address.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,W;;;;;EACT,uBAAA;IAAA;;IAAA,yBACU,SADV;EAEC;;;EAH4B,OAAA,CAAA,a;;AAAjC,OAAA,CAAA,WAAA,GAAA,WAAA;AAMA;;AAEG;;IACU,Y;;;;;EAGT,sBAAY,KAAZ,EAA0B;IAAA;;IAAA;;IACtB,2BAAM,IAAI,WAAJ,EAAN;IACA,MAAK,KAAL,GAAa,KAAb;IAFsB;EAGzB;EAED;;;;AAIG;;;;;WACH,gBAAO,KAAP,EAA0B;MACtB,OAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAAP;IACH;;;WAED,mBAAO;MACH,OAAO,KAAK,KAAZ;IACH;;;;EAnB6B,OAAA,CAAA,c;;AAAlC,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressValue = exports.AddressType = void 0;\nconst types_1 = require(\"./types\");\nclass AddressType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"Address\");\n    }\n}\nexports.AddressType = AddressType;\n/**\n * An address fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nclass AddressValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new AddressType());\n        this.value = value;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another AddressValue\n     */\n    equals(other) {\n        return this.value.equals(other.value);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.AddressValue = AddressValue;\n//# sourceMappingURL=address.js.map"]},"metadata":{},"sourceType":"script"}