{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariadicValue = exports.VariadicType = void 0;\n\nvar types_1 = require(\"./types\");\n\nvar VariadicType = /*#__PURE__*/function (_types_1$Type) {\n  _inherits(VariadicType, _types_1$Type);\n\n  var _super = _createSuper(VariadicType);\n\n  function VariadicType(typeParameter) {\n    _classCallCheck(this, VariadicType);\n\n    return _super.call(this, \"Variadic\", [typeParameter], types_1.TypeCardinality.variable());\n  }\n\n  return _createClass(VariadicType);\n}(types_1.Type);\n\nexports.VariadicType = VariadicType;\n/**\n * An abstraction that represents a sequence of values held under the umbrella of a variadic input / output parameter.\n *\n * Since at the time of constructing input parameters or decoding output parameters, the length is known,\n * this TypedValue behaves similar to a List.\n */\n\nvar VariadicValue = /*#__PURE__*/function (_types_1$TypedValue) {\n  _inherits(VariadicValue, _types_1$TypedValue);\n\n  var _super2 = _createSuper(VariadicValue);\n\n  /**\n   *\n   * @param type the type of this TypedValue (an instance of VariadicType), not the type parameter of the VariadicType\n   * @param items the items, having the type type.getFirstTypeParameter()\n   */\n  function VariadicValue(type, items) {\n    var _this;\n\n    _classCallCheck(this, VariadicValue);\n\n    _this = _super2.call(this, type); // TODO: assert items are of type type.getFirstTypeParameter()\n\n    _this.items = items;\n    return _this;\n  }\n\n  _createClass(VariadicValue, [{\n    key: \"getItems\",\n    value: function getItems() {\n      return this.items;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.items.map(function (item) {\n        return item.valueOf();\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (this.getType().differs(other.getType())) {\n        return false;\n      }\n\n      for (var i = 0; i < this.items.length; i++) {\n        var selfItem = this.items[i];\n        var otherItem = other.items[i];\n\n        if (!selfItem.equals(otherItem)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }], [{\n    key: \"fromItems\",\n    value: function fromItems() {\n      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n        items[_key] = arguments[_key];\n      }\n\n      if (items.length == 0) {\n        return new VariadicValue(new VariadicType(new types_1.TypePlaceholder()), []);\n      }\n\n      var typeParameter = items[0].getType();\n      return new VariadicValue(new VariadicType(typeParameter), items);\n    }\n  }]);\n\n  return VariadicValue;\n}(types_1.TypedValue);\n\nexports.VariadicValue = VariadicValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/variadic.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,Y;;;;;EACT,sBAAY,aAAZ,EAA+B;IAAA;;IAAA,yBACrB,UADqB,EACT,CAAC,aAAD,CADS,EACQ,OAAA,CAAA,eAAA,CAAgB,QAAhB,EADR;EAE9B;;;EAH6B,OAAA,CAAA,I;;AAAlC,OAAA,CAAA,YAAA,GAAA,YAAA;AAMA;;;;;AAKG;;IACU,a;;;;;EAGT;;;;AAIG;EACH,uBAAY,IAAZ,EAAgC,KAAhC,EAAmD;IAAA;;IAAA;;IAC/C,2BAAM,IAAN,EAD+C,CAG/C;;IAEA,MAAK,KAAL,GAAa,KAAb;IAL+C;EAMlD;;;;WAWD,oBAAQ;MACJ,OAAO,KAAK,KAAZ;IACH;;;WAED,mBAAO;MACH,OAAO,KAAK,KAAL,CAAW,GAAX,CAAe,UAAA,IAAI;QAAA,OAAI,IAAI,CAAC,OAAL,EAAJ;MAAA,CAAnB,CAAP;IACH;;;WAED,gBAAO,KAAP,EAA2B;MACvB,IAAI,KAAK,OAAL,GAAe,OAAf,CAAuB,KAAK,CAAC,OAAN,EAAvB,CAAJ,EAA6C;QACzC,OAAO,KAAP;MACH;;MAED,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;QACxC,IAAI,QAAQ,GAAG,KAAK,KAAL,CAAW,CAAX,CAAf;QACA,IAAI,SAAS,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAhB;;QAEA,IAAI,CAAC,QAAQ,CAAC,MAAT,CAAgB,SAAhB,CAAL,EAAiC;UAC7B,OAAO,KAAP;QACH;MACJ;;MAED,OAAO,IAAP;IACH;;;WAhCD,qBAAuC;MAAA,kCAAnB,KAAmB;QAAnB,KAAmB;MAAA;;MACnC,IAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;QACnB,OAAO,IAAI,aAAJ,CAAkB,IAAI,YAAJ,CAAiB,IAAI,OAAA,CAAA,eAAJ,EAAjB,CAAlB,EAA2D,EAA3D,CAAP;MACH;;MAED,IAAI,aAAa,GAAG,KAAK,CAAC,CAAD,CAAL,CAAS,OAAT,EAApB;MACA,OAAO,IAAI,aAAJ,CAAkB,IAAI,YAAJ,CAAiB,aAAjB,CAAlB,EAAmD,KAAnD,CAAP;IACH;;;;EAvB8B,OAAA,CAAA,U;;AAAnC,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VariadicValue = exports.VariadicType = void 0;\nconst types_1 = require(\"./types\");\nclass VariadicType extends types_1.Type {\n    constructor(typeParameter) {\n        super(\"Variadic\", [typeParameter], types_1.TypeCardinality.variable());\n    }\n}\nexports.VariadicType = VariadicType;\n/**\n * An abstraction that represents a sequence of values held under the umbrella of a variadic input / output parameter.\n *\n * Since at the time of constructing input parameters or decoding output parameters, the length is known,\n * this TypedValue behaves similar to a List.\n */\nclass VariadicValue extends types_1.TypedValue {\n    /**\n     *\n     * @param type the type of this TypedValue (an instance of VariadicType), not the type parameter of the VariadicType\n     * @param items the items, having the type type.getFirstTypeParameter()\n     */\n    constructor(type, items) {\n        super(type);\n        // TODO: assert items are of type type.getFirstTypeParameter()\n        this.items = items;\n    }\n    static fromItems(...items) {\n        if (items.length == 0) {\n            return new VariadicValue(new VariadicType(new types_1.TypePlaceholder()), []);\n        }\n        let typeParameter = items[0].getType();\n        return new VariadicValue(new VariadicType(typeParameter), items);\n    }\n    getItems() {\n        return this.items;\n    }\n    valueOf() {\n        return this.items.map(item => item.valueOf());\n    }\n    equals(other) {\n        if (this.getType().differs(other.getType())) {\n            return false;\n        }\n        for (let i = 0; i < this.items.length; i++) {\n            let selfItem = this.items[i];\n            let otherItem = other.items[i];\n            if (!selfItem.equals(otherItem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.VariadicValue = VariadicValue;\n//# sourceMappingURL=variadic.js.map"]},"metadata":{},"sourceType":"script"}