{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypedResult = exports.SmartContractResultItem = exports.SmartContractResults = void 0;\n\nconst address_1 = require(\"../address\");\n\nconst balance_1 = require(\"../balance\");\n\nconst hash_1 = require(\"../hash\");\n\nconst networkParams_1 = require(\"../networkParams\");\n\nconst nonce_1 = require(\"../nonce\");\n\nconst transaction_1 = require(\"../transaction\");\n\nconst argSerializer_1 = require(\"./argSerializer\");\n\nconst returnCode_1 = require(\"./returnCode\");\n\nconst result_1 = require(\"./result\");\n\nclass SmartContractResults {\n  constructor(items) {\n    this.items = [];\n    this.immediate = new TypedResult();\n    this.resultingCalls = [];\n    this.items = items;\n\n    if (this.items.length > 0) {\n      let immediateResult = this.findImmediateResult();\n\n      if (immediateResult) {\n        this.immediate = immediateResult;\n      }\n\n      this.resultingCalls = this.findResultingCalls();\n    }\n  }\n\n  static empty() {\n    return new SmartContractResults([]);\n  }\n\n  static fromHttpResponse(smartContractResults) {\n    let items = (smartContractResults || []).map(item => SmartContractResultItem.fromHttpResponse(item));\n    return new SmartContractResults(items);\n  }\n\n  findImmediateResult() {\n    let immediateItem = this.items.filter(item => isImmediateResult(item))[0];\n\n    if (immediateItem) {\n      return new TypedResult(immediateItem);\n    }\n\n    return undefined;\n  }\n\n  findResultingCalls() {\n    let otherItems = this.items.filter(item => !isImmediateResult(item));\n    let resultingCalls = otherItems.map(item => new TypedResult(item));\n    return resultingCalls;\n  }\n\n  getImmediate() {\n    return this.immediate;\n  }\n\n  getResultingCalls() {\n    return this.resultingCalls;\n  }\n\n  getAllResults() {\n    return this.items.map(item => new TypedResult(item));\n  }\n\n}\n\nexports.SmartContractResults = SmartContractResults;\n\nfunction isImmediateResult(item) {\n  return item.nonce.valueOf() != 0;\n}\n\nclass SmartContractResultItem {\n  constructor() {\n    this.hash = hash_1.Hash.empty();\n    this.nonce = new nonce_1.Nonce(0);\n    this.value = balance_1.Balance.Zero();\n    this.receiver = new address_1.Address();\n    this.sender = new address_1.Address();\n    this.data = \"\";\n    this.previousHash = hash_1.Hash.empty();\n    this.originalHash = hash_1.Hash.empty();\n    this.gasLimit = new networkParams_1.GasLimit(0);\n    this.gasPrice = new networkParams_1.GasPrice(0);\n    this.callType = 0;\n    this.returnMessage = \"\";\n  }\n\n  static fromHttpResponse(response) {\n    let item = new SmartContractResultItem();\n    item.hash = new transaction_1.TransactionHash(response.hash);\n    item.nonce = new nonce_1.Nonce(response.nonce || 0);\n    item.value = balance_1.Balance.fromString(response.value);\n    item.receiver = new address_1.Address(response.receiver);\n    item.sender = new address_1.Address(response.sender);\n    item.data = response.data || \"\";\n    item.previousHash = new transaction_1.TransactionHash(response.prevTxHash);\n    item.originalHash = new transaction_1.TransactionHash(response.originalTxHash);\n    item.gasLimit = new networkParams_1.GasLimit(response.gasLimit);\n    item.gasPrice = new networkParams_1.GasPrice(response.gasPrice);\n    item.callType = response.callType;\n    item.returnMessage = response.returnMessage;\n    return item;\n  }\n\n  getDataTokens() {\n    return new argSerializer_1.ArgSerializer().stringToBuffers(this.data);\n  }\n\n}\n\nexports.SmartContractResultItem = SmartContractResultItem;\n\nclass TypedResult extends SmartContractResultItem {\n  constructor(init) {\n    super();\n    Object.assign(this, init);\n  }\n\n  assertSuccess() {\n    result_1.Result.assertSuccess(this);\n  }\n\n  isSuccess() {\n    return this.getReturnCode().isSuccess();\n  }\n\n  getReturnCode() {\n    let tokens = this.getDataTokens();\n\n    if (tokens.length < 2) {\n      return returnCode_1.ReturnCode.None;\n    }\n\n    let returnCodeToken = tokens[1];\n    return returnCode_1.ReturnCode.fromBuffer(returnCodeToken);\n  }\n\n  outputUntyped() {\n    this.assertSuccess(); // Skip the first 2 SCRs (eg. the @6f6b from @6f6b@2b).\n\n    return this.getDataTokens().slice(2);\n  }\n\n  setEndpointDefinition(endpointDefinition) {\n    this.endpointDefinition = endpointDefinition;\n  }\n\n  getEndpointDefinition() {\n    return this.endpointDefinition;\n  }\n\n  getReturnMessage() {\n    return this.returnMessage;\n  }\n\n  outputTyped() {\n    return result_1.Result.outputTyped(this);\n  }\n\n  unpackOutput() {\n    return result_1.Result.unpackOutput(this);\n  }\n\n}\n\nexports.TypedResult = TypedResult;","map":{"version":3,"sources":["../../src/smartcontracts/smartContractResults.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedResult = exports.SmartContractResultItem = exports.SmartContractResults = void 0;\nconst address_1 = require(\"../address\");\nconst balance_1 = require(\"../balance\");\nconst hash_1 = require(\"../hash\");\nconst networkParams_1 = require(\"../networkParams\");\nconst nonce_1 = require(\"../nonce\");\nconst transaction_1 = require(\"../transaction\");\nconst argSerializer_1 = require(\"./argSerializer\");\nconst returnCode_1 = require(\"./returnCode\");\nconst result_1 = require(\"./result\");\nclass SmartContractResults {\n    constructor(items) {\n        this.items = [];\n        this.immediate = new TypedResult();\n        this.resultingCalls = [];\n        this.items = items;\n        if (this.items.length > 0) {\n            let immediateResult = this.findImmediateResult();\n            if (immediateResult) {\n                this.immediate = immediateResult;\n            }\n            this.resultingCalls = this.findResultingCalls();\n        }\n    }\n    static empty() {\n        return new SmartContractResults([]);\n    }\n    static fromHttpResponse(smartContractResults) {\n        let items = (smartContractResults || []).map((item) => SmartContractResultItem.fromHttpResponse(item));\n        return new SmartContractResults(items);\n    }\n    findImmediateResult() {\n        let immediateItem = this.items.filter(item => isImmediateResult(item))[0];\n        if (immediateItem) {\n            return new TypedResult(immediateItem);\n        }\n        return undefined;\n    }\n    findResultingCalls() {\n        let otherItems = this.items.filter(item => !isImmediateResult(item));\n        let resultingCalls = otherItems.map(item => new TypedResult(item));\n        return resultingCalls;\n    }\n    getImmediate() {\n        return this.immediate;\n    }\n    getResultingCalls() {\n        return this.resultingCalls;\n    }\n    getAllResults() {\n        return this.items.map(item => new TypedResult(item));\n    }\n}\nexports.SmartContractResults = SmartContractResults;\nfunction isImmediateResult(item) {\n    return item.nonce.valueOf() != 0;\n}\nclass SmartContractResultItem {\n    constructor() {\n        this.hash = hash_1.Hash.empty();\n        this.nonce = new nonce_1.Nonce(0);\n        this.value = balance_1.Balance.Zero();\n        this.receiver = new address_1.Address();\n        this.sender = new address_1.Address();\n        this.data = \"\";\n        this.previousHash = hash_1.Hash.empty();\n        this.originalHash = hash_1.Hash.empty();\n        this.gasLimit = new networkParams_1.GasLimit(0);\n        this.gasPrice = new networkParams_1.GasPrice(0);\n        this.callType = 0;\n        this.returnMessage = \"\";\n    }\n    static fromHttpResponse(response) {\n        let item = new SmartContractResultItem();\n        item.hash = new transaction_1.TransactionHash(response.hash);\n        item.nonce = new nonce_1.Nonce(response.nonce || 0);\n        item.value = balance_1.Balance.fromString(response.value);\n        item.receiver = new address_1.Address(response.receiver);\n        item.sender = new address_1.Address(response.sender);\n        item.data = response.data || \"\";\n        item.previousHash = new transaction_1.TransactionHash(response.prevTxHash);\n        item.originalHash = new transaction_1.TransactionHash(response.originalTxHash);\n        item.gasLimit = new networkParams_1.GasLimit(response.gasLimit);\n        item.gasPrice = new networkParams_1.GasPrice(response.gasPrice);\n        item.callType = response.callType;\n        item.returnMessage = response.returnMessage;\n        return item;\n    }\n    getDataTokens() {\n        return new argSerializer_1.ArgSerializer().stringToBuffers(this.data);\n    }\n}\nexports.SmartContractResultItem = SmartContractResultItem;\nclass TypedResult extends SmartContractResultItem {\n    constructor(init) {\n        super();\n        Object.assign(this, init);\n    }\n    assertSuccess() {\n        result_1.Result.assertSuccess(this);\n    }\n    isSuccess() {\n        return this.getReturnCode().isSuccess();\n    }\n    getReturnCode() {\n        let tokens = this.getDataTokens();\n        if (tokens.length < 2) {\n            return returnCode_1.ReturnCode.None;\n        }\n        let returnCodeToken = tokens[1];\n        return returnCode_1.ReturnCode.fromBuffer(returnCodeToken);\n    }\n    outputUntyped() {\n        this.assertSuccess();\n        // Skip the first 2 SCRs (eg. the @6f6b from @6f6b@2b).\n        return this.getDataTokens().slice(2);\n    }\n    setEndpointDefinition(endpointDefinition) {\n        this.endpointDefinition = endpointDefinition;\n    }\n    getEndpointDefinition() {\n        return this.endpointDefinition;\n    }\n    getReturnMessage() {\n        return this.returnMessage;\n    }\n    outputTyped() {\n        return result_1.Result.outputTyped(this);\n    }\n    unpackOutput() {\n        return result_1.Result.unpackOutput(this);\n    }\n}\nexports.TypedResult = TypedResult;\n//# sourceMappingURL=smartContractResults.js.map"]},"metadata":{},"sourceType":"script"}