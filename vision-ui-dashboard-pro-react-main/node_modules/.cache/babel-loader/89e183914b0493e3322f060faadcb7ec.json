{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenIdentifierCodec = void 0;\n\nvar bytes_1 = require(\"../typesystem/bytes\");\n\nvar tokenIdentifier_1 = require(\"../typesystem/tokenIdentifier\");\n\nvar bytes_2 = require(\"./bytes\");\n\nvar TokenIdentifierCodec = /*#__PURE__*/function () {\n  function TokenIdentifierCodec() {\n    _classCallCheck(this, TokenIdentifierCodec);\n\n    this.bytesCodec = new bytes_2.BytesBinaryCodec();\n  }\n\n  _createClass(TokenIdentifierCodec, [{\n    key: \"decodeNested\",\n    value: function decodeNested(buffer) {\n      var _this$bytesCodec$deco = this.bytesCodec.decodeNested(buffer),\n          _this$bytesCodec$deco2 = _slicedToArray(_this$bytesCodec$deco, 2),\n          bytesValue = _this$bytesCodec$deco2[0],\n          length = _this$bytesCodec$deco2[1];\n\n      return [new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf()), length];\n    }\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer) {\n      var bytesValue = this.bytesCodec.decodeTopLevel(buffer);\n      return new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf());\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(tokenIdentifier) {\n      var bytesValue = new bytes_1.BytesValue(tokenIdentifier.valueOf());\n      return this.bytesCodec.encodeNested(bytesValue);\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(tokenIdentifier) {\n      return tokenIdentifier.valueOf();\n    }\n  }]);\n\n  return TokenIdentifierCodec;\n}();\n\nexports.TokenIdentifierCodec = TokenIdentifierCodec;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/tokenIdentifier.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,oB;EAAb,gCAAA;IAAA;;IACqB,KAAA,UAAA,GAAa,IAAI,OAAA,CAAA,gBAAJ,EAAb;EAoBpB;;;;WAlBG,sBAAa,MAAb,EAA2B;MACvB,4BAA2B,KAAK,UAAL,CAAgB,YAAhB,CAA6B,MAA7B,CAA3B;MAAA;MAAA,IAAK,UAAL;MAAA,IAAiB,MAAjB;;MACA,OAAO,CAAC,IAAI,iBAAA,CAAA,oBAAJ,CAAyB,UAAU,CAAC,OAAX,EAAzB,CAAD,EAAiD,MAAjD,CAAP;IACH;;;WAED,wBAAe,MAAf,EAA6B;MACzB,IAAI,UAAU,GAAG,KAAK,UAAL,CAAgB,cAAhB,CAA+B,MAA/B,CAAjB;MACA,OAAO,IAAI,iBAAA,CAAA,oBAAJ,CAAyB,UAAU,CAAC,OAAX,EAAzB,CAAP;IACH;;;WAED,sBAAa,eAAb,EAAkD;MAC9C,IAAI,UAAU,GAAG,IAAI,OAAA,CAAA,UAAJ,CAAe,eAAe,CAAC,OAAhB,EAAf,CAAjB;MACA,OAAO,KAAK,UAAL,CAAgB,YAAhB,CAA6B,UAA7B,CAAP;IACH;;;WAED,wBAAe,eAAf,EAAoD;MAChD,OAAO,eAAe,CAAC,OAAhB,EAAP;IACH;;;;;;AApBL,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenIdentifierCodec = void 0;\nconst bytes_1 = require(\"../typesystem/bytes\");\nconst tokenIdentifier_1 = require(\"../typesystem/tokenIdentifier\");\nconst bytes_2 = require(\"./bytes\");\nclass TokenIdentifierCodec {\n    constructor() {\n        this.bytesCodec = new bytes_2.BytesBinaryCodec();\n    }\n    decodeNested(buffer) {\n        let [bytesValue, length] = this.bytesCodec.decodeNested(buffer);\n        return [new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf()), length];\n    }\n    decodeTopLevel(buffer) {\n        let bytesValue = this.bytesCodec.decodeTopLevel(buffer);\n        return new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf());\n    }\n    encodeNested(tokenIdentifier) {\n        let bytesValue = new bytes_1.BytesValue(tokenIdentifier.valueOf());\n        return this.bytesCodec.encodeNested(bytesValue);\n    }\n    encodeTopLevel(tokenIdentifier) {\n        return tokenIdentifier.valueOf();\n    }\n}\nexports.TokenIdentifierCodec = TokenIdentifierCodec;\n//# sourceMappingURL=tokenIdentifier.js.map"]},"metadata":{},"sourceType":"script"}