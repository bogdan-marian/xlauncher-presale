{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendContext = void 0;\n\nvar networkParams_1 = require(\"../../networkParams\");\n\nvar strictChecker_1 = require(\"../strictChecker\");\n\nvar errors_1 = require(\"../../errors\");\n\nvar systemWrapper_1 = require(\"./systemWrapper\");\n/**\n * Stores contextual information which is needed when preparing a transaction.\n */\n\n\nvar SendContext = /*#__PURE__*/function () {\n  function SendContext(provider) {\n    _classCallCheck(this, SendContext);\n\n    this.sender_ = null;\n    this.provider_ = provider;\n    this.gas_ = null;\n    this.logger_ = null;\n    this.value_ = null;\n    this.checker = new strictChecker_1.StrictChecker();\n  }\n\n  _createClass(SendContext, [{\n    key: \"provider\",\n    value: function provider(_provider) {\n      this.provider_ = _provider;\n      return this;\n    }\n  }, {\n    key: \"sender\",\n    value: function sender(_sender) {\n      this.sender_ = _sender;\n      return this;\n    }\n  }, {\n    key: \"gas\",\n    value: function gas(_gas) {\n      this.gas_ = new networkParams_1.GasLimit(_gas);\n      return this;\n    }\n  }, {\n    key: \"autoGas\",\n    value: function autoGas(baseGas) {\n      return this.gas(systemWrapper_1.getGasFromValue(baseGas, this.value_));\n    }\n  }, {\n    key: \"logger\",\n    value: function logger(_logger) {\n      this.logger_ = _logger;\n      return this;\n    }\n  }, {\n    key: \"value\",\n    value: function value(_value) {\n      this.value_ = _value;\n      return this;\n    }\n  }, {\n    key: \"getAndResetValue\",\n    value: function getAndResetValue() {\n      var value = this.value_;\n      this.value_ = null;\n      return value;\n    }\n  }, {\n    key: \"getSender\",\n    value: function getSender() {\n      if (this.sender_) {\n        return this.sender_;\n      }\n\n      throw new errors_1.Err(\"sender not set\");\n    }\n  }, {\n    key: \"getSenderOptional\",\n    value: function getSenderOptional() {\n      return this.sender_;\n    }\n  }, {\n    key: \"getProvider\",\n    value: function getProvider() {\n      return this.provider_;\n    }\n  }, {\n    key: \"getGasLimit\",\n    value: function getGasLimit() {\n      if (this.gas_) {\n        return this.gas_;\n      }\n\n      throw new errors_1.Err(\"gas limit not set\");\n    }\n  }, {\n    key: \"getLogger\",\n    value: function getLogger() {\n      return this.logger_;\n    }\n  }]);\n\n  return SendContext;\n}();\n\nexports.SendContext = SendContext;","map":{"version":3,"sources":["../../../src/smartcontracts/wrapper/sendContext.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAGA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAIA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;AAEG;;;IACU,W;EAQT,qBAAY,QAAZ,EAA+B;IAAA;;IAC3B,KAAK,OAAL,GAAe,IAAf;IACA,KAAK,SAAL,GAAiB,QAAjB;IACA,KAAK,IAAL,GAAY,IAAZ;IACA,KAAK,OAAL,GAAe,IAAf;IACA,KAAK,MAAL,GAAc,IAAd;IACA,KAAK,OAAL,GAAe,IAAI,eAAA,CAAA,aAAJ,EAAf;EACH;;;;WAED,kBAAS,SAAT,EAA4B;MACxB,KAAK,SAAL,GAAiB,SAAjB;MACA,OAAO,IAAP;IACH;;;WAED,gBAAO,OAAP,EAAyB;MACrB,KAAK,OAAL,GAAe,OAAf;MACA,OAAO,IAAP;IACH;;;WAED,aAAI,IAAJ,EAAe;MACX,KAAK,IAAL,GAAY,IAAI,eAAA,CAAA,QAAJ,CAAa,IAAb,CAAZ;MACA,OAAO,IAAP;IACH;;;WAED,iBAAQ,OAAR,EAAuB;MACnB,OAAO,KAAK,GAAL,CAAS,eAAA,CAAA,eAAA,CAAgB,OAAhB,EAAyB,KAAK,MAA9B,CAAT,CAAP;IACH;;;WAED,gBAAO,OAAP,EAAoC;MAChC,KAAK,OAAL,GAAe,OAAf;MACA,OAAO,IAAP;IACH;;;WAED,eAAM,MAAN,EAAoB;MAChB,KAAK,MAAL,GAAc,MAAd;MACA,OAAO,IAAP;IACH;;;WAED,4BAAgB;MACZ,IAAI,KAAK,GAAG,KAAK,MAAjB;MACA,KAAK,MAAL,GAAc,IAAd;MACA,OAAO,KAAP;IACH;;;WAED,qBAAS;MACL,IAAI,KAAK,OAAT,EAAkB;QACd,OAAO,KAAK,OAAZ;MACH;;MACD,MAAM,IAAI,QAAA,CAAA,GAAJ,CAAQ,gBAAR,CAAN;IACH;;;WAED,6BAAiB;MACb,OAAO,KAAK,OAAZ;IACH;;;WAED,uBAAW;MACP,OAAO,KAAK,SAAZ;IACH;;;WAED,uBAAW;MACP,IAAI,KAAK,IAAT,EAAe;QACX,OAAO,KAAK,IAAZ;MACH;;MACD,MAAM,IAAI,QAAA,CAAA,GAAJ,CAAQ,mBAAR,CAAN;IACH;;;WAED,qBAAS;MACL,OAAO,KAAK,OAAZ;IACH;;;;;;AA5EL,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendContext = void 0;\nconst networkParams_1 = require(\"../../networkParams\");\nconst strictChecker_1 = require(\"../strictChecker\");\nconst errors_1 = require(\"../../errors\");\nconst systemWrapper_1 = require(\"./systemWrapper\");\n/**\n * Stores contextual information which is needed when preparing a transaction.\n */\nclass SendContext {\n    constructor(provider) {\n        this.sender_ = null;\n        this.provider_ = provider;\n        this.gas_ = null;\n        this.logger_ = null;\n        this.value_ = null;\n        this.checker = new strictChecker_1.StrictChecker();\n    }\n    provider(provider) {\n        this.provider_ = provider;\n        return this;\n    }\n    sender(sender) {\n        this.sender_ = sender;\n        return this;\n    }\n    gas(gas) {\n        this.gas_ = new networkParams_1.GasLimit(gas);\n        return this;\n    }\n    autoGas(baseGas) {\n        return this.gas(systemWrapper_1.getGasFromValue(baseGas, this.value_));\n    }\n    logger(logger) {\n        this.logger_ = logger;\n        return this;\n    }\n    value(value) {\n        this.value_ = value;\n        return this;\n    }\n    getAndResetValue() {\n        let value = this.value_;\n        this.value_ = null;\n        return value;\n    }\n    getSender() {\n        if (this.sender_) {\n            return this.sender_;\n        }\n        throw new errors_1.Err(\"sender not set\");\n    }\n    getSenderOptional() {\n        return this.sender_;\n    }\n    getProvider() {\n        return this.provider_;\n    }\n    getGasLimit() {\n        if (this.gas_) {\n            return this.gas_;\n        }\n        throw new errors_1.Err(\"gas limit not set\");\n    }\n    getLogger() {\n        return this.logger_;\n    }\n}\nexports.SendContext = SendContext;\n//# sourceMappingURL=sendContext.js.map"]},"metadata":{},"sourceType":"script"}