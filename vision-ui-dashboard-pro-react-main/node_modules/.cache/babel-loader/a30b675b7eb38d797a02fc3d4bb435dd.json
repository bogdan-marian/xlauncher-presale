{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiNetworkProvider = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar account_1 = require(\"../account\");\n\nvar constants_1 = require(\"../constants\");\n\nvar errors_1 = require(\"../errors\");\n\nvar interface_1 = require(\"./interface\");\n\nvar logger_1 = require(\"../logger\");\n\nvar networkStake_1 = require(\"../networkStake\");\n\nvar stats_1 = require(\"../stats\");\n\nvar transaction_1 = require(\"../transaction\");\n\nvar contractResults_1 = require(\"./contractResults\");\n\nvar proxyNetworkProvider_1 = require(\"./proxyNetworkProvider\");\n\nvar tokenDefinitions_1 = require(\"./tokenDefinitions\");\n\nvar tokens_1 = require(\"./tokens\");\n\nvar transactions_1 = require(\"./transactions\"); // TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\n\n\nvar ApiNetworkProvider = /*#__PURE__*/function () {\n  function ApiNetworkProvider(url, config) {\n    _classCallCheck(this, ApiNetworkProvider);\n\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n    this.backingProxyNetworkProvider = new proxyNetworkProvider_1.ProxyNetworkProvider(url, config);\n  }\n\n  _createClass(ApiNetworkProvider, [{\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkConfig();\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkStatus();\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStakeStatistics\",\n    value: function getNetworkStakeStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response, networkStake;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doGetGeneric(\"stake\");\n\n              case 2:\n                response = _context3.sent;\n                networkStake = networkStake_1.NetworkStake.fromHttpResponse(response);\n                return _context3.abrupt(\"return\", networkStake);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkGeneralStatistics\",\n    value: function getNetworkGeneralStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response, stats;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doGetGeneric(\"stats\");\n\n              case 2:\n                response = _context4.sent;\n                stats = stats_1.Stats.fromHttpResponse(response);\n                return _context4.abrupt(\"return\", stats);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response, account;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32()));\n\n              case 2:\n                response = _context5.sent;\n                account = account_1.AccountOnNetwork.fromHttpResponse(response);\n                return _context5.abrupt(\"return\", account);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokensOfAccount\",\n    value: function getFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var url, response, tokens;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                pagination = pagination || interface_1.Pagination.default();\n                url = \"accounts/\".concat(address.bech32(), \"/tokens?\").concat(this.buildPaginationParams(pagination));\n                _context6.next = 4;\n                return this.doGetGeneric(url);\n\n              case 4:\n                response = _context6.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item);\n                }); // TODO: Fix sorting\n\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context6.abrupt(\"return\", tokens);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokensOfAccount\",\n    value: function getNonFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var url, response, tokens;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                pagination = pagination || interface_1.Pagination.default();\n                url = \"accounts/\".concat(address.bech32(), \"/nfts?\").concat(this.buildPaginationParams(pagination));\n                _context7.next = 4;\n                return this.doGetGeneric(url);\n\n              case 4:\n                response = _context7.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(item);\n                }); // TODO: Fix sorting\n\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context7.abrupt(\"return\", tokens);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokenOfAccount\",\n    value: function getFungibleTokenOfAccount(address, tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var response, tokenData;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/tokens/\").concat(tokenIdentifier));\n\n              case 2:\n                response = _context8.sent;\n                tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response);\n                return _context8.abrupt(\"return\", tokenData);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokenOfAccount\",\n    value: function getNonFungibleTokenOfAccount(address, collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var response, tokenData;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/nfts/\").concat(collection, \"-\").concat(nonce.hex()));\n\n              case 2:\n                response = _context9.sent;\n                tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context9.abrupt(\"return\", tokenData);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var response, transaction;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash.toString()));\n\n              case 2:\n                response = _context10.sent;\n                transaction = transactions_1.TransactionOnNetwork.fromApiHttpResponse(txHash, response);\n                return _context10.abrupt(\"return\", transaction);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var response, status;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash.toString(), \"?fields=status\"));\n\n              case 2:\n                response = _context11.sent;\n                status = new transaction_1.TransactionStatus(response.status);\n                return _context11.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var response, hash;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doPostGeneric(\"transactions\", tx.toSendable());\n\n              case 2:\n                response = _context12.sent;\n                hash = new transaction_1.TransactionHash(response.txHash);\n                return _context12.abrupt(\"return\", hash);\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.backingProxyNetworkProvider.simulateTransaction(tx);\n\n              case 2:\n                return _context13.abrupt(\"return\", _context13.sent);\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var data, response, queryResponse;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                data = query.toHttpRequest();\n                _context14.next = 3;\n                return this.doPostGeneric(\"query\", data);\n\n              case 3:\n                response = _context14.sent;\n                queryResponse = contractResults_1.ContractQueryResponse.fromHttpResponse(response);\n                return _context14.abrupt(\"return\", queryResponse);\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfFungibleToken\",\n    value: function getDefinitionOfFungibleToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var response, definition;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.doGetGeneric(\"tokens/\".concat(tokenIdentifier));\n\n              case 2:\n                response = _context15.sent;\n                definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromApiHttpResponse(response);\n                return _context15.abrupt(\"return\", definition);\n\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfTokenCollection\",\n    value: function getDefinitionOfTokenCollection(collection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var response, definition;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.doGetGeneric(\"collections/\".concat(collection));\n\n              case 2:\n                response = _context16.sent;\n                definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromApiHttpResponse(response);\n                return _context16.abrupt(\"return\", definition);\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleToken\",\n    value: function getNonFungibleToken(collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var response, token;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.doGetGeneric(\"nfts/\".concat(collection, \"-\").concat(nonce.hex()));\n\n              case 2:\n                response = _context17.sent;\n                token = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context17.abrupt(\"return\", token);\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.doGet(resourceUrl);\n\n              case 2:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.doPost(resourceUrl, payload);\n\n              case 2:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n    }\n  }, {\n    key: \"buildPaginationParams\",\n    value: function buildPaginationParams(pagination) {\n      return \"from=\".concat(pagination.from, \"&size=\").concat(pagination.size);\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        var url, response;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.prev = 0;\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context20.next = 4;\n                return axios_1.default.get(url, this.config);\n\n              case 4:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response.data);\n\n              case 8:\n                _context20.prev = 8;\n                _context20.t0 = _context20[\"catch\"](0);\n                this.handleApiError(_context20.t0, resourceUrl);\n\n              case 11:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[0, 8]]);\n      }));\n    }\n  }, {\n    key: \"doPost\",\n    value: function doPost(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n        var url, response, responsePayload;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.prev = 0;\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context21.next = 4;\n                return axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }));\n\n              case 4:\n                response = _context21.sent;\n                responsePayload = response.data;\n                return _context21.abrupt(\"return\", responsePayload);\n\n              case 9:\n                _context21.prev = 9;\n                _context21.t0 = _context21[\"catch\"](0);\n                this.handleApiError(_context21.t0, resourceUrl);\n\n              case 12:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        logger_1.Logger.warn(error);\n        throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n      }\n\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n\n  return ApiNetworkProvider;\n}();\n\nexports.ApiNetworkProvider = ApiNetworkProvider;","map":{"version":3,"sources":["../../src/networkProvider/apiNetworkProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiNetworkProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst account_1 = require(\"../account\");\nconst constants_1 = require(\"../constants\");\nconst errors_1 = require(\"../errors\");\nconst interface_1 = require(\"./interface\");\nconst logger_1 = require(\"../logger\");\nconst networkStake_1 = require(\"../networkStake\");\nconst stats_1 = require(\"../stats\");\nconst transaction_1 = require(\"../transaction\");\nconst contractResults_1 = require(\"./contractResults\");\nconst proxyNetworkProvider_1 = require(\"./proxyNetworkProvider\");\nconst tokenDefinitions_1 = require(\"./tokenDefinitions\");\nconst tokens_1 = require(\"./tokens\");\nconst transactions_1 = require(\"./transactions\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nclass ApiNetworkProvider {\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n        this.backingProxyNetworkProvider = new proxyNetworkProvider_1.ProxyNetworkProvider(url, config);\n    }\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.getNetworkConfig();\n        });\n    }\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.getNetworkStatus();\n        });\n    }\n    getNetworkStakeStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"stake\");\n            let networkStake = networkStake_1.NetworkStake.fromHttpResponse(response);\n            return networkStake;\n        });\n    }\n    getNetworkGeneralStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"stats\");\n            let stats = stats_1.Stats.fromHttpResponse(response);\n            return stats;\n        });\n    }\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}`);\n            let account = account_1.AccountOnNetwork.fromHttpResponse(response);\n            return account;\n        });\n    }\n    getFungibleTokensOfAccount(address, pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            pagination = pagination || interface_1.Pagination.default();\n            let url = `accounts/${address.bech32()}/tokens?${this.buildPaginationParams(pagination)}`;\n            let response = yield this.doGetGeneric(url);\n            let tokens = response.map(item => tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getNonFungibleTokensOfAccount(address, pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            pagination = pagination || interface_1.Pagination.default();\n            let url = `accounts/${address.bech32()}/nfts?${this.buildPaginationParams(pagination)}`;\n            let response = yield this.doGetGeneric(url);\n            let tokens = response.map(item => tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getFungibleTokenOfAccount(address, tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}/tokens/${tokenIdentifier}`);\n            let tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response);\n            return tokenData;\n        });\n    }\n    getNonFungibleTokenOfAccount(address, collection, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}/nfts/${collection}-${nonce.hex()}`);\n            let tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n            return tokenData;\n        });\n    }\n    getTransaction(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`transactions/${txHash.toString()}`);\n            let transaction = transactions_1.TransactionOnNetwork.fromApiHttpResponse(txHash, response);\n            return transaction;\n        });\n    }\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`transactions/${txHash.toString()}?fields=status`);\n            let status = new transaction_1.TransactionStatus(response.status);\n            return status;\n        });\n    }\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPostGeneric(\"transactions\", tx.toSendable());\n            let hash = new transaction_1.TransactionHash(response.txHash);\n            return hash;\n        });\n    }\n    simulateTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.simulateTransaction(tx);\n        });\n    }\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = query.toHttpRequest();\n            let response = yield this.doPostGeneric(\"query\", data);\n            let queryResponse = contractResults_1.ContractQueryResponse.fromHttpResponse(response);\n            return queryResponse;\n        });\n    }\n    getDefinitionOfFungibleToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`tokens/${tokenIdentifier}`);\n            let definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromApiHttpResponse(response);\n            return definition;\n        });\n    }\n    getDefinitionOfTokenCollection(collection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`collections/${collection}`);\n            let definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromApiHttpResponse(response);\n            return definition;\n        });\n    }\n    getNonFungibleToken(collection, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`nfts/${collection}-${nonce.hex()}`);\n            let token = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n            return token;\n        });\n    }\n    doGetGeneric(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return response;\n        });\n    }\n    doPostGeneric(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPost(resourceUrl, payload);\n            return response;\n        });\n    }\n    buildPaginationParams(pagination) {\n        return `from=${pagination.from}&size=${pagination.size}`;\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.get(url, this.config);\n                return response.data;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    doPost(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), { headers: {\n                        \"Content-Type\": \"application/json\",\n                    } }));\n                let responsePayload = response.data;\n                return responsePayload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            logger_1.Logger.warn(error);\n            throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ApiNetworkProvider = ApiNetworkProvider;\n//# sourceMappingURL=apiNetworkProvider.js.map"]},"metadata":{},"sourceType":"script"}