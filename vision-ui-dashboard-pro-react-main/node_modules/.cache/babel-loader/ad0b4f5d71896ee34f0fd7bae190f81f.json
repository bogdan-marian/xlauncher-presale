{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkConfig = void 0;\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst networkParams_1 = require(\"./networkParams\");\n/**\n * An object holding Network configuration parameters.\n */\n\n\nclass NetworkConfig {\n  constructor() {\n    this.ChainID = new networkParams_1.ChainID(\"T\");\n    this.GasPerDataByte = 1500;\n    this.TopUpFactor = 0;\n    this.RoundDuration = 0;\n    this.RoundsPerEpoch = 0;\n    this.TopUpRewardsGradientPoint = new bignumber_js_1.default(0);\n    this.MinGasLimit = new networkParams_1.GasLimit(50000);\n    this.MinGasPrice = new networkParams_1.GasPrice(1000000000);\n    this.GasPriceModifier = new networkParams_1.GasPriceModifier(1);\n    this.MinTransactionVersion = new networkParams_1.TransactionVersion(1);\n  }\n  /**\n   * Gets the default configuration object (think of the Singleton pattern).\n   */\n\n\n  static getDefault() {\n    if (!NetworkConfig.default) {\n      NetworkConfig.default = new NetworkConfig();\n    }\n\n    return NetworkConfig.default;\n  }\n  /**\n   * Synchronizes a configuration object by querying the Network, through a {@link IProvider}.\n   * @param provider The provider to use\n   */\n\n\n  sync(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let fresh = yield provider.getNetworkConfig();\n      Object.assign(this, fresh);\n    });\n  }\n  /**\n   * Constructs a configuration object from a HTTP response (as returned by the provider).\n   */\n\n\n  static fromHttpResponse(payload) {\n    let networkConfig = new NetworkConfig();\n    networkConfig.ChainID = new networkParams_1.ChainID(payload[\"erd_chain_id\"]);\n    networkConfig.GasPerDataByte = Number(payload[\"erd_gas_per_data_byte\"]);\n    networkConfig.TopUpFactor = Number(payload[\"erd_top_up_factor\"]);\n    networkConfig.RoundDuration = Number(payload[\"erd_round_duration\"]);\n    networkConfig.RoundsPerEpoch = Number(payload[\"erd_rounds_per_epoch\"]);\n    networkConfig.TopUpRewardsGradientPoint = new bignumber_js_1.default(payload[\"erd_rewards_top_up_gradient_point\"]);\n    networkConfig.MinGasLimit = new networkParams_1.GasLimit(payload[\"erd_min_gas_limit\"]);\n    networkConfig.MinGasPrice = new networkParams_1.GasPrice(payload[\"erd_min_gas_price\"]);\n    networkConfig.MinTransactionVersion = new networkParams_1.TransactionVersion(payload[\"erd_min_transaction_version\"]);\n    networkConfig.GasPriceModifier = new networkParams_1.GasPriceModifier(payload[\"erd_gas_price_modifier\"]);\n    return networkConfig;\n  }\n\n}\n\nexports.NetworkConfig = NetworkConfig;","map":{"version":3,"sources":["../src/networkConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AAEA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;AAEG;;;AACH,MAAa,aAAb,CAA0B;EAmDtB,WAAA,GAAA;IACI,KAAK,OAAL,GAAe,IAAI,eAAA,CAAA,OAAJ,CAAY,GAAZ,CAAf;IACA,KAAK,cAAL,GAAsB,IAAtB;IACA,KAAK,WAAL,GAAmB,CAAnB;IACA,KAAK,aAAL,GAAqB,CAArB;IACA,KAAK,cAAL,GAAsB,CAAtB;IACA,KAAK,yBAAL,GAAiC,IAAI,cAAA,CAAA,OAAJ,CAAc,CAAd,CAAjC;IACA,KAAK,WAAL,GAAmB,IAAI,eAAA,CAAA,QAAJ,CAAa,KAAb,CAAnB;IACA,KAAK,WAAL,GAAmB,IAAI,eAAA,CAAA,QAAJ,CAAa,UAAb,CAAnB;IACA,KAAK,gBAAL,GAAwB,IAAI,eAAA,CAAA,gBAAJ,CAAqB,CAArB,CAAxB;IACA,KAAK,qBAAL,GAA6B,IAAI,eAAA,CAAA,kBAAJ,CAAuB,CAAvB,CAA7B;EACH;EAED;;AAEG;;;EACc,OAAV,UAAU,GAAA;IACb,IAAI,CAAC,aAAa,CAAC,OAAnB,EAA4B;MACxB,aAAa,CAAC,OAAd,GAAwB,IAAI,aAAJ,EAAxB;IACH;;IAED,OAAO,aAAa,CAAC,OAArB;EACH;EAED;;;AAGG;;;EACG,IAAI,CAAC,QAAD,EAAoB;;MAC1B,IAAI,KAAK,GAAkB,MAAM,QAAQ,CAAC,gBAAT,EAAjC;MACA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,KAApB;IACH,C;EAAA;EAED;;AAEG;;;EACoB,OAAhB,gBAAgB,CAAC,OAAD,EAAa;IAChC,IAAI,aAAa,GAAG,IAAI,aAAJ,EAApB;IAEA,aAAa,CAAC,OAAd,GAAwB,IAAI,eAAA,CAAA,OAAJ,CAAY,OAAO,CAAC,cAAD,CAAnB,CAAxB;IACA,aAAa,CAAC,cAAd,GAA+B,MAAM,CAAC,OAAO,CAAC,uBAAD,CAAR,CAArC;IACA,aAAa,CAAC,WAAd,GAA4B,MAAM,CAAC,OAAO,CAAC,mBAAD,CAAR,CAAlC;IACA,aAAa,CAAC,aAAd,GAA8B,MAAM,CAAC,OAAO,CAAC,oBAAD,CAAR,CAApC;IACA,aAAa,CAAC,cAAd,GAA+B,MAAM,CAAC,OAAO,CAAC,sBAAD,CAAR,CAArC;IACA,aAAa,CAAC,yBAAd,GAA0C,IAAI,cAAA,CAAA,OAAJ,CAAc,OAAO,CAAC,mCAAD,CAArB,CAA1C;IACA,aAAa,CAAC,WAAd,GAA4B,IAAI,eAAA,CAAA,QAAJ,CAAa,OAAO,CAAC,mBAAD,CAApB,CAA5B;IACA,aAAa,CAAC,WAAd,GAA4B,IAAI,eAAA,CAAA,QAAJ,CAAa,OAAO,CAAC,mBAAD,CAApB,CAA5B;IACA,aAAa,CAAC,qBAAd,GAAsC,IAAI,eAAA,CAAA,kBAAJ,CAAuB,OAAO,CAAC,6BAAD,CAA9B,CAAtC;IACA,aAAa,CAAC,gBAAd,GAAiC,IAAI,eAAA,CAAA,gBAAJ,CAAqB,OAAO,CAAC,wBAAD,CAA5B,CAAjC;IAEA,OAAO,aAAP;EACH;;AAtGqB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkConfig = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst networkParams_1 = require(\"./networkParams\");\n/**\n * An object holding Network configuration parameters.\n */\nclass NetworkConfig {\n    constructor() {\n        this.ChainID = new networkParams_1.ChainID(\"T\");\n        this.GasPerDataByte = 1500;\n        this.TopUpFactor = 0;\n        this.RoundDuration = 0;\n        this.RoundsPerEpoch = 0;\n        this.TopUpRewardsGradientPoint = new bignumber_js_1.default(0);\n        this.MinGasLimit = new networkParams_1.GasLimit(50000);\n        this.MinGasPrice = new networkParams_1.GasPrice(1000000000);\n        this.GasPriceModifier = new networkParams_1.GasPriceModifier(1);\n        this.MinTransactionVersion = new networkParams_1.TransactionVersion(1);\n    }\n    /**\n     * Gets the default configuration object (think of the Singleton pattern).\n     */\n    static getDefault() {\n        if (!NetworkConfig.default) {\n            NetworkConfig.default = new NetworkConfig();\n        }\n        return NetworkConfig.default;\n    }\n    /**\n     * Synchronizes a configuration object by querying the Network, through a {@link IProvider}.\n     * @param provider The provider to use\n     */\n    sync(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let fresh = yield provider.getNetworkConfig();\n            Object.assign(this, fresh);\n        });\n    }\n    /**\n     * Constructs a configuration object from a HTTP response (as returned by the provider).\n     */\n    static fromHttpResponse(payload) {\n        let networkConfig = new NetworkConfig();\n        networkConfig.ChainID = new networkParams_1.ChainID(payload[\"erd_chain_id\"]);\n        networkConfig.GasPerDataByte = Number(payload[\"erd_gas_per_data_byte\"]);\n        networkConfig.TopUpFactor = Number(payload[\"erd_top_up_factor\"]);\n        networkConfig.RoundDuration = Number(payload[\"erd_round_duration\"]);\n        networkConfig.RoundsPerEpoch = Number(payload[\"erd_rounds_per_epoch\"]);\n        networkConfig.TopUpRewardsGradientPoint = new bignumber_js_1.default(payload[\"erd_rewards_top_up_gradient_point\"]);\n        networkConfig.MinGasLimit = new networkParams_1.GasLimit(payload[\"erd_min_gas_limit\"]);\n        networkConfig.MinGasPrice = new networkParams_1.GasPrice(payload[\"erd_min_gas_price\"]);\n        networkConfig.MinTransactionVersion = new networkParams_1.TransactionVersion(payload[\"erd_min_transaction_version\"]);\n        networkConfig.GasPriceModifier = new networkParams_1.GasPriceModifier(payload[\"erd_gas_price_modifier\"]);\n        return networkConfig;\n    }\n}\nexports.NetworkConfig = NetworkConfig;\n//# sourceMappingURL=networkConfig.js.map"]},"metadata":{},"sourceType":"script"}