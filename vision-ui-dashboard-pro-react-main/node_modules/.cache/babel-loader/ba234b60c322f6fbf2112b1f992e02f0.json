{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncTimer = void 0;\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst logger_1 = require(\"./logger\");\n/*\n * AsyncTimer is an async-friendly abstraction that wraps JavaScript's setTimeout() and clearTimeout().\n */\n\n\nclass AsyncTimer {\n  /**\n   * Creates an AsyncTimer.\n   */\n  constructor(name) {\n    this.timeoutHandle = null;\n    this.rejectionFunc = null;\n    this.name = name;\n    this.correlationTag = 0;\n  }\n  /**\n   * Starts the timer.\n   * @param timeout The time (in milliseconds) to wait until resolving the promise.\n   */\n\n\n  start(timeout) {\n    if (this.timeoutHandle) {\n      throw new errors.ErrAsyncTimerAlreadyRunning();\n    }\n\n    this.correlationTag++;\n    logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].start()`);\n    return new Promise((resolve, reject) => {\n      this.rejectionFunc = reject;\n\n      let timeoutCallback = () => {\n        this.rejectionFunc = null;\n        this.stop();\n        resolve();\n      };\n\n      this.timeoutHandle = setTimeout(timeoutCallback, timeout);\n    });\n  }\n  /**\n   * Aborts the timer: rejects the promise (if any) and stops the timer.\n   */\n\n\n  abort() {\n    logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].abort()`);\n\n    if (this.rejectionFunc) {\n      this.rejectionFunc(new errors_1.ErrAsyncTimerAborted());\n      this.rejectionFunc = null;\n    }\n\n    this.stop();\n  }\n  /**\n   * Stops the timer.\n   */\n\n\n  stop() {\n    if (this.isStopped()) {\n      return;\n    }\n\n    logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].stop()`);\n\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = null;\n    }\n  }\n  /**\n   * Returns whether the timer is stopped.\n   */\n\n\n  isStopped() {\n    return this.timeoutHandle ? false : true;\n  }\n\n}\n\nexports.AsyncTimer = AsyncTimer;","map":{"version":3,"sources":["../src/asyncTimer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA;;AAEG;;;AACH,MAAa,UAAb,CAAuB;EAMnB;;AAEG;EACH,WAAA,CAAY,IAAZ,EAAwB;IAPhB,KAAA,aAAA,GAAqB,IAArB;IACA,KAAA,aAAA,GAAqB,IAArB;IAOJ,KAAK,IAAL,GAAY,IAAZ;IACA,KAAK,cAAL,GAAsB,CAAtB;EACH;EAED;;;AAGG;;;EACI,KAAK,CAAC,OAAD,EAAgB;IACxB,IAAI,KAAK,aAAT,EAAwB;MACpB,MAAM,IAAI,MAAM,CAAC,2BAAX,EAAN;IACH;;IAED,KAAK,cAAL;IACA,QAAA,CAAA,MAAA,CAAO,KAAP,CAAa,cAAc,KAAK,IAAI,IAAI,KAAK,cAAc,WAA3D;IAEA,OAAO,IAAI,OAAJ,CAAkB,CAAC,OAAD,EAAU,MAAV,KAAoB;MACzC,KAAK,aAAL,GAAqB,MAArB;;MAEA,IAAI,eAAe,GAAG,MAAK;QACvB,KAAK,aAAL,GAAqB,IAArB;QACA,KAAK,IAAL;QACA,OAAO;MACV,CAJD;;MAMA,KAAK,aAAL,GAAqB,UAAU,CAAC,eAAD,EAAkB,OAAlB,CAA/B;IACH,CAVM,CAAP;EAWH;EAED;;AAEG;;;EACI,KAAK,GAAA;IACR,QAAA,CAAA,MAAA,CAAO,KAAP,CAAa,cAAc,KAAK,IAAI,IAAI,KAAK,cAAc,WAA3D;;IAEA,IAAI,KAAK,aAAT,EAAwB;MACpB,KAAK,aAAL,CAAmB,IAAI,QAAA,CAAA,oBAAJ,EAAnB;MACA,KAAK,aAAL,GAAqB,IAArB;IACH;;IAED,KAAK,IAAL;EACH;EAED;;AAEG;;;EACI,IAAI,GAAA;IACP,IAAI,KAAK,SAAL,EAAJ,EAAsB;MAClB;IACH;;IAED,QAAA,CAAA,MAAA,CAAO,KAAP,CAAa,cAAc,KAAK,IAAI,IAAI,KAAK,cAAc,UAA3D;;IAEA,IAAI,KAAK,aAAT,EAAwB;MACpB,YAAY,CAAC,KAAK,aAAN,CAAZ;MACA,KAAK,aAAL,GAAqB,IAArB;IACH;EACJ;EAED;;AAEG;;;EACI,SAAS,GAAA;IACZ,OAAO,KAAK,aAAL,GAAqB,KAArB,GAA6B,IAApC;EACH;;AA1EkB;;AAAvB,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncTimer = void 0;\nconst errors = __importStar(require(\"./errors\"));\nconst errors_1 = require(\"./errors\");\nconst logger_1 = require(\"./logger\");\n/*\n * AsyncTimer is an async-friendly abstraction that wraps JavaScript's setTimeout() and clearTimeout().\n */\nclass AsyncTimer {\n    /**\n     * Creates an AsyncTimer.\n     */\n    constructor(name) {\n        this.timeoutHandle = null;\n        this.rejectionFunc = null;\n        this.name = name;\n        this.correlationTag = 0;\n    }\n    /**\n     * Starts the timer.\n     * @param timeout The time (in milliseconds) to wait until resolving the promise.\n     */\n    start(timeout) {\n        if (this.timeoutHandle) {\n            throw new errors.ErrAsyncTimerAlreadyRunning();\n        }\n        this.correlationTag++;\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].start()`);\n        return new Promise((resolve, reject) => {\n            this.rejectionFunc = reject;\n            let timeoutCallback = () => {\n                this.rejectionFunc = null;\n                this.stop();\n                resolve();\n            };\n            this.timeoutHandle = setTimeout(timeoutCallback, timeout);\n        });\n    }\n    /**\n     * Aborts the timer: rejects the promise (if any) and stops the timer.\n     */\n    abort() {\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].abort()`);\n        if (this.rejectionFunc) {\n            this.rejectionFunc(new errors_1.ErrAsyncTimerAborted());\n            this.rejectionFunc = null;\n        }\n        this.stop();\n    }\n    /**\n     * Stops the timer.\n     */\n    stop() {\n        if (this.isStopped()) {\n            return;\n        }\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].stop()`);\n        if (this.timeoutHandle) {\n            clearTimeout(this.timeoutHandle);\n            this.timeoutHandle = null;\n        }\n    }\n    /**\n     * Returns whether the timer is stopped.\n     */\n    isStopped() {\n        return this.timeoutHandle ? false : true;\n    }\n}\nexports.AsyncTimer = AsyncTimer;\n//# sourceMappingURL=asyncTimer.js.map"]},"metadata":{},"sourceType":"script"}