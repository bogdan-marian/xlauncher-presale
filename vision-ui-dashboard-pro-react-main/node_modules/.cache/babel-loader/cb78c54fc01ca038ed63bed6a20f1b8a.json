{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddImmediateResult = exports.MarkNotarized = exports.Wait = exports.MockProvider = void 0;\n\nvar transaction_1 = require(\"../transaction\");\n\nvar transactionOnNetwork_1 = require(\"../transactionOnNetwork\");\n\nvar networkConfig_1 = require(\"../networkConfig\");\n\nvar address_1 = require(\"../address\");\n\nvar nonce_1 = require(\"../nonce\");\n\nvar asyncTimer_1 = require(\"../asyncTimer\");\n\nvar account_1 = require(\"../account\");\n\nvar balance_1 = require(\"../balance\");\n\nvar errors = __importStar(require(\"../errors\"));\n\nvar queryResponse_1 = require(\"../smartcontracts/queryResponse\");\n\nvar hash_1 = require(\"../hash\");\n\nvar networkStatus_1 = require(\"../networkStatus\");\n\nvar events_1 = require(\"../events\");\n/**\n * A mock {@link IProvider}, used for tests only.\n */\n\n\nvar MockProvider = /*#__PURE__*/function () {\n  function MockProvider() {\n    _classCallCheck(this, MockProvider);\n\n    this.queryResponders = [];\n    this.transactions = new Map();\n    this.onTransactionSent = new events_1.TypedEvent();\n    this.accounts = new Map();\n    this.accounts.set(MockProvider.AddressOfAlice.bech32(), new account_1.AccountOnNetwork({\n      nonce: new nonce_1.Nonce(0),\n      balance: balance_1.Balance.egld(1000)\n    }));\n    this.accounts.set(MockProvider.AddressOfBob.bech32(), new account_1.AccountOnNetwork({\n      nonce: new nonce_1.Nonce(5),\n      balance: balance_1.Balance.egld(500)\n    }));\n    this.accounts.set(MockProvider.AddressOfCarol.bech32(), new account_1.AccountOnNetwork({\n      nonce: new nonce_1.Nonce(42),\n      balance: balance_1.Balance.egld(300)\n    }));\n  }\n\n  _createClass(MockProvider, [{\n    key: \"getAccountEsdtBalance\",\n    value: function getAccountEsdtBalance(_address, _tokenBalanceBuilder) {\n      throw new Error(\"Method not implemented.\");\n    }\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(_resourceUrl, _payload, _callback) {\n      throw new Error(\"Method not implemented.\");\n    }\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(_resourceUrl, _callback) {\n      throw new Error(\"Method not implemented.\");\n    }\n  }, {\n    key: \"mockUpdateAccount\",\n    value: function mockUpdateAccount(address, mutate) {\n      var account = this.accounts.get(address.bech32());\n\n      if (account) {\n        mutate(account);\n      }\n    }\n  }, {\n    key: \"mockUpdateTransaction\",\n    value: function mockUpdateTransaction(hash, mutate) {\n      var transaction = this.transactions.get(hash.toString());\n\n      if (transaction) {\n        mutate(transaction);\n      }\n    }\n  }, {\n    key: \"mockPutTransaction\",\n    value: function mockPutTransaction(hash, item) {\n      this.transactions.set(hash.toString(), item);\n    }\n  }, {\n    key: \"mockQueryResponseOnFunction\",\n    value: function mockQueryResponseOnFunction(functionName, response) {\n      var predicate = function predicate(query) {\n        return query.func.name == functionName;\n      };\n\n      this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n  }, {\n    key: \"mockQueryResponse\",\n    value: function mockQueryResponse(predicate, response) {\n      this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n  }, {\n    key: \"mockTransactionTimeline\",\n    value: function mockTransactionTimeline(transaction, timelinePoints) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return transaction.awaitHashed();\n\n              case 2:\n                return _context.abrupt(\"return\", this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"mockNextTransactionTimeline\",\n    value: function mockNextTransactionTimeline(timelinePoints) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.nextTransactionSent();\n\n              case 2:\n                transaction = _context2.sent;\n                return _context2.abrupt(\"return\", this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"nextTransactionSent\",\n    value: function nextTransactionSent() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new Promise(function (resolve, _reject) {\n                  _this.onTransactionSent.on(function (eventArgs) {\n                    return resolve(eventArgs.transaction);\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"mockTransactionTimelineByHash\",\n    value: function mockTransactionTimelineByHash(hash, timelinePoints) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var timeline, _iterator, _step, _loop;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                timeline = new asyncTimer_1.AsyncTimer(\"mock timeline of \".concat(hash));\n                _context5.next = 3;\n                return timeline.start(0);\n\n              case 3:\n                _iterator = _createForOfIteratorHelper(timelinePoints);\n                _context5.prev = 4;\n                _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                  var point;\n                  return _regeneratorRuntime.wrap(function _loop$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          point = _step.value;\n\n                          if (!(point instanceof transaction_1.TransactionStatus)) {\n                            _context4.next = 5;\n                            break;\n                          }\n\n                          _this2.mockUpdateTransaction(hash, function (transaction) {\n                            transaction.status = point;\n                          });\n\n                          _context4.next = 16;\n                          break;\n\n                        case 5:\n                          if (!(point instanceof MarkNotarized)) {\n                            _context4.next = 9;\n                            break;\n                          }\n\n                          _this2.mockUpdateTransaction(hash, function (transaction) {\n                            transaction.hyperblockNonce = new nonce_1.Nonce(42);\n                            transaction.hyperblockHash = new hash_1.Hash(\"a\".repeat(32));\n                          });\n\n                          _context4.next = 16;\n                          break;\n\n                        case 9:\n                          if (!(point instanceof AddImmediateResult)) {\n                            _context4.next = 13;\n                            break;\n                          }\n\n                          _this2.mockUpdateTransaction(hash, function (transaction) {\n                            transaction.getSmartContractResults().getImmediate().data = point.data;\n                          });\n\n                          _context4.next = 16;\n                          break;\n\n                        case 13:\n                          if (!(point instanceof Wait)) {\n                            _context4.next = 16;\n                            break;\n                          }\n\n                          _context4.next = 16;\n                          return timeline.start(point.milliseconds);\n\n                        case 16:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                return _context5.delegateYield(_loop(), \"t0\", 9);\n\n              case 9:\n                _context5.next = 7;\n                break;\n\n              case 11:\n                _context5.next = 16;\n                break;\n\n              case 13:\n                _context5.prev = 13;\n                _context5.t1 = _context5[\"catch\"](4);\n\n                _iterator.e(_context5.t1);\n\n              case 16:\n                _context5.prev = 16;\n\n                _iterator.f();\n\n                return _context5.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee4, null, [[4, 13, 16, 19]]);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee5$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                account = this.accounts.get(address.bech32());\n\n                if (!account) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", account);\n\n              case 3:\n                return _context6.abrupt(\"return\", new account_1.AccountOnNetwork());\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getAddressEsdt\",\n    value: function getAddressEsdt(_address, _tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }, {\n    key: \"getAddressEsdtList\",\n    value: function getAddressEsdtList(_address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee7);\n      }));\n    }\n  }, {\n    key: \"getAddressNft\",\n    value: function getAddressNft(_address, _tokenIdentifier, _nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee8);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.mockPutTransaction(transaction.getHash(), new transactionOnNetwork_1.TransactionOnNetwork({\n                  nonce: transaction.getNonce(),\n                  sender: transaction.getSender(),\n                  receiver: transaction.getReceiver(),\n                  data: transaction.getData(),\n                  status: new transaction_1.TransactionStatus(\"pending\")\n                }));\n                this.onTransactionSent.emit({\n                  transaction: transaction\n                });\n                return _context10.abrupt(\"return\", transaction.getHash());\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(_transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee10);\n      }));\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash, _hintSender, _withResults) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee11$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                transaction = this.transactions.get(txHash.toString());\n\n                if (!transaction) {\n                  _context12.next = 3;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", transaction);\n\n              case 3:\n                throw new errors.ErrMock(\"Transaction not found\");\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var transaction;\n        return _regeneratorRuntime.wrap(function _callee12$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                transaction = this.transactions.get(txHash.toString());\n\n                if (!transaction) {\n                  _context13.next = 3;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", transaction.status);\n\n              case 3:\n                throw new errors.ErrMock(\"Transaction not found\");\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt(\"return\", new networkConfig_1.NetworkConfig());\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee13);\n      }));\n    }\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt(\"return\", new networkStatus_1.NetworkStatus());\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee14);\n      }));\n    }\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var _iterator2, _step2, responder;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(this.queryResponders);\n                _context16.prev = 1;\n\n                _iterator2.s();\n\n              case 3:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context16.next = 9;\n                  break;\n                }\n\n                responder = _step2.value;\n\n                if (!responder.matches(query)) {\n                  _context16.next = 7;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", responder.response);\n\n              case 7:\n                _context16.next = 3;\n                break;\n\n              case 9:\n                _context16.next = 14;\n                break;\n\n              case 11:\n                _context16.prev = 11;\n                _context16.t0 = _context16[\"catch\"](1);\n\n                _iterator2.e(_context16.t0);\n\n              case 14:\n                _context16.prev = 14;\n\n                _iterator2.f();\n\n                return _context16.finish(14);\n\n              case 17:\n                return _context16.abrupt(\"return\", new queryResponse_1.QueryResponse());\n\n              case 18:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee15, this, [[1, 11, 14, 17]]);\n      }));\n    }\n  }]);\n\n  return MockProvider;\n}();\n\nexports.MockProvider = MockProvider;\nMockProvider.AddressOfAlice = new address_1.Address(\"erd1qyu5wthldzr8wx5c9ucg8kjagg0jfs53s8nr3zpz3hypefsdd8ssycr6th\");\nMockProvider.AddressOfBob = new address_1.Address(\"erd1spyavw0956vq68xj8y4tenjpq2wd5a9p2c6j8gsz7ztyrnpxrruqzu66jx\");\nMockProvider.AddressOfCarol = new address_1.Address(\"erd1k2s324ww2g0yj38qn2ch2jwctdy8mnfxep94q9arncc6xecg3xaq6mjse8\");\n\nvar Wait = /*#__PURE__*/_createClass(function Wait(milliseconds) {\n  _classCallCheck(this, Wait);\n\n  this.milliseconds = milliseconds;\n});\n\nexports.Wait = Wait;\n\nvar MarkNotarized = /*#__PURE__*/_createClass(function MarkNotarized() {\n  _classCallCheck(this, MarkNotarized);\n});\n\nexports.MarkNotarized = MarkNotarized;\n\nvar AddImmediateResult = /*#__PURE__*/_createClass(function AddImmediateResult(data) {\n  _classCallCheck(this, AddImmediateResult);\n\n  this.data = data;\n});\n\nexports.AddImmediateResult = AddImmediateResult;\n\nvar QueryResponder = /*#__PURE__*/_createClass(function QueryResponder(matches, response) {\n  _classCallCheck(this, QueryResponder);\n\n  this.matches = matches || function (_) {\n    return true;\n  };\n\n  this.response = response || new queryResponse_1.QueryResponse();\n});","map":{"version":3,"sources":["../../src/testutils/mockProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAIA;;AAEG;;;IACU,Y;EAUT,wBAAA;IAAA;;IAFiB,KAAA,eAAA,GAAoC,EAApC;IAGb,KAAK,YAAL,GAAoB,IAAI,GAAJ,EAApB;IACA,KAAK,iBAAL,GAAyB,IAAI,QAAA,CAAA,UAAJ,EAAzB;IACA,KAAK,QAAL,GAAgB,IAAI,GAAJ,EAAhB;IAEA,KAAK,QAAL,CAAc,GAAd,CACI,YAAY,CAAC,cAAb,CAA4B,MAA5B,EADJ,EAEI,IAAI,SAAA,CAAA,gBAAJ,CAAqB;MAAE,KAAK,EAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,CAAT;MAAuB,OAAO,EAAE,SAAA,CAAA,OAAA,CAAQ,IAAR,CAAa,IAAb;IAAhC,CAArB,CAFJ;IAIA,KAAK,QAAL,CAAc,GAAd,CACI,YAAY,CAAC,YAAb,CAA0B,MAA1B,EADJ,EAEI,IAAI,SAAA,CAAA,gBAAJ,CAAqB;MAAE,KAAK,EAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,CAAT;MAAuB,OAAO,EAAE,SAAA,CAAA,OAAA,CAAQ,IAAR,CAAa,GAAb;IAAhC,CAArB,CAFJ;IAIA,KAAK,QAAL,CAAc,GAAd,CACI,YAAY,CAAC,cAAb,CAA4B,MAA5B,EADJ,EAEI,IAAI,SAAA,CAAA,gBAAJ,CAAqB;MAAE,KAAK,EAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,EAAV,CAAT;MAAwB,OAAO,EAAE,SAAA,CAAA,OAAA,CAAQ,IAAR,CAAa,GAAb;IAAjC,CAArB,CAFJ;EAIH;;;;WAED,+BAAsB,QAAtB,EAAyC,oBAAzC,EAA6E;MACzE,MAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;IACH;;;WAED,uBAAc,YAAd,EAAoC,QAApC,EAAmD,SAAnD,EAAoF;MAChF,MAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;IACH;;;WAED,sBAAa,YAAb,EAAmC,SAAnC,EAAoE;MAChE,MAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;IACH;;;WAED,2BAAkB,OAAlB,EAAoC,MAApC,EAA4E;MACxE,IAAI,OAAO,GAAG,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAO,CAAC,MAAR,EAAlB,CAAd;;MACA,IAAI,OAAJ,EAAa;QACT,MAAM,CAAC,OAAD,CAAN;MACH;IACJ;;;WAED,+BAAsB,IAAtB,EAA6C,MAA7C,EAAyF;MACrF,IAAI,WAAW,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAsB,IAAI,CAAC,QAAL,EAAtB,CAAlB;;MACA,IAAI,WAAJ,EAAiB;QACb,MAAM,CAAC,WAAD,CAAN;MACH;IACJ;;;WAED,4BAAmB,IAAnB,EAA0C,IAA1C,EAAoE;MAChE,KAAK,YAAL,CAAkB,GAAlB,CAAsB,IAAI,CAAC,QAAL,EAAtB,EAAuC,IAAvC;IACH;;;WAED,qCAA4B,YAA5B,EAAkD,QAAlD,EAAyE;MACrE,IAAI,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD;QAAA,OAAkB,KAAK,CAAC,IAAN,CAAW,IAAX,IAAmB,YAArC;MAAA,CAAhB;;MACA,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,QAA9B,CAA1B;IACH;;;WAED,2BAAkB,SAAlB,EAAwD,QAAxD,EAA+E;MAC3E,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,QAA9B,CAA1B;IACH;;;WAEK,iCAAwB,WAAxB,EAAkD,cAAlD,EAAuE;;;;;;;gBACzE,OAAM,WAAW,CAAC,WAAZ,EAAN;;;iDACO,KAAK,6BAAL,CAAmC,WAAW,CAAC,OAAZ,EAAnC,EAA0D,cAA1D,C;;;;;;;;;IACV;;;WAEK,qCAA4B,cAA5B,EAAiD;;;;;;;;gBACjC,OAAM,KAAK,mBAAL,EAAN;;;gBAAd,W;kDACG,KAAK,6BAAL,CAAmC,WAAW,CAAC,OAAZ,EAAnC,EAA0D,cAA1D,C;;;;;;;;;IACV;;;WAEK,+BAAmB;;;;;;;;kDACd,IAAI,OAAJ,CAAyB,UAAC,OAAD,EAAU,OAAV,EAAqB;kBACjD,KAAI,CAAC,iBAAL,CAAuB,EAAvB,CAA0B,UAAC,SAAD;oBAAA,OAAe,OAAO,CAAC,SAAS,CAAC,WAAX,CAAtB;kBAAA,CAA1B;gBACH,CAFM,C;;;;;;;;;IAGV;;;WAEK,uCAA8B,IAA9B,EAAqD,cAArD,EAA0E;;;;;;;;;;gBACxE,Q,GAAW,IAAI,YAAA,CAAA,UAAJ,4BAAmC,IAAnC,E;;gBAEf,OAAM,QAAQ,CAAC,KAAT,CAAe,CAAf,CAAN;;;uDAEoB,c;;;;;;;;0BAAT,K;;gCACH,KAAK,YAAY,aAAA,CAAA,iB;;;;;0BACjB,MAAI,CAAC,qBAAL,CAA2B,IAA3B,EAAiC,UAAC,WAAD,EAAgB;4BAC7C,WAAW,CAAC,MAAZ,GAAqB,KAArB;0BACH,CAFD;;;;;;gCAGO,KAAK,YAAY,a;;;;;0BACxB,MAAI,CAAC,qBAAL,CAA2B,IAA3B,EAAiC,UAAC,WAAD,EAAgB;4BAC7C,WAAW,CAAC,eAAZ,GAA8B,IAAI,OAAA,CAAA,KAAJ,CAAU,EAAV,CAA9B;4BACA,WAAW,CAAC,cAAZ,GAA6B,IAAI,MAAA,CAAA,IAAJ,CAAS,IAAI,MAAJ,CAAW,EAAX,CAAT,CAA7B;0BACH,CAHD;;;;;;gCAIO,KAAK,YAAY,kB;;;;;0BACxB,MAAI,CAAC,qBAAL,CAA2B,IAA3B,EAAiC,UAAC,WAAD,EAAgB;4BAC7C,WAAW,CAAC,uBAAZ,GAAsC,YAAtC,GAAqD,IAArD,GAA4D,KAAK,CAAC,IAAlE;0BACH,CAFD;;;;;;gCAGO,KAAK,YAAY,I;;;;;;0BACxB,OAAM,QAAQ,CAAC,KAAT,CAAe,KAAK,CAAC,YAArB,CAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGX;;;WAEK,oBAAW,OAAX,EAA2B;;;;;;;gBACzB,O,GAAU,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAO,CAAC,MAAR,EAAlB,C;;qBACV,O;;;;;kDACO,O;;;kDAGJ,IAAI,SAAA,CAAA,gBAAJ,E;;;;;;;;;IACV;;;WAEK,wBAAe,QAAf,EAAkC,gBAAlC,EAA0D;;;;;;kDACrD,E;;;;;;;;;IACV;;;WAEK,4BAAmB,QAAnB,EAAoC;;;;;;kDAC/B,E;;;;;;;;;IACV;;;WAEK,uBAAc,QAAd,EAAiC,gBAAjC,EAA2D,MAA3D,EAA4E;;;;;;kDACvE,E;;;;;;;;;IACV;;;WAEK,yBAAgB,WAAhB,EAAwC;;;;;;gBAC1C,KAAK,kBAAL,CACI,WAAW,CAAC,OAAZ,EADJ,EAEI,IAAI,sBAAA,CAAA,oBAAJ,CAAyB;kBACrB,KAAK,EAAE,WAAW,CAAC,QAAZ,EADc;kBAErB,MAAM,EAAE,WAAW,CAAC,SAAZ,EAFa;kBAGrB,QAAQ,EAAE,WAAW,CAAC,WAAZ,EAHW;kBAIrB,IAAI,EAAE,WAAW,CAAC,OAAZ,EAJe;kBAKrB,MAAM,EAAE,IAAI,aAAA,CAAA,iBAAJ,CAAsB,SAAtB;gBALa,CAAzB,CAFJ;gBAWA,KAAK,iBAAL,CAAuB,IAAvB,CAA4B;kBAAE,WAAW,EAAE;gBAAf,CAA5B;mDAEO,WAAW,CAAC,OAAZ,E;;;;;;;;;IACV;;;WAEK,6BAAoB,YAApB,EAA6C;;;;;;mDACxC,E;;;;;;;;;IACV;;;WAEK,wBACF,MADE,EAEF,WAFE,EAGF,YAHE,EAGoB;;;;;;;gBAElB,W,GAAc,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAM,CAAC,QAAP,EAAtB,C;;qBACd,W;;;;;mDACO,W;;;sBAGL,IAAI,MAAM,CAAC,OAAX,CAAmB,uBAAnB,C;;;;;;;;;IACT;;;WAEK,8BAAqB,MAArB,EAA4C;;;;;;;gBAC1C,W,GAAc,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAM,CAAC,QAAP,EAAtB,C;;qBACd,W;;;;;mDACO,WAAW,CAAC,M;;;sBAGjB,IAAI,MAAM,CAAC,OAAX,CAAmB,uBAAnB,C;;;;;;;;;IACT;;;WAEK,4BAAgB;;;;;;mDACX,IAAI,eAAA,CAAA,aAAJ,E;;;;;;;;;IACV;;;WAEK,4BAAgB;;;;;;mDACX,IAAI,eAAA,CAAA,aAAJ,E;;;;;;;;;IACV;;;WAEK,uBAAc,KAAd,EAA0B;;;;;;;;wDACJ,KAAK,e;;;;;;;;;;;gBAAlB,S;;qBACH,SAAS,CAAC,OAAV,CAAkB,KAAlB,C;;;;;mDACO,SAAS,CAAC,Q;;;;;;;;;;;;;;;;;;;;;;;;mDAIlB,IAAI,eAAA,CAAA,aAAJ,E;;;;;;;;;IACV;;;;;;AA7LL,OAAA,CAAA,YAAA,GAAA,YAAA;AACW,YAAA,CAAA,cAAA,GAAiB,IAAI,SAAA,CAAA,OAAJ,CAAY,gEAAZ,CAAjB;AACA,YAAA,CAAA,YAAA,GAAe,IAAI,SAAA,CAAA,OAAJ,CAAY,gEAAZ,CAAf;AACA,YAAA,CAAA,cAAA,GAAiB,IAAI,SAAA,CAAA,OAAJ,CAAY,gEAAZ,CAAjB;;IA6LE,I,6BAGT,cAAY,YAAZ,EAAgC;EAAA;;EAC5B,KAAK,YAAL,GAAoB,YAApB;AACH,C;;AALL,OAAA,CAAA,IAAA,GAAA,IAAA;;IAQa,a;;;;AAAb,OAAA,CAAA,aAAA,GAAA,aAAA;;IAEa,kB,6BAGT,4BAAY,IAAZ,EAAwB;EAAA;;EACpB,KAAK,IAAL,GAAY,IAAZ;AACH,C;;AALL,OAAA,CAAA,kBAAA,GAAA,kBAAA;;IAQM,c,6BAIF,wBAAY,OAAZ,EAAgD,QAAhD,EAAuE;EAAA;;EACnE,KAAK,OAAL,GAAe,OAAO,IAAK,UAAC,CAAD;IAAA,OAAO,IAAP;EAAA,CAA3B;;EACA,KAAK,QAAL,GAAgB,QAAQ,IAAI,IAAI,eAAA,CAAA,aAAJ,EAA5B;AACH,C","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddImmediateResult = exports.MarkNotarized = exports.Wait = exports.MockProvider = void 0;\nconst transaction_1 = require(\"../transaction\");\nconst transactionOnNetwork_1 = require(\"../transactionOnNetwork\");\nconst networkConfig_1 = require(\"../networkConfig\");\nconst address_1 = require(\"../address\");\nconst nonce_1 = require(\"../nonce\");\nconst asyncTimer_1 = require(\"../asyncTimer\");\nconst account_1 = require(\"../account\");\nconst balance_1 = require(\"../balance\");\nconst errors = __importStar(require(\"../errors\"));\nconst queryResponse_1 = require(\"../smartcontracts/queryResponse\");\nconst hash_1 = require(\"../hash\");\nconst networkStatus_1 = require(\"../networkStatus\");\nconst events_1 = require(\"../events\");\n/**\n * A mock {@link IProvider}, used for tests only.\n */\nclass MockProvider {\n    constructor() {\n        this.queryResponders = [];\n        this.transactions = new Map();\n        this.onTransactionSent = new events_1.TypedEvent();\n        this.accounts = new Map();\n        this.accounts.set(MockProvider.AddressOfAlice.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(0), balance: balance_1.Balance.egld(1000) }));\n        this.accounts.set(MockProvider.AddressOfBob.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(5), balance: balance_1.Balance.egld(500) }));\n        this.accounts.set(MockProvider.AddressOfCarol.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(42), balance: balance_1.Balance.egld(300) }));\n    }\n    getAccountEsdtBalance(_address, _tokenBalanceBuilder) {\n        throw new Error(\"Method not implemented.\");\n    }\n    doPostGeneric(_resourceUrl, _payload, _callback) {\n        throw new Error(\"Method not implemented.\");\n    }\n    doGetGeneric(_resourceUrl, _callback) {\n        throw new Error(\"Method not implemented.\");\n    }\n    mockUpdateAccount(address, mutate) {\n        let account = this.accounts.get(address.bech32());\n        if (account) {\n            mutate(account);\n        }\n    }\n    mockUpdateTransaction(hash, mutate) {\n        let transaction = this.transactions.get(hash.toString());\n        if (transaction) {\n            mutate(transaction);\n        }\n    }\n    mockPutTransaction(hash, item) {\n        this.transactions.set(hash.toString(), item);\n    }\n    mockQueryResponseOnFunction(functionName, response) {\n        let predicate = (query) => query.func.name == functionName;\n        this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n    mockQueryResponse(predicate, response) {\n        this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n    mockTransactionTimeline(transaction, timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield transaction.awaitHashed();\n            return this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints);\n        });\n    }\n    mockNextTransactionTimeline(timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = yield this.nextTransactionSent();\n            return this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints);\n        });\n    }\n    nextTransactionSent() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, _reject) => {\n                this.onTransactionSent.on((eventArgs) => resolve(eventArgs.transaction));\n            });\n        });\n    }\n    mockTransactionTimelineByHash(hash, timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let timeline = new asyncTimer_1.AsyncTimer(`mock timeline of ${hash}`);\n            yield timeline.start(0);\n            for (const point of timelinePoints) {\n                if (point instanceof transaction_1.TransactionStatus) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.status = point;\n                    });\n                }\n                else if (point instanceof MarkNotarized) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.hyperblockNonce = new nonce_1.Nonce(42);\n                        transaction.hyperblockHash = new hash_1.Hash(\"a\".repeat(32));\n                    });\n                }\n                else if (point instanceof AddImmediateResult) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.getSmartContractResults().getImmediate().data = point.data;\n                    });\n                }\n                else if (point instanceof Wait) {\n                    yield timeline.start(point.milliseconds);\n                }\n            }\n        });\n    }\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let account = this.accounts.get(address.bech32());\n            if (account) {\n                return account;\n            }\n            return new account_1.AccountOnNetwork();\n        });\n    }\n    getAddressEsdt(_address, _tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getAddressEsdtList(_address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getAddressNft(_address, _tokenIdentifier, _nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.mockPutTransaction(transaction.getHash(), new transactionOnNetwork_1.TransactionOnNetwork({\n                nonce: transaction.getNonce(),\n                sender: transaction.getSender(),\n                receiver: transaction.getReceiver(),\n                data: transaction.getData(),\n                status: new transaction_1.TransactionStatus(\"pending\"),\n            }));\n            this.onTransactionSent.emit({ transaction: transaction });\n            return transaction.getHash();\n        });\n    }\n    simulateTransaction(_transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getTransaction(txHash, _hintSender, _withResults) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = this.transactions.get(txHash.toString());\n            if (transaction) {\n                return transaction;\n            }\n            throw new errors.ErrMock(\"Transaction not found\");\n        });\n    }\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = this.transactions.get(txHash.toString());\n            if (transaction) {\n                return transaction.status;\n            }\n            throw new errors.ErrMock(\"Transaction not found\");\n        });\n    }\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new networkConfig_1.NetworkConfig();\n        });\n    }\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new networkStatus_1.NetworkStatus();\n        });\n    }\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const responder of this.queryResponders) {\n                if (responder.matches(query)) {\n                    return responder.response;\n                }\n            }\n            return new queryResponse_1.QueryResponse();\n        });\n    }\n}\nexports.MockProvider = MockProvider;\nMockProvider.AddressOfAlice = new address_1.Address(\"erd1qyu5wthldzr8wx5c9ucg8kjagg0jfs53s8nr3zpz3hypefsdd8ssycr6th\");\nMockProvider.AddressOfBob = new address_1.Address(\"erd1spyavw0956vq68xj8y4tenjpq2wd5a9p2c6j8gsz7ztyrnpxrruqzu66jx\");\nMockProvider.AddressOfCarol = new address_1.Address(\"erd1k2s324ww2g0yj38qn2ch2jwctdy8mnfxep94q9arncc6xecg3xaq6mjse8\");\nclass Wait {\n    constructor(milliseconds) {\n        this.milliseconds = milliseconds;\n    }\n}\nexports.Wait = Wait;\nclass MarkNotarized {\n}\nexports.MarkNotarized = MarkNotarized;\nclass AddImmediateResult {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.AddImmediateResult = AddImmediateResult;\nclass QueryResponder {\n    constructor(matches, response) {\n        this.matches = matches || ((_) => true);\n        this.response = response || new queryResponse_1.QueryResponse();\n    }\n}\n//# sourceMappingURL=mockProvider.js.map"]},"metadata":{},"sourceType":"script"}