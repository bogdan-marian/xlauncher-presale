{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayVec = exports.ArrayVecType = void 0;\n\nvar __1 = require(\"../..\");\n\nvar collections_1 = require(\"./collections\");\n\nvar types_1 = require(\"./types\"); // A type for known-length arrays. E.g. \"array20\", \"array32\", \"array64\" etc.\n\n\nvar ArrayVecType = /*#__PURE__*/function (_types_1$Type) {\n  _inherits(ArrayVecType, _types_1$Type);\n\n  var _super = _createSuper(ArrayVecType);\n\n  function ArrayVecType(length, typeParameter) {\n    var _this;\n\n    _classCallCheck(this, ArrayVecType);\n\n    _this = _super.call(this, \"Array\", [typeParameter]);\n\n    __1.guardTrue(length > 0, \"array length > 0\");\n\n    _this.length = length;\n    return _this;\n  }\n\n  return _createClass(ArrayVecType);\n}(types_1.Type);\n\nexports.ArrayVecType = ArrayVecType;\n\nvar ArrayVec = /*#__PURE__*/function (_types_1$TypedValue) {\n  _inherits(ArrayVec, _types_1$TypedValue);\n\n  var _super2 = _createSuper(ArrayVec);\n\n  function ArrayVec(type, items) {\n    var _this2;\n\n    _classCallCheck(this, ArrayVec);\n\n    _this2 = _super2.call(this, type);\n\n    __1.guardLength(items, type.length);\n\n    _this2.backingCollection = new collections_1.CollectionOfTypedValues(items);\n    return _this2;\n  }\n\n  _createClass(ArrayVec, [{\n    key: \"getLength\",\n    value: function getLength() {\n      return this.backingCollection.getLength();\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this.backingCollection.getItems();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.backingCollection.valueOf();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.backingCollection.equals(other.backingCollection);\n    }\n  }]);\n\n  return ArrayVec;\n}(types_1.TypedValue);\n\nexports.ArrayVec = ArrayVec;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/genericArray.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,GAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA,C,CAEA;;;IACa,Y;;;;;EAGT,sBAAY,MAAZ,EAA4B,aAA5B,EAA+C;IAAA;;IAAA;;IAC3C,0BAAM,OAAN,EAAe,CAAC,aAAD,CAAf;;IAEA,GAAA,CAAA,SAAA,CAAU,MAAM,GAAG,CAAnB,EAAsB,kBAAtB;;IACA,MAAK,MAAL,GAAc,MAAd;IAJ2C;EAK9C;;;EAR6B,OAAA,CAAA,I;;AAAlC,OAAA,CAAA,YAAA,GAAA,YAAA;;IAWa,Q;;;;;EAGT,kBAAY,IAAZ,EAAgC,KAAhC,EAAmD;IAAA;;IAAA;;IAC/C,4BAAM,IAAN;;IACA,GAAA,CAAA,WAAA,CAAY,KAAZ,EAAmB,IAAI,CAAC,MAAxB;;IACA,OAAK,iBAAL,GAAyB,IAAI,aAAA,CAAA,uBAAJ,CAA4B,KAA5B,CAAzB;IAH+C;EAIlD;;;;WAED,qBAAS;MACL,OAAO,KAAK,iBAAL,CAAuB,SAAvB,EAAP;IACH;;;WAED,oBAAQ;MACJ,OAAO,KAAK,iBAAL,CAAuB,QAAvB,EAAP;IACH;;;WAED,mBAAO;MACH,OAAO,KAAK,iBAAL,CAAuB,OAAvB,EAAP;IACH;;;WAED,gBAAO,KAAP,EAAsB;MAClB,OAAO,KAAK,iBAAL,CAAuB,MAAvB,CAA8B,KAAK,CAAC,iBAApC,CAAP;IACH;;;;EAvByB,OAAA,CAAA,U;;AAA9B,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayVec = exports.ArrayVecType = void 0;\nconst __1 = require(\"../..\");\nconst collections_1 = require(\"./collections\");\nconst types_1 = require(\"./types\");\n// A type for known-length arrays. E.g. \"array20\", \"array32\", \"array64\" etc.\nclass ArrayVecType extends types_1.Type {\n    constructor(length, typeParameter) {\n        super(\"Array\", [typeParameter]);\n        __1.guardTrue(length > 0, \"array length > 0\");\n        this.length = length;\n    }\n}\nexports.ArrayVecType = ArrayVecType;\nclass ArrayVec extends types_1.TypedValue {\n    constructor(type, items) {\n        super(type);\n        __1.guardLength(items, type.length);\n        this.backingCollection = new collections_1.CollectionOfTypedValues(items);\n    }\n    getLength() {\n        return this.backingCollection.getLength();\n    }\n    getItems() {\n        return this.backingCollection.getItems();\n    }\n    valueOf() {\n        return this.backingCollection.valueOf();\n    }\n    equals(other) {\n        return this.backingCollection.equals(other.backingCollection);\n    }\n}\nexports.ArrayVec = ArrayVec;\n//# sourceMappingURL=genericArray.js.map"]},"metadata":{},"sourceType":"script"}