{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkStake = void 0;\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n/**\n * An object holding Network stake parameters.\n */\n\n\nvar NetworkStake = /*#__PURE__*/function () {\n  function NetworkStake() {\n    _classCallCheck(this, NetworkStake);\n\n    this.TotalValidators = 0;\n    this.ActiveValidators = 0;\n    this.QueueSize = 0;\n    this.TotalStaked = new bignumber_js_1.default(0);\n  }\n  /**\n   * Gets the default configuration object (think of the Singleton pattern).\n   */\n\n\n  _createClass(NetworkStake, [{\n    key: \"sync\",\n    value:\n    /**\n     * Synchronizes a configuration object by querying the Network, through a {@link IProvider}.\n     * @param provider The provider to use\n     */\n    function sync(provider) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fresh;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return provider.getNetworkStake();\n\n              case 2:\n                fresh = _context.sent;\n                Object.assign(this, fresh);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * Constructs a configuration object from a HTTP response (as returned by the provider).\n     */\n\n  }], [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      if (!NetworkStake.default) {\n        NetworkStake.default = new NetworkStake();\n      }\n\n      return NetworkStake.default;\n    }\n  }, {\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(payload) {\n      var networkStake = new NetworkStake();\n      networkStake.TotalValidators = Number(payload[\"totalValidators\"]);\n      networkStake.ActiveValidators = Number(payload[\"activeValidators\"]);\n      networkStake.QueueSize = Number(payload[\"queueSize\"]);\n      networkStake.TotalStaked = new bignumber_js_1.default(payload[\"totalStaked\"]);\n      return networkStake;\n    }\n  }]);\n\n  return NetworkStake;\n}();\n\nexports.NetworkStake = NetworkStake;","map":{"version":3,"sources":["../src/networkStake.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;AAEA;;AAEG;;;IACU,Y;EAqBX,wBAAA;IAAA;;IACE,KAAK,eAAL,GAAuB,CAAvB;IACA,KAAK,gBAAL,GAAwB,CAAxB;IACA,KAAK,SAAL,GAAiB,CAAjB;IACA,KAAK,WAAL,GAAmB,IAAI,cAAA,CAAA,OAAJ,CAAc,CAAd,CAAnB;EACD;EAED;;AAEG;;;;;;IASH;;;AAGG;IACG,cAAK,QAAL,EAA2B;;;;;;;;gBACL,OAAM,QAAQ,CAAC,eAAT,EAAN;;;gBAAtB,K;gBACJ,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,KAApB;;;;;;;;;IACD;IAED;;AAEG;;;;WAnBH,sBAAiB;MACf,IAAI,CAAC,YAAY,CAAC,OAAlB,EAA2B;QACzB,YAAY,CAAC,OAAb,GAAuB,IAAI,YAAJ,EAAvB;MACD;;MAED,OAAO,YAAY,CAAC,OAApB;IACD;;;WAcD,0BAAwB,OAAxB,EAAoC;MAClC,IAAI,YAAY,GAAG,IAAI,YAAJ,EAAnB;MAEA,YAAY,CAAC,eAAb,GAA+B,MAAM,CAAC,OAAO,CAAC,iBAAD,CAAR,CAArC;MACA,YAAY,CAAC,gBAAb,GAAgC,MAAM,CAAC,OAAO,CAAC,kBAAD,CAAR,CAAtC;MACA,YAAY,CAAC,SAAb,GAAyB,MAAM,CAAC,OAAO,CAAC,WAAD,CAAR,CAA/B;MACA,YAAY,CAAC,WAAb,GAA2B,IAAI,cAAA,CAAA,OAAJ,CAAc,OAAO,CAAC,aAAD,CAArB,CAA3B;MAEA,OAAO,YAAP;IACD;;;;;;AA5DH,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkStake = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n/**\n * An object holding Network stake parameters.\n */\nclass NetworkStake {\n    constructor() {\n        this.TotalValidators = 0;\n        this.ActiveValidators = 0;\n        this.QueueSize = 0;\n        this.TotalStaked = new bignumber_js_1.default(0);\n    }\n    /**\n     * Gets the default configuration object (think of the Singleton pattern).\n     */\n    static getDefault() {\n        if (!NetworkStake.default) {\n            NetworkStake.default = new NetworkStake();\n        }\n        return NetworkStake.default;\n    }\n    /**\n     * Synchronizes a configuration object by querying the Network, through a {@link IProvider}.\n     * @param provider The provider to use\n     */\n    sync(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let fresh = yield provider.getNetworkStake();\n            Object.assign(this, fresh);\n        });\n    }\n    /**\n     * Constructs a configuration object from a HTTP response (as returned by the provider).\n     */\n    static fromHttpResponse(payload) {\n        let networkStake = new NetworkStake();\n        networkStake.TotalValidators = Number(payload[\"totalValidators\"]);\n        networkStake.ActiveValidators = Number(payload[\"activeValidators\"]);\n        networkStake.QueueSize = Number(payload[\"queueSize\"]);\n        networkStake.TotalStaked = new bignumber_js_1.default(payload[\"totalStaked\"]);\n        return networkStake;\n    }\n}\nexports.NetworkStake = NetworkStake;\n//# sourceMappingURL=networkStake.js.map"]},"metadata":{},"sourceType":"script"}