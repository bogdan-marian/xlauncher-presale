{"ast":null,"code":"import { WalletProvider, ExtensionProvider, HWProvider, WalletConnectProvider, Address, TransactionVersion, TransactionOptions, ChainID, TransactionPayload, Transaction, Balance, Nonce, GasLimit, GasPrice, ProxyProvider, SignableMessage, Token, NetworkConfig, GasPriceModifier, ApiProvider } from '@elrondnetwork/erdjs';\nimport { createAction, createSlice, combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { REHYDRATE, persistReducer, FLUSH, PAUSE, PERSIST, PURGE, REGISTER, persistStore, createMigrate } from 'redux-persist';\nimport moment$2 from 'moment';\nimport omit from 'lodash.omit';\nimport BigNumber from 'bignumber.js';\nimport throttle from 'lodash.throttle';\nimport isEqual from 'lodash.isequal';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport { Address as Address$1, createBalanceBuilder, Token as Token$1, TokenType } from '@elrondnetwork/erdjs/out';\nimport React__default, { useState, useEffect, useRef, createElement, Fragment, useCallback, useMemo } from 'react';\nimport { createDispatchHook, createSelectorHook, Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useIdleTimer as useIdleTimer$1 } from 'react-idle-timer';\nimport { Signature } from '@elrondnetwork/erdjs/out/signature';\nimport * as RB from 'react-bootstrap';\nimport classNames from 'classnames';\nimport debounce$1 from 'lodash.debounce';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function () {\n      return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    define(Gp, \"constructor\", GeneratorFunctionPrototype);\n    define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n      return this;\n    });\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    define(Gp, iteratorSymbol, function () {\n      return this;\n    });\n    define(Gp, \"toString\", function () {\n      return \"[object Generator]\";\n    });\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, in modern engines\n    // we can explicitly access globalThis. In older engines we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  }\n});\nvar ERROR_SIGNING = 'error when signing';\nvar TRANSACTION_CANCELLED = 'Transaction cancelled';\nvar ERROR_SIGNING_TX = 'error signing transaction';\nvar PROVIDER_NOT_INTIALIZED = 'provider not intialized';\nvar MISSING_PROVIDER_MESSAGE = 'You need a signer/valid signer to send a transaction,use either WalletProvider, LedgerProvider or WalletConnect';\nvar errorsMessages = {\n  __proto__: null,\n  ERROR_SIGNING: ERROR_SIGNING,\n  TRANSACTION_CANCELLED: TRANSACTION_CANCELLED,\n  ERROR_SIGNING_TX: ERROR_SIGNING_TX,\n  PROVIDER_NOT_INTIALIZED: PROVIDER_NOT_INTIALIZED,\n  MISSING_PROVIDER_MESSAGE: MISSING_PROVIDER_MESSAGE\n};\nvar DEFAULT_MIN_GAS_LIMIT = 50000;\nvar configEndpoint = 'dapp/config';\nvar fallbackNetworkConfigurations = {\n  devnet: {\n    id: 'devnet',\n    chainId: 'D',\n    name: 'Devnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink: 'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://devnet-wallet.elrond.com',\n    apiAddress: 'https://devnet-api.elrond.com',\n    explorerAddress: 'http://devnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  testnet: {\n    id: 'testnet',\n    chainId: 'T',\n    name: 'Testnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink: 'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://testnet-wallet.elrond.com',\n    apiAddress: 'https://testnet-api.elrond.com',\n    explorerAddress: 'http://testnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  mainnet: {\n    id: 'mainnet',\n    chainId: '1',\n    name: 'Mainnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink: 'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://wallet.elrond.com',\n    apiAddress: 'https://api.elrond.com',\n    explorerAddress: 'https://explorer.elrond.com',\n    apiTimeout: '4000'\n  }\n};\nvar network = {\n  __proto__: null,\n  DEFAULT_MIN_GAS_LIMIT: DEFAULT_MIN_GAS_LIMIT,\n  configEndpoint: configEndpoint,\n  fallbackNetworkConfigurations: fallbackNetworkConfigurations\n};\nvar ledgerErrorCodes = {\n  0x9000: {\n    code: 'codeSuccess',\n    message: 'Success'\n  },\n  0x6985: {\n    code: 'ERR_USER_DENIED',\n    message: 'Rejected by user'\n  },\n  0x6d00: {\n    code: 'ERR_UNKNOWN_INSTRUCTION',\n    message: 'Unknown instruction'\n  },\n  0x6e00: {\n    code: 'ERR_WRONG_CLA',\n    message: 'Wrong CLA'\n  },\n  0x6e01: {\n    code: 'ERR_INVALID_ARGUMENTS',\n    message: 'Invalid arguments'\n  },\n  0x6e02: {\n    code: 'ERR_INVALID_MESSAGE',\n    message: 'Invalid message'\n  },\n  0x6e03: {\n    code: 'ERR_INVALID_P1',\n    message: 'Invalid P1'\n  },\n  0x6e04: {\n    code: 'ERR_MESSAGE_TOO_LONG',\n    message: 'Message too long'\n  },\n  0x6e05: {\n    code: 'ERR_RECEIVER_TOO_LONG',\n    message: 'Receiver too long'\n  },\n  0x6e06: {\n    code: 'ERR_AMOUNT_TOO_LONG',\n    message: 'Amount too long'\n  },\n  0x6e07: {\n    code: 'ERR_CONTRACT_DATA_DISABLED',\n    message: 'Contract data disabled in app options'\n  },\n  0x6e08: {\n    code: 'ERR_MESSAGE_INCOMPLETE',\n    message: 'Message incomplete'\n  },\n  0x6e10: {\n    code: 'ERR_SIGNATURE_FAILED',\n    message: 'Signature failed'\n  },\n  0x6e09: {\n    code: 'ERR_WRONG_TX_VERSION',\n    message: 'Wrong TX version'\n  },\n  0x6e0a: {\n    code: 'ERR_NONCE_TOO_LONG',\n    message: 'Nonce too long'\n  },\n  0x6e0b: {\n    code: 'ERR_INVALID_AMOUNT',\n    message: 'Invalid amount'\n  },\n  0x6e0c: {\n    code: 'ERR_INVALID_FEE',\n    message: 'Invalid fee'\n  },\n  0x6e0d: {\n    code: 'ERR_PRETTY_FAILED',\n    message: 'Pretty failed'\n  },\n  0x6e0e: {\n    code: 'ERR_DATA_TOO_LONG',\n    message: 'Data too long'\n  },\n  0x6e0f: {\n    code: 'ERR_WRONG_TX_OPTIONS',\n    message: 'Invalid transaction options'\n  },\n  0x6e11: {\n    code: 'ERR_SIGN_TX_DEPRECATED',\n    message: 'Regular transaction signing is deprecated in this version. Use hash signing.'\n  }\n};\nvar ledgerErrorCodes$1 = {\n  __proto__: null,\n  'default': ledgerErrorCodes\n};\nvar gasPriceModifier = '0.01';\nvar gasPerDataByte = '1500';\nvar gasLimit = '50000';\nvar gasPrice = 1000000000;\nvar denomination = 18;\nvar decimals = 4;\nvar version = 1;\nvar ledgerContractDataEnabledValue = 1;\nvar dappInitRoute = '/dapp/init';\nvar walletSignSession = 'signSession';\nvar index = {\n  __proto__: null,\n  errorsMessages: errorsMessages,\n  networkConstants: network,\n  ledgerErrorCodes: ledgerErrorCodes$1,\n  gasPriceModifier: gasPriceModifier,\n  gasPerDataByte: gasPerDataByte,\n  gasLimit: gasLimit,\n  gasPrice: gasPrice,\n  denomination: denomination,\n  decimals: decimals,\n  version: version,\n  ledgerContractDataEnabledValue: ledgerContractDataEnabledValue,\n  dappInitRoute: dappInitRoute,\n  walletSignSession: walletSignSession\n};\nvar TransactionServerStatusesEnum;\n\n(function (TransactionServerStatusesEnum) {\n  TransactionServerStatusesEnum[\"pending\"] = \"pending\";\n  TransactionServerStatusesEnum[\"fail\"] = \"fail\";\n  TransactionServerStatusesEnum[\"invalid\"] = \"invalid\";\n  TransactionServerStatusesEnum[\"success\"] = \"success\";\n  TransactionServerStatusesEnum[\"executed\"] = \"executed\";\n  TransactionServerStatusesEnum[\"completed\"] = \"completed\";\n})(TransactionServerStatusesEnum || (TransactionServerStatusesEnum = {}));\n\nvar TransactionBatchStatusesEnum;\n\n(function (TransactionBatchStatusesEnum) {\n  TransactionBatchStatusesEnum[\"signed\"] = \"signed\";\n  TransactionBatchStatusesEnum[\"cancelled\"] = \"cancelled\";\n  TransactionBatchStatusesEnum[\"success\"] = \"success\";\n  TransactionBatchStatusesEnum[\"sent\"] = \"sent\";\n  TransactionBatchStatusesEnum[\"fail\"] = \"fail\";\n  TransactionBatchStatusesEnum[\"timedOut\"] = \"timedOut\";\n})(TransactionBatchStatusesEnum || (TransactionBatchStatusesEnum = {}));\n\nvar LoginMethodsEnum;\n\n(function (LoginMethodsEnum) {\n  LoginMethodsEnum[\"ledger\"] = \"ledger\";\n  LoginMethodsEnum[\"walletconnect\"] = \"walletconnect\";\n  LoginMethodsEnum[\"wallet\"] = \"wallet\";\n  LoginMethodsEnum[\"extension\"] = \"extension\";\n  LoginMethodsEnum[\"extra\"] = \"extra\";\n  LoginMethodsEnum[\"none\"] = \"\";\n})(LoginMethodsEnum || (LoginMethodsEnum = {}));\n\nvar NotificationTypesEnum;\n\n(function (NotificationTypesEnum) {\n  NotificationTypesEnum[\"warning\"] = \"warning\";\n  NotificationTypesEnum[\"error\"] = \"error\";\n  NotificationTypesEnum[\"success\"] = \"success\";\n})(NotificationTypesEnum || (NotificationTypesEnum = {}));\n\nvar TypesOfSmartContractCallsEnum;\n\n(function (TypesOfSmartContractCallsEnum) {\n  TypesOfSmartContractCallsEnum[\"MultiESDTNFTTransfer\"] = \"MultiESDTNFTTransfer\";\n  TypesOfSmartContractCallsEnum[\"ESDTNFTTransfer\"] = \"ESDTNFTTransfer\";\n})(TypesOfSmartContractCallsEnum || (TypesOfSmartContractCallsEnum = {}));\n\nvar EnvironmentsEnum;\n\n(function (EnvironmentsEnum) {\n  EnvironmentsEnum[\"testnet\"] = \"testnet\";\n  EnvironmentsEnum[\"devnet\"] = \"devnet\";\n  EnvironmentsEnum[\"mainnet\"] = \"mainnet\";\n})(EnvironmentsEnum || (EnvironmentsEnum = {}));\n\nvar DAPP_INIT_ROUTE = '/dapp/init';\n\nvar getProviderType = function getProviderType(provider) {\n  switch (provider == null ? void 0 : provider.constructor) {\n    case WalletProvider:\n      return LoginMethodsEnum.wallet;\n\n    case WalletConnectProvider:\n      return LoginMethodsEnum.walletconnect;\n\n    case HWProvider:\n      return LoginMethodsEnum.ledger;\n\n    case ExtensionProvider:\n      return LoginMethodsEnum.extension;\n\n    case EmptyProvider:\n      return LoginMethodsEnum.none;\n\n    default:\n      return LoginMethodsEnum.extra;\n  }\n};\n\nvar newWalletProvider = function newWalletProvider(walletAddress) {\n  return new WalletProvider(\"\" + walletAddress + DAPP_INIT_ROUTE);\n};\n\nvar getLedgerConfiguration = /*#__PURE__*/function () {\n  var _ref = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(initializedHwWalletP) {\n    var hwApp, _yield$hwApp$getAppCo, contractData, version, dataEnabled;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (initializedHwWalletP.isInitialized()) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('Unable to get version. Provider not initialized');\n\n          case 2:\n            hwApp = initializedHwWalletP.hwApp;\n            _context.next = 5;\n            return hwApp.getAppConfiguration();\n\n          case 5:\n            _yield$hwApp$getAppCo = _context.sent;\n            contractData = _yield$hwApp$getAppCo.contractData;\n            version = _yield$hwApp$getAppCo.version;\n            dataEnabled = contractData === ledgerContractDataEnabledValue;\n            return _context.abrupt(\"return\", {\n              version: version,\n              dataEnabled: dataEnabled\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getLedgerConfiguration(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar notInitializedError = function notInitializedError(caller) {\n  return \"Unable to perform \" + caller + \", Provider not initialized\";\n};\n\nvar EmptyProvider = /*#__PURE__*/function () {\n  function EmptyProvider() {}\n\n  var _proto = EmptyProvider.prototype;\n\n  _proto.init = /*#__PURE__*/function () {\n    var _init = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", false);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function init() {\n      return _init.apply(this, arguments);\n    }\n\n    return init;\n  }();\n\n  _proto.login = function login(options) {\n    throw new Error(notInitializedError(\"login with options: \" + options));\n  };\n\n  _proto.logout = /*#__PURE__*/function () {\n    var _logout = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(options) {\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              throw new Error(notInitializedError(\"logout with options: \" + options));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function logout(_x2) {\n      return _logout.apply(this, arguments);\n    }\n\n    return logout;\n  }();\n\n  _proto.getAddress = /*#__PURE__*/function () {\n    var _getAddress = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4() {\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              throw new Error(notInitializedError('getAddress'));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getAddress() {\n      return _getAddress.apply(this, arguments);\n    }\n\n    return getAddress;\n  }();\n\n  _proto.isInitialized = function isInitialized() {\n    return false;\n  };\n\n  _proto.isConnected = /*#__PURE__*/function () {\n    var _isConnected = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5() {\n      return runtime_1.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", false);\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function isConnected() {\n      return _isConnected.apply(this, arguments);\n    }\n\n    return isConnected;\n  }();\n\n  _proto.sendTransaction = /*#__PURE__*/function () {\n    var _sendTransaction = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee6(transaction, options) {\n      return runtime_1.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              throw new Error(notInitializedError(\"sendTransaction with transactions: \" + transaction + \" options: \" + options));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function sendTransaction(_x3, _x4) {\n      return _sendTransaction.apply(this, arguments);\n    }\n\n    return sendTransaction;\n  }();\n\n  _proto.signTransaction = /*#__PURE__*/function () {\n    var _signTransaction = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee7(transaction, options) {\n      return runtime_1.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              throw new Error(notInitializedError(\"signTransaction with transactions: \" + transaction + \" options: \" + options));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function signTransaction(_x5, _x6) {\n      return _signTransaction.apply(this, arguments);\n    }\n\n    return signTransaction;\n  }();\n\n  _proto.signTransactions = /*#__PURE__*/function () {\n    var _signTransactions = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee8(transactions, options) {\n      return runtime_1.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              throw new Error(notInitializedError(\"signTransactions with transactions: \" + transactions + \" options: \" + options));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function signTransactions(_x7, _x8) {\n      return _signTransactions.apply(this, arguments);\n    }\n\n    return signTransactions;\n  }();\n\n  _proto.signMessage = /*#__PURE__*/function () {\n    var _signMessage = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee9(message) {\n      return runtime_1.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              throw new Error(notInitializedError(\"signTransactions with \" + message));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function signMessage(_x9) {\n      return _signMessage.apply(this, arguments);\n    }\n\n    return signMessage;\n  }();\n\n  return EmptyProvider;\n}();\n\nvar emptyProvider = /*#__PURE__*/new EmptyProvider();\nvar accountProvider = emptyProvider;\nvar externalProvider = null;\n\nfunction setAccountProvider(provider) {\n  accountProvider = provider;\n}\n\nfunction setExternalProvider(provider) {\n  externalProvider = provider;\n}\n\nfunction setExternalProviderAsAccountProvider() {\n  if (externalProvider != null) {\n    accountProvider = externalProvider;\n  }\n}\n\nfunction getAccountProvider() {\n  return accountProvider || emptyProvider;\n}\n\nfunction getExternalProvider() {\n  return externalProvider;\n}\n\nvar logoutAction = /*#__PURE__*/createAction('logout');\nvar loginAction = /*#__PURE__*/createAction('login', function (payload) {\n  return {\n    payload: payload\n  };\n});\nvar localStorageKeys = {\n  loginExpiresAt: 'dapp-core-login-expires-at'\n};\nvar hasLocalStorage = typeof localStorage !== 'undefined';\n\nvar setItem = function setItem(_ref) {\n  var key = _ref.key,\n      data = _ref.data,\n      expires = _ref.expires;\n\n  if (!hasLocalStorage) {\n    return;\n  }\n\n  localStorage.setItem(String(key), JSON.stringify({\n    expires: expires,\n    data: data\n  }));\n};\n\nvar getItem = function getItem(key) {\n  if (!hasLocalStorage) {\n    return;\n  }\n\n  var item = localStorage.getItem(String(key));\n\n  if (!item) {\n    return null;\n  }\n\n  var deserializedItem = JSON.parse(item);\n\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (!deserializedItem.hasOwnProperty('expires') || !deserializedItem.hasOwnProperty('data')) {\n    return null;\n  }\n\n  var expired = moment$2().unix() >= deserializedItem.expires;\n\n  if (expired) {\n    localStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nvar removeItem = function removeItem(key) {\n  if (!hasLocalStorage) {\n    return;\n  }\n\n  localStorage.removeItem(String(key));\n};\n\nvar local = {\n  __proto__: null,\n  localStorageKeys: localStorageKeys,\n  setItem: setItem,\n  getItem: getItem,\n  removeItem: removeItem\n};\nvar moment = {};\n\ntry {\n  moment = /*#__PURE__*/require('moment');\n} catch (err) {}\n\nvar moment$1 = moment;\n\nvar setItem$1 = function setItem(_ref) {\n  var key = _ref.key,\n      data = _ref.data,\n      expires = _ref.expires;\n  sessionStorage.setItem(String(key), JSON.stringify({\n    expires: expires,\n    data: data\n  }));\n};\n\nvar getItem$1 = function getItem(key) {\n  var item = sessionStorage.getItem(String(key));\n\n  if (!item) {\n    return null;\n  }\n\n  var deserializedItem = JSON.parse(item);\n\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (!deserializedItem.hasOwnProperty('expires') || !deserializedItem.hasOwnProperty('data')) {\n    return null;\n  }\n\n  var expired = moment$1().unix() >= deserializedItem.expires;\n\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nvar removeItem$1 = function removeItem(key) {\n  return sessionStorage.removeItem(String(key));\n};\n\nvar clear = function clear() {\n  return sessionStorage.clear();\n};\n\nvar storage = {\n  setItem: setItem$1,\n  getItem: getItem$1,\n  removeItem: removeItem$1,\n  clear: clear\n};\nvar session = {\n  __proto__: null,\n  setItem: setItem$1,\n  getItem: getItem$1,\n  removeItem: removeItem$1,\n  clear: clear,\n  storage: storage,\n  'default': storage\n};\nvar storage$1 = {\n  session: session,\n  local: local\n};\n\nfunction getNewLoginExpiresTimestamp() {\n  return new Date().setHours(new Date().getHours() + 24);\n}\n\nfunction setLoginExpiresAt(expiresAt) {\n  storage$1.local.setItem({\n    key: localStorageKeys.loginExpiresAt,\n    data: expiresAt,\n    expires: expiresAt\n  });\n}\n\nvar initialState = {\n  loginMethod: LoginMethodsEnum.none,\n  walletConnectLogin: null,\n  ledgerLogin: null,\n  tokenLogin: null,\n  walletLogin: null,\n  extensionLogin: null\n};\nvar loginInfoSlice = /*#__PURE__*/createSlice({\n  name: 'loginInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setLoginMethod: function setLoginMethod(state, action) {\n      state.loginMethod = action.payload;\n    },\n    setTokenLogin: function setTokenLogin(state, action) {\n      state.tokenLogin = action.payload;\n    },\n    setTokenLoginSignature: function setTokenLoginSignature(state, action) {\n      if ((state == null ? void 0 : state.tokenLogin) != null) {\n        state.tokenLogin.signature = action.payload;\n      }\n    },\n    setWalletLogin: function setWalletLogin(state, action) {\n      state.walletLogin = action.payload;\n    },\n    setWalletConnectLogin: function setWalletConnectLogin(state, action) {\n      state.walletConnectLogin = action.payload;\n    },\n    setLedgerLogin: function setLedgerLogin(state, action) {\n      state.ledgerLogin = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(logoutAction, function () {\n      return initialState;\n    });\n    builder.addCase(loginAction, function (state, action) {\n      state.loginMethod = action.payload.loginMethod;\n      setLoginExpiresAt(getNewLoginExpiresTimestamp());\n    });\n  }\n});\nvar _loginInfoSlice$actio = loginInfoSlice.actions,\n    setWalletConnectLogin = _loginInfoSlice$actio.setWalletConnectLogin,\n    setLedgerLogin = _loginInfoSlice$actio.setLedgerLogin,\n    setTokenLogin = _loginInfoSlice$actio.setTokenLogin,\n    setTokenLoginSignature = _loginInfoSlice$actio.setTokenLoginSignature,\n    setWalletLogin = _loginInfoSlice$actio.setWalletLogin;\nvar loginInfo = loginInfoSlice.reducer;\n\nfunction optionalRedirect(callbackUrl, shouldRedirect) {\n  if (shouldRedirect && callbackUrl != null) {\n    setTimeout(function () {\n      if (!window.location.pathname.includes(callbackUrl)) {\n        window.location.href = callbackUrl;\n      }\n    }, 200);\n  }\n}\n\nfunction getBridgeAddressFromNetwork(walletConnectBridgeAddresses) {\n  return walletConnectBridgeAddresses[Math.floor(Math.random() * walletConnectBridgeAddresses.length)];\n}\n\nvar ledgerAppErrorText = 'Check if Elrond app is open on Ledger';\nvar notConnectedCode = 0x6e01;\n\nfunction getLedgerErrorCodes(err) {\n  var errorMessage = null;\n  debugger;\n\n  if ((err == null ? void 0 : err.statusCode) in ledgerErrorCodes) {\n    var statusCode = err == null ? void 0 : err.statusCode;\n    var message = ledgerErrorCodes[statusCode].message;\n    errorMessage = statusCode === notConnectedCode ? ledgerAppErrorText : message;\n  }\n\n  return {\n    errorMessage: errorMessage,\n    defaultErrorMessage: ledgerAppErrorText\n  };\n}\n\nvar defaultNetwork = {\n  id: 'not-configured',\n  chainId: '',\n  name: 'NOT CONFIGURED',\n  egldLabel: '',\n  egldDenomination: '18',\n  decimals: '4',\n  gasPerDataByte: '1500',\n  walletConnectDeepLink: '',\n  walletConnectBridgeAddress: '',\n  walletAddress: '',\n  apiAddress: '',\n  explorerAddress: '',\n  apiTimeout: '4000'\n};\nvar initialState$1 = {\n  network: defaultNetwork,\n  chainID: '-1'\n};\nvar networkConfigSlice = /*#__PURE__*/createSlice({\n  name: 'appConfig',\n  initialState: initialState$1,\n  reducers: {\n    initializeNetworkConfig: function initializeNetworkConfig(state, action) {\n      var walletConnectBridgeAddress = getBridgeAddressFromNetwork(action.payload.walletConnectBridgeAddresses);\n      var network = omit(action.payload, 'walletConnectBridgeAddresses');\n      state.network = _extends({}, state.network, network, {\n        walletConnectBridgeAddress: walletConnectBridgeAddress\n      });\n    },\n    setChainID: function setChainID(state, action) {\n      state.chainID = action.payload;\n    }\n  }\n});\nvar _networkConfigSlice$a = networkConfigSlice.actions,\n    initializeNetworkConfig = _networkConfigSlice$a.initializeNetworkConfig,\n    setChainID = _networkConfigSlice$a.setChainID;\nvar networkConfig = networkConfigSlice.reducer;\nvar emptyAccount = {\n  balance: '...',\n  address: '',\n  nonce: 0\n};\nvar initialState$2 = {\n  address: '',\n  account: emptyAccount,\n  ledgerAccount: null,\n  publicKey: '',\n  walletConnectAccount: null,\n  isAccountLoading: true,\n  accountLoadingError: null\n};\nvar accountInfoSlice = /*#__PURE__*/createSlice({\n  name: 'accountInfoSlice',\n  initialState: initialState$2,\n  reducers: {\n    setAddress: function setAddress(state, action) {\n      var address = action.payload;\n      state.address = address;\n      state.publicKey = new Address(address).hex();\n    },\n    setAccount: function setAccount(state, action) {\n      state.account = action.payload;\n      state.isAccountLoading = false;\n      state.accountLoadingError = null;\n    },\n    setAccountNonce: function setAccountNonce(state, action) {\n      state.account.nonce = action.payload;\n    },\n    setAccountShard: function setAccountShard(state, action) {\n      state.shard = action.payload;\n    },\n    setLedgerAccount: function setLedgerAccount(state, action) {\n      state.ledgerAccount = action.payload;\n    },\n    updateLedgerAccount: function updateLedgerAccount(state, action) {\n      if (state.ledgerAccount != null) {\n        state.ledgerAccount.index = action.payload.index;\n        state.ledgerAccount.address = action.payload.address;\n      }\n    },\n    setWalletConnectAccount: function setWalletConnectAccount(state, action) {\n      state.walletConnectAccount = action.payload;\n    },\n    setIsAccountLoading: function setIsAccountLoading(state, action) {\n      state.isAccountLoading = action.payload;\n      state.accountLoadingError = null;\n    },\n    setAccountLoadingError: function setAccountLoadingError(state, action) {\n      state.accountLoadingError = action.payload;\n      state.isAccountLoading = false;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(logoutAction, function () {\n      storage$1.local.removeItem(localStorageKeys.loginExpiresAt);\n      return initialState$2;\n    });\n    builder.addCase(loginAction, function (state, action) {\n      var address = action.payload.address;\n      state.address = address;\n      state.publicKey = new Address(address).hex();\n    });\n    builder.addCase(REHYDRATE, function (state, action) {\n      var _action$payload;\n\n      if (!((_action$payload = action.payload) != null && _action$payload.account)) {\n        return;\n      }\n\n      var accountInfo = action.payload.account;\n      var address = accountInfo.address,\n          shard = accountInfo.shard,\n          account = accountInfo.account,\n          publicKey = accountInfo.publicKey;\n      state.address = address;\n      state.shard = shard;\n      state.account = account;\n      state.publicKey = publicKey;\n    });\n  }\n});\nvar _accountInfoSlice$act = accountInfoSlice.actions,\n    setAccount = _accountInfoSlice$act.setAccount,\n    setAccountNonce = _accountInfoSlice$act.setAccountNonce,\n    setAccountShard = _accountInfoSlice$act.setAccountShard,\n    setLedgerAccount = _accountInfoSlice$act.setLedgerAccount,\n    updateLedgerAccount = _accountInfoSlice$act.updateLedgerAccount,\n    setIsAccountLoading = _accountInfoSlice$act.setIsAccountLoading,\n    setAccountLoadingError = _accountInfoSlice$act.setAccountLoadingError;\nvar account = accountInfoSlice.reducer;\nvar pendingBatchTransactionsStates = [TransactionBatchStatusesEnum.sent];\nvar successBatchTransactionsStates = [TransactionBatchStatusesEnum.success];\nvar failBatchTransactionsStates = [TransactionBatchStatusesEnum.fail, TransactionBatchStatusesEnum.cancelled, TransactionBatchStatusesEnum.timedOut];\nvar timedOutBatchTransactionsStates = [TransactionBatchStatusesEnum.timedOut];\nvar pendingServerTransactionsStatuses = [TransactionServerStatusesEnum.pending];\nvar successServerTransactionsStates = [TransactionServerStatusesEnum.success];\nvar completedServerTransactionsStates = [TransactionServerStatusesEnum.completed];\nvar failServerTransactionsStates = [TransactionServerStatusesEnum.fail, TransactionServerStatusesEnum.invalid];\n\nfunction getIsTransactionCompleted(status) {\n  return completedServerTransactionsStates.includes(status);\n}\n\nfunction getIsTransactionPending(status) {\n  return status != null && (isBatchTransactionPending(status) || isServerTransactionPending(status));\n}\n\nfunction getIsTransactionSuccessful(status) {\n  return status != null && (isBatchTransactionSuccessful(status) || isServerTransactionSuccessful(status));\n}\n\nfunction getIsTransactionFailed(status) {\n  return status != null && (isBatchTransactionFailed(status) || isServerTransactionFailed(status));\n}\n\nfunction getIsTransactionTimedOut(status) {\n  return status != null && isBatchTransactionTimedOut(status);\n}\n\nfunction isBatchTransactionPending(status) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nfunction isBatchTransactionSuccessful(status) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nfunction isBatchTransactionFailed(status) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nfunction isBatchTransactionTimedOut(status) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nfunction isServerTransactionPending(status) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\n\nfunction isServerTransactionSuccessful(status) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nfunction isServerTransactionFailed(status) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n\nvar TransactionTypesEnum;\n\n(function (TransactionTypesEnum) {\n  TransactionTypesEnum[\"MultiESDTNFTTransfer\"] = \"MultiESDTNFTTransfer\";\n  TransactionTypesEnum[\"ESDTTransfer\"] = \"ESDTTransfer\";\n  TransactionTypesEnum[\"ESDTNFTTransfer\"] = \"ESDTNFTTransfer\";\n  TransactionTypesEnum[\"esdtTransaction\"] = \"esdtTransaction\";\n  TransactionTypesEnum[\"nftTransaction\"] = \"nftTransaction\";\n  TransactionTypesEnum[\"scCall\"] = \"scCall\";\n})(TransactionTypesEnum || (TransactionTypesEnum = {}));\n\nvar isUtf8 = function isUtf8(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 127) return false;\n  }\n\n  return true;\n};\n\nfunction decodePart(part) {\n  var decodedPart = part;\n\n  try {\n    var hexPart = Buffer.from(part, 'hex').toString().trim();\n\n    if (isUtf8(hexPart) && hexPart.length > 1) {\n      decodedPart = hexPart;\n    }\n  } catch (error) {}\n\n  return decodedPart;\n}\n\nfunction isStringBase64(string) {\n  try {\n    return Buffer.from(string, 'base64').toString() === atob(string);\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction encodeToBase64(string) {\n  return btoa(string);\n}\n\nfunction decodeBase64(string) {\n  return atob(string);\n}\n\nvar getAllStringOccurrences = function getAllStringOccurrences(sourceStr, searchStr) {\n  var startingIndices = [];\n  var indexOccurence = sourceStr.indexOf(searchStr, 0);\n\n  while (indexOccurence >= 0) {\n    startingIndices.push(indexOccurence);\n    indexOccurence = sourceStr.indexOf(searchStr, indexOccurence + 1);\n  }\n\n  return startingIndices;\n};\n\nfunction parseMultiEsdtTransferData(data) {\n  var transactions = [];\n  var contractCallDataIndex = 0;\n\n  try {\n    if (data != null && data.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) && data != null && data.includes('@')) {\n      var _data$split = data == null ? void 0 : data.split('@'),\n          receiver = _data$split[1],\n          encodedTxCount = _data$split[2],\n          rest = _data$split.slice(3);\n\n      if (receiver) {\n        var txCount = new BigNumber(encodedTxCount, 16).toNumber();\n        var itemIndex = 0;\n\n        for (var txIndex = 0; txIndex < txCount; txIndex++) {\n          var transaction = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver: receiver\n          };\n\n          for (var index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n\n              case 1:\n                {\n                  var encodedNonce = rest[itemIndex] && rest[itemIndex].length ? rest[itemIndex] : '';\n\n                  if (encodedNonce) {\n                    transaction.nonce = encodedNonce;\n                  } else {\n                    transaction.type = TransactionTypesEnum.esdtTransaction;\n                  }\n\n                  transaction.data = transaction.data + \"@\" + rest[itemIndex];\n                  break;\n                }\n\n              case 2:\n                transaction.amount = new BigNumber(rest[itemIndex], 16).toString(10);\n                transaction.data = transaction.data + \"@\" + rest[itemIndex];\n                break;\n\n              default:\n                break;\n            }\n\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n\n          transactions[txIndex] = transaction;\n        }\n\n        var isDifferentFromTxCount = transactions.length !== txCount;\n        var hasInvalidNoOfAdSigns = transactions.some(function (tx) {\n          var adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n        var hasAdStart = transactions.some(function (tx) {\n          return tx.data.startsWith('@');\n        });\n\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n\n        if (rest[contractCallDataIndex]) {\n          var scCallData = rest[contractCallDataIndex];\n\n          for (var i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver: receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n\n  return transactions;\n}\n\nfunction canTransformToPublicKey(address) {\n  try {\n    var checkAddress = new Address(address);\n    return Boolean(checkAddress.bech32());\n  } catch (_unused) {\n    return false;\n  }\n}\n\nfunction addressIsValid(destinationAddress) {\n  var isValidBach = (destinationAddress == null ? void 0 : destinationAddress.startsWith('erd')) && destinationAddress.length === 62 && /^\\w+$/.test(destinationAddress);\n  return isValidBach && canTransformToPublicKey(destinationAddress);\n}\n\nvar noData = {\n  tokenId: '',\n  amount: ''\n};\n\nvar decodeData = function decodeData(data) {\n  var nonceIndex = 2;\n  var amountIndex = 3;\n  var parts = data.split('@');\n  var decodedParts = parts.map(function (part, i) {\n    return [nonceIndex, amountIndex].includes(i) ? part : decodePart(part);\n  });\n  return decodedParts;\n};\n\nfunction getTokenFromData(data) {\n  if (!data) {\n    return noData;\n  }\n\n  var isTokenTransfer = data.startsWith(TransactionTypesEnum.ESDTTransfer);\n  var nftTransfer = data.startsWith(TransactionTypesEnum.ESDTNFTTransfer) && data.includes('@');\n\n  if (isTokenTransfer) {\n    var _data$split = data.split('@'),\n        encodedToken = _data$split[1],\n        encodedAmount = _data$split[2];\n\n    try {\n      var tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n\n      if (!tokenId) {\n        return noData;\n      }\n\n      var amount = new BigNumber('0x' + encodedAmount.replace('0x', '')).toString(10);\n      return {\n        tokenId: tokenId,\n        amount: amount\n      };\n    } catch (e) {}\n  }\n\n  if (nftTransfer) {\n    try {\n      var _decodeData = decodeData(data),\n\n      /*ESDTNFTTransfer*/\n      collection = _decodeData[1],\n          nonce = _decodeData[2],\n          quantity = _decodeData[3],\n          receiver = _decodeData[4];\n\n      if ([collection, nonce, quantity, receiver].every(function (el) {\n        return Boolean(el);\n      }) && addressIsValid(new Address(receiver).bech32())) {\n        return {\n          tokenId: collection + \"-\" + nonce,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection: collection,\n          nonce: nonce,\n          receiver: new Address(receiver).bech32()\n        };\n      }\n    } catch (err) {}\n  }\n\n  return noData;\n}\n\nfunction isTokenTransfer(_ref) {\n  var tokenId = _ref.tokenId,\n      erdLabel = _ref.erdLabel;\n  return Boolean(tokenId && tokenId !== erdLabel);\n}\n\nfunction buildUrlParams(search, urlParams) {\n  var urlSearchParams = new URLSearchParams(search);\n  var params = Object.fromEntries(urlSearchParams);\n  var nextUrlParams = new URLSearchParams(_extends({}, params, urlParams)).toString();\n  return {\n    nextUrlParams: nextUrlParams,\n    params: params\n  };\n}\n\nfunction builtCallbackUrl(_ref) {\n  var callbackUrl = _ref.callbackUrl,\n      _ref$urlParams = _ref.urlParams,\n      urlParams = _ref$urlParams === void 0 ? {} : _ref$urlParams;\n  var url = callbackUrl;\n\n  if (Object.entries(urlParams).length > 0) {\n    var _URL = new URL(callbackUrl),\n        search = _URL.search,\n        origin = _URL.origin,\n        pathname = _URL.pathname;\n\n    var _buildUrlParams = buildUrlParams(search, urlParams),\n        nextUrlParams = _buildUrlParams.nextUrlParams;\n\n    url = \"\" + origin + pathname + \"?\" + nextUrlParams;\n  }\n\n  return url;\n}\n\nfunction parseTransactionAfterSigning(transaction, isLedger) {\n  if (isLedger === void 0) {\n    isLedger = false;\n  } // TODO: REMOVE\n  //#region REMOVE when options is available in erdjs getTransactionsFromWalletUrl\n\n\n  if (isLedger) {\n    transaction.version = TransactionVersion.withTxHashSignVersion();\n    transaction.options = TransactionOptions.withTxHashSignOptions();\n  } //#endregion\n\n\n  var parsedTransaction = transaction.toPlainObject();\n  parsedTransaction.hash = transaction.getHash().toString();\n  parsedTransaction.status = TransactionServerStatusesEnum.pending;\n  return parsedTransaction;\n}\n\nvar initialState$3 = {\n  signedTransactions: {},\n  transactionsToSign: null,\n  signTransactionsError: null,\n  customTransactionInformationForSessionId: {}\n};\nvar defaultCustomInformation = {\n  signWithoutSending: false,\n  sessionInformation: null,\n  redirectAfterSign: false\n};\nvar transactionsSlice = /*#__PURE__*/createSlice({\n  name: 'transactionsSlice',\n  initialState: initialState$3,\n  reducers: {\n    moveTransactionsToSignedState: function moveTransactionsToSignedState(state, action) {\n      var _state$customTransact, _state$transactionsTo;\n\n      var _action$payload = action.payload,\n          sessionId = _action$payload.sessionId,\n          transactions = _action$payload.transactions,\n          errorMessage = _action$payload.errorMessage,\n          status = _action$payload.status;\n      var customTransactionInformation = ((_state$customTransact = state.customTransactionInformationForSessionId) == null ? void 0 : _state$customTransact[sessionId]) || defaultCustomInformation;\n      state.signedTransactions[sessionId] = {\n        transactions: transactions,\n        status: status,\n        errorMessage: errorMessage,\n        customTransactionInformation: customTransactionInformation\n      };\n\n      if ((state == null ? void 0 : (_state$transactionsTo = state.transactionsToSign) == null ? void 0 : _state$transactionsTo.sessionId) === sessionId) {\n        state.transactionsToSign = initialState$3.transactionsToSign;\n      }\n    },\n    clearSignedTransaction: function clearSignedTransaction(state, action) {\n      if (state.signedTransactions[action.payload]) {\n        delete state.signedTransactions[action.payload];\n      }\n    },\n    clearTransactionToSign: function clearTransactionToSign(state) {\n      if (state != null && state.transactionsToSign) {\n        state.transactionsToSign = null;\n      }\n    },\n    updateSignedTransaction: function updateSignedTransaction(state, action) {\n      state.signedTransactions = _extends({}, state.signedTransactions, action.payload);\n    },\n    updateSignedTransactions: function updateSignedTransactions(state, action) {\n      var _action$payload2 = action.payload,\n          sessionId = _action$payload2.sessionId,\n          status = _action$payload2.status,\n          errorMessage = _action$payload2.errorMessage,\n          transactions = _action$payload2.transactions;\n      var transaction = state.signedTransactions[sessionId];\n\n      if (transaction != null) {\n        state.signedTransactions[sessionId].status = status;\n\n        if (errorMessage != null) {\n          state.signedTransactions[sessionId].errorMessage = errorMessage;\n        }\n\n        if (transactions != null) {\n          state.signedTransactions[sessionId].transactions = transactions;\n        }\n      }\n    },\n    updateSignedTransactionStatus: function updateSignedTransactionStatus(state, action) {\n      var _state$signedTransact, _state$signedTransact2;\n\n      var _action$payload3 = action.payload,\n          sessionId = _action$payload3.sessionId,\n          status = _action$payload3.status,\n          errorMessage = _action$payload3.errorMessage,\n          transactionHash = _action$payload3.transactionHash;\n      var transactions = (_state$signedTransact = state.signedTransactions) == null ? void 0 : (_state$signedTransact2 = _state$signedTransact[sessionId]) == null ? void 0 : _state$signedTransact2.transactions;\n\n      if (transactions != null) {\n        var _state$signedTransact3, _state$signedTransact4, _state$signedTransact5, _state$signedTransact6;\n\n        state.signedTransactions[sessionId].transactions = transactions.map(function (transaction) {\n          if (transaction.hash === transactionHash) {\n            return _extends({}, transaction, {\n              status: status,\n              errorMessage: errorMessage\n            });\n          }\n\n          return transaction;\n        });\n        var areTransactionsSuccessful = (_state$signedTransact3 = state.signedTransactions[sessionId]) == null ? void 0 : (_state$signedTransact4 = _state$signedTransact3.transactions) == null ? void 0 : _state$signedTransact4.every(function (transaction) {\n          return getIsTransactionCompleted(transaction.status);\n        });\n        var areTransactionsFailed = (_state$signedTransact5 = state.signedTransactions[sessionId]) == null ? void 0 : (_state$signedTransact6 = _state$signedTransact5.transactions) == null ? void 0 : _state$signedTransact6.every(function (transaction) {\n          return getIsTransactionFailed(transaction.status);\n        });\n\n        if (areTransactionsSuccessful) {\n          state.signedTransactions[sessionId].status = TransactionBatchStatusesEnum.success;\n        }\n\n        if (areTransactionsFailed) {\n          state.signedTransactions[sessionId].status = TransactionBatchStatusesEnum.fail;\n        }\n      }\n    },\n    setTransactionsToSign: function setTransactionsToSign(state, action) {\n      state.transactionsToSign = action.payload;\n      var _action$payload4 = action.payload,\n          sessionId = _action$payload4.sessionId,\n          customTransactionInformation = _action$payload4.customTransactionInformation;\n      state.customTransactionInformationForSessionId[sessionId] = customTransactionInformation;\n      state.signTransactionsError = null;\n    },\n    clearAllTransactionsToSign: function clearAllTransactionsToSign(state) {\n      state.transactionsToSign = initialState$3.transactionsToSign;\n      state.signTransactionsError = null;\n    },\n    clearAllSignedTransactions: function clearAllSignedTransactions(state) {\n      state.signedTransactions = initialState$3.signedTransactions;\n    },\n    setSignTransactionsError: function setSignTransactionsError(state, action) {\n      state.signTransactionsError = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(logoutAction, function () {\n      return initialState$3;\n    });\n    builder.addCase(REHYDRATE, function (state, action) {\n      var _action$payload5;\n\n      if (!((_action$payload5 = action.payload) != null && _action$payload5.transactions)) {\n        return;\n      }\n\n      var _action$payload$trans = action.payload.transactions,\n          signedTransactions = _action$payload$trans.signedTransactions,\n          customTransactionInformationForSessionId = _action$payload$trans.customTransactionInformationForSessionId;\n      var parsedSignedTransactions = Object.entries(signedTransactions).reduce(function (acc, _ref) {\n        var sessionId = _ref[0],\n            transaction = _ref[1];\n        var txTimestamp = new Date(sessionId);\n        var expiration = new Date();\n        expiration.setHours(expiration.getHours() + 5);\n        var isExpired = expiration - txTimestamp > 0;\n\n        if (!isExpired) {\n          acc[sessionId] = transaction;\n        }\n\n        return acc;\n      }, {});\n\n      if (customTransactionInformationForSessionId != null) {\n        state.customTransactionInformationForSessionId = customTransactionInformationForSessionId;\n      }\n\n      if (signedTransactions != null) {\n        state.signedTransactions = parsedSignedTransactions;\n      }\n    });\n  }\n});\nvar _transactionsSlice$ac = transactionsSlice.actions,\n    updateSignedTransactionStatus = _transactionsSlice$ac.updateSignedTransactionStatus,\n    updateSignedTransactions = _transactionsSlice$ac.updateSignedTransactions,\n    setTransactionsToSign = _transactionsSlice$ac.setTransactionsToSign,\n    clearAllTransactionsToSign = _transactionsSlice$ac.clearAllTransactionsToSign,\n    clearAllSignedTransactions = _transactionsSlice$ac.clearAllSignedTransactions,\n    clearSignedTransaction = _transactionsSlice$ac.clearSignedTransaction,\n    setSignTransactionsError = _transactionsSlice$ac.setSignTransactionsError,\n    moveTransactionsToSignedState = _transactionsSlice$ac.moveTransactionsToSignedState;\nvar transactions = transactionsSlice.reducer;\nvar defaultTransactionErrorMessage = 'Transaction failed';\nvar defaultTransactionSuccessMessage = 'Transaction successful';\nvar defaultTransactionProcessingMessage = 'Processing transaction';\nvar defaultTransactionSubmittedMessage = 'Transaction submitted';\nvar initialState$4 = {};\nvar signTransactionsSlice = /*#__PURE__*/createSlice({\n  name: 'transactionsInfo',\n  initialState: initialState$4,\n  reducers: {\n    setTransactionsDisplayInfo: function setTransactionsDisplayInfo(state, action) {\n      var _action$payload = action.payload,\n          sessionId = _action$payload.sessionId,\n          transactionsDisplayInfo = _action$payload.transactionsDisplayInfo;\n\n      if (sessionId != null) {\n        state[sessionId] = {\n          errorMessage: (transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo.errorMessage) || defaultTransactionErrorMessage,\n          successMessage: (transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo.successMessage) || defaultTransactionSuccessMessage,\n          processingMessage: (transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo.processingMessage) || defaultTransactionProcessingMessage,\n          submittedMessage: (transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo.submittedMessage) || defaultTransactionSubmittedMessage,\n          transactionDuration: transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo.transactionDuration\n        };\n      }\n    },\n    clearTransactionsInfoForSessionId: function clearTransactionsInfoForSessionId(state, action) {\n      if (action.payload != null) {\n        delete state[action.payload];\n      }\n    },\n    clearTransactionsInfo: function clearTransactionsInfo() {\n      return initialState$4;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(logoutAction, function () {\n      return initialState$4;\n    });\n  }\n});\nvar _signTransactionsSlic = signTransactionsSlice.actions,\n    setTransactionsDisplayInfo = _signTransactionsSlic.setTransactionsDisplayInfo,\n    clearTransactionsInfoForSessionId = _signTransactionsSlic.clearTransactionsInfoForSessionId;\nvar transactionsInfo = signTransactionsSlice.reducer;\nvar initialState$5 = {};\nvar modalsSlice = /*#__PURE__*/createSlice({\n  name: 'modalsSlice',\n  initialState: initialState$5,\n  reducers: {\n    setTxSubmittedModal: function setTxSubmittedModal(state, action) {\n      state.txSubmittedModal = action.payload;\n    },\n    setNotificationModal: function setNotificationModal(state, action) {\n      state.notificationModal = action.payload;\n    },\n    clearTxSubmittedModal: function clearTxSubmittedModal(state) {\n      state.txSubmittedModal = undefined;\n    },\n    clearNotificationModal: function clearNotificationModal(state) {\n      state.notificationModal = undefined;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(logoutAction, function () {\n      return initialState$5;\n    });\n  }\n});\nvar _modalsSlice$actions = modalsSlice.actions,\n    setTxSubmittedModal = _modalsSlice$actions.setTxSubmittedModal,\n    setNotificationModal = _modalsSlice$actions.setNotificationModal,\n    clearNotificationModal = _modalsSlice$actions.clearNotificationModal;\nvar modals = modalsSlice.reducer;\nvar createDeepEqualSelector = /*#__PURE__*/createSelectorCreator(defaultMemoize, isEqual);\n\nvar accountInfoSelector = function accountInfoSelector(state) {\n  return state.account;\n};\n\nvar addressSelector = /*#__PURE__*/createDeepEqualSelector(accountInfoSelector, function (state) {\n  return state.address;\n});\nvar accountSelector = /*#__PURE__*/createDeepEqualSelector(accountInfoSelector, function (state) {\n  return state.account;\n});\nvar accountBalanceSelector = /*#__PURE__*/createDeepEqualSelector(accountSelector, function (account) {\n  return account.balance;\n});\nvar accountNonceSelector = /*#__PURE__*/createDeepEqualSelector(accountSelector, function (state) {\n  var _state$nonce;\n\n  return (state == null ? void 0 : (_state$nonce = state.nonce) == null ? void 0 : _state$nonce.valueOf()) || 0;\n});\nvar shardSelector = /*#__PURE__*/createDeepEqualSelector(accountInfoSelector, function (state) {\n  return state.shard;\n});\nvar ledgerAccountSelector = /*#__PURE__*/createDeepEqualSelector(accountInfoSelector, function (state) {\n  return state.ledgerAccount;\n});\nvar isAccountLoadingSelector = /*#__PURE__*/createDeepEqualSelector(accountInfoSelector, function (state) {\n  return state.isAccountLoading;\n});\n\nvar loginInfoSelector = function loginInfoSelector(state) {\n  return state.loginInfo;\n};\n\nvar loginMethodSelector = /*#__PURE__*/createDeepEqualSelector(loginInfoSelector, function (state) {\n  return state.loginMethod;\n});\nvar isLoggedInSelector = /*#__PURE__*/createDeepEqualSelector(loginInfoSelector, addressSelector, function (state, address) {\n  return state.loginMethod != LoginMethodsEnum.none && Boolean(address);\n});\nvar walletConnectLoginSelector = /*#__PURE__*/createDeepEqualSelector(loginInfoSelector, function (state) {\n  return state.walletConnectLogin;\n});\nvar ledgerLoginSelector = /*#__PURE__*/createDeepEqualSelector(loginInfoSelector, function (state) {\n  return state.ledgerLogin;\n});\nvar walletLoginSelector = /*#__PURE__*/createDeepEqualSelector(loginInfoSelector, function (state) {\n  return state.walletLogin;\n});\nvar whitelistedActions = ['logout'];\nvar throttledSetNewExpires = /*#__PURE__*/throttle(function () {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nvar loginSessionMiddleware = function loginSessionMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (whitelistedActions.includes(action.type)) {\n        return next(action);\n      }\n\n      var appState = store.getState();\n      var loginTimestamp = storage$1.local.getItem(localStorageKeys.loginExpiresAt);\n      var isLoggedIn = isLoggedInSelector(appState);\n\n      if (!isLoggedIn) {\n        return next(action);\n      }\n\n      if (loginTimestamp == null) {\n        return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n      }\n\n      var now = Date.now();\n      var isExpired = loginTimestamp - now < 0;\n\n      if (isExpired) {\n        return setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n          var provider;\n          return runtime_1.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  provider = getAccountProvider();\n                  console.log('session expired');\n                  store.dispatch(logoutAction());\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return provider == null ? void 0 : provider.logout({\n                    callbackUrl: '/'\n                  });\n\n                case 6:\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](3);\n                  console.error('error logging out', _context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 8]]);\n        })), 1000);\n      } else {\n        throttledSetNewExpires();\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar reducers = {\n  account: account,\n  networkConfig: networkConfig,\n  loginInfo: loginInfo,\n  modals: modals,\n  transactions: transactions,\n  transactionsInfo: transactionsInfo\n};\n\nif (typeof window !== 'undefined' && window.localStorage != null) {\n  //This allows for this library to be used on other platforms than web, like React Native\n  //without this condition, redux-persist 6+ will throw an error if persist storage fails\n  var sessionStorage$1 = /*#__PURE__*/require('redux-persist/lib/storage/session')[\"default\"]; //#region custom reducers\n\n\n  var transactionsInfoPersistConfig = {\n    key: 'dapp-core-transactionsInfo',\n    version: 1,\n    storage: sessionStorage$1\n  };\n  var transactionsReducer = {\n    key: 'dapp-core-transactions',\n    version: 1,\n    storage: sessionStorage$1,\n    blacklist: ['transactionsToSign']\n  };\n  reducers.transactions = /*#__PURE__*/persistReducer(transactionsReducer, transactions);\n  reducers.transactionsInfo = /*#__PURE__*/persistReducer(transactionsInfoPersistConfig, transactionsInfo); //#endregion\n}\n\nvar rootReducer = /*#__PURE__*/combineReducers(reducers);\n\nvar _window;\n\nvar localStorageReducers = rootReducer;\nvar migrations = {\n  2: function _(state) {\n    return _extends({}, state, {\n      networkConfig: defaultNetwork\n    });\n  }\n}; //This allows for this library to be used on other platforms than web, like React Native\n//without this condition, redux-persist 6+ will throw an error if persist storage fails\n\nif (typeof window !== 'undefined' && ((_window = window) == null ? void 0 : _window.localStorage) != null) {\n  var storage$2 = /*#__PURE__*/require('redux-persist/lib/storage')[\"default\"];\n\n  var persistConfig = {\n    key: 'dapp-core-store',\n    version: 2,\n    storage: storage$2,\n    whitelist: ['account', 'loginInfo', 'toasts', 'modals', 'networkConfig'],\n    migrate: /*#__PURE__*/createMigrate(migrations, {\n      debug: false\n    })\n  };\n  localStorageReducers = /*#__PURE__*/persistReducer(persistConfig, rootReducer);\n}\n\nvar store = /*#__PURE__*/configureStore({\n  reducer: localStorageReducers,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, 'accountInfoSlice/setAccount', 'accountInfoSlice/setAccountNonce'],\n        ignoredPaths: ['payload.nonce', 'account.account.nonce']\n      }\n    }).concat(loginSessionMiddleware);\n  }\n});\nvar persistor = /*#__PURE__*/persistStore(store);\n\nvar networkConfigSelector = function networkConfigSelector(state) {\n  return state.networkConfig;\n};\n\nvar chainIDSelector = /*#__PURE__*/createDeepEqualSelector(networkConfigSelector, function (state) {\n  return new ChainID(state.chainID);\n});\nvar walletConnectBridgeAddressSelector = /*#__PURE__*/createDeepEqualSelector(networkConfigSelector, function (state) {\n  return state.network.walletConnectBridgeAddress;\n});\nvar walletConnectDeepLinkSelector = /*#__PURE__*/createDeepEqualSelector(networkConfigSelector, function (state) {\n  return state.network.walletConnectDeepLink;\n});\nvar networkSelector = /*#__PURE__*/createDeepEqualSelector(networkConfigSelector, function (state) {\n  return state.network;\n});\nvar apiNetworkSelector = /*#__PURE__*/createDeepEqualSelector(networkSelector, function (state) {\n  return state.apiAddress;\n});\nvar egldLabelSelector = /*#__PURE__*/createDeepEqualSelector(networkSelector, function (state) {\n  return state.egldLabel;\n});\n\nfunction newTransaction(rawTransaction) {\n  var _rawTransaction$gasLi, _rawTransaction$gasPr, _rawTransaction$versi;\n\n  var data = rawTransaction.data;\n  var dataPayload = isStringBase64(data) ? TransactionPayload.fromEncoded(data) : new TransactionPayload(data);\n  return new Transaction(_extends({\n    value: Balance.fromString(rawTransaction.value),\n    data: dataPayload,\n    nonce: new Nonce(rawTransaction.nonce),\n    receiver: new Address(rawTransaction.receiver),\n    sender: new Address(rawTransaction.sender),\n    gasLimit: new GasLimit((_rawTransaction$gasLi = rawTransaction.gasLimit) != null ? _rawTransaction$gasLi : gasLimit),\n    gasPrice: new GasPrice((_rawTransaction$gasPr = rawTransaction.gasPrice) != null ? _rawTransaction$gasPr : gasPrice),\n    chainID: new ChainID(rawTransaction.chainID),\n    version: new TransactionVersion((_rawTransaction$versi = rawTransaction.version) != null ? _rawTransaction$versi : version)\n  }, rawTransaction.options ? {\n    options: new TransactionOptions(rawTransaction.options)\n  } : {}));\n}\n\nvar transactionsSelectors = function transactionsSelectors(state) {\n  return state.transactions;\n};\n\nvar signedTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(transactionsSelectors, function (state) {\n  return state.signedTransactions;\n});\nvar signTransactionsErrorSelector = /*#__PURE__*/createDeepEqualSelector(transactionsSelectors, function (state) {\n  return state.signTransactionsError;\n});\n\nvar selectTxByStatus = function selectTxByStatus(txStatusVerifier) {\n  return function (signedTransactions) {\n    return Object.entries(signedTransactions).reduce(function (acc, _ref) {\n      var sessionId = _ref[0],\n          txBody = _ref[1];\n\n      if (txStatusVerifier(txBody.status)) {\n        acc[sessionId] = txBody;\n      }\n\n      return acc;\n    }, {});\n  };\n};\n\nvar pendingSignedTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, /*#__PURE__*/selectTxByStatus(getIsTransactionPending));\nvar successfulTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, /*#__PURE__*/selectTxByStatus(getIsTransactionSuccessful));\nvar completedTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, /*#__PURE__*/selectTxByStatus(getIsTransactionCompleted));\nvar failedTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, /*#__PURE__*/selectTxByStatus(getIsTransactionFailed));\nvar timedOutTransactionsSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, /*#__PURE__*/selectTxByStatus(getIsTransactionTimedOut));\nvar transactionsToSignSelector = /*#__PURE__*/createDeepEqualSelector(transactionsSelectors, function (state) {\n  var _state$transactionsTo;\n\n  if ((state == null ? void 0 : state.transactionsToSign) == null) {\n    return null;\n  }\n\n  return _extends({}, state.transactionsToSign, {\n    transactions: (state == null ? void 0 : (_state$transactionsTo = state.transactionsToSign) == null ? void 0 : _state$transactionsTo.transactions.map(function (tx) {\n      return newTransaction(tx);\n    })) || []\n  });\n});\nvar transactionStatusSelector = /*#__PURE__*/createDeepEqualSelector(signedTransactionsSelector, function (_, transactionSessionId) {\n  return transactionSessionId;\n}, function (signedTransactions, transactionSessionId) {\n  return transactionSessionId != null ? (signedTransactions == null ? void 0 : signedTransactions[transactionSessionId]) || {} : {};\n});\nvar defaultTransactionInfo = {\n  errorMessage: defaultTransactionErrorMessage,\n  successMessage: defaultTransactionSuccessMessage,\n  processingMessage: defaultTransactionProcessingMessage\n};\n\nvar transactionsInfoSelectors = function transactionsInfoSelectors(state) {\n  return state.transactionsInfo;\n};\n\nvar transactionDisplayInfoSelector = /*#__PURE__*/createDeepEqualSelector(transactionsInfoSelectors, function (_, transactionSessionId) {\n  return transactionSessionId;\n}, function (transactionsDisplayInfo, transactionSessionId) {\n  return transactionSessionId != null ? (transactionsDisplayInfo == null ? void 0 : transactionsDisplayInfo[Number(transactionSessionId)]) || defaultTransactionInfo : defaultTransactionInfo;\n});\n\nvar modalsSliceSelector = function modalsSliceSelector(state) {\n  return state.modals;\n};\n\nvar notificationModalSelector = /*#__PURE__*/createDeepEqualSelector(modalsSliceSelector, function (state) {\n  return state.notificationModal;\n});\n\nfunction getIsLoggedIn() {\n  return isLoggedInSelector(store.getState());\n}\n\nfunction logout(_x, _x2) {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(callbackUrl, onRedirect) {\n    var provider, providerType, isLoggedIn, isWalletProvider, needsCallbackUrl, url;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = getAccountProvider();\n            providerType = getProviderType(provider);\n            isLoggedIn = getIsLoggedIn();\n\n            if (!(!isLoggedIn || !provider)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            store.dispatch(logoutAction());\n            _context.prev = 6;\n            isWalletProvider = providerType === LoginMethodsEnum.wallet;\n            needsCallbackUrl = isWalletProvider && !callbackUrl;\n            url = needsCallbackUrl ? window.location.origin : callbackUrl;\n            _context.next = 12;\n            return provider.logout({\n              callbackUrl: url\n            });\n\n          case 12:\n            if (callbackUrl && providerType !== LoginMethodsEnum.wallet) {\n              if (typeof onRedirect === 'function') {\n                onRedirect(callbackUrl);\n              } else {\n                window.location.href = callbackUrl;\n              }\n            }\n\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            console.error('error logging out', _context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n  return _logout.apply(this, arguments);\n}\n\nfunction buildUrlParams$1(search, urlParams) {\n  var urlSearchParams = new URLSearchParams(search);\n  var params = Object.fromEntries(urlSearchParams);\n  var nextUrlParams = new URLSearchParams(_extends({}, params, urlParams)).toString();\n  return {\n    nextUrlParams: nextUrlParams,\n    params: params\n  };\n}\n\nvar _excluded = [\"default\"];\n\nfunction switchTrue(object) {\n  var defaultValue = object[\"default\"],\n      rest = _objectWithoutPropertiesLoose(object, _excluded);\n\n  var obj = _extends({\n    \"default\": defaultValue\n  }, rest);\n\n  var result = Object.keys(obj).reduce(function (acc, cur) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[cur === 'default' ? 'true' : cur] = obj[cur], _extends2));\n  }, {});\n  return result['true'];\n}\n\nfunction getAccountProviderType() {\n  var provider = getAccountProvider();\n  return getProviderType(provider);\n}\n\nfunction getChainID() {\n  return chainIDSelector(store.getState());\n}\n\nfunction getNetworkConfig() {\n  return networkSelector(store.getState());\n}\n\nfunction getEgldLabel() {\n  return egldLabelSelector(store.getState());\n}\n\nfunction getIsProviderEqualTo(comparedProviderType) {\n  var providerType = getAccountProviderType();\n  return providerType === comparedProviderType;\n}\n\nfunction getAddress() {\n  var search = window.location.search;\n  var appState = store.getState();\n  var provider = getAccountProvider();\n  var address = addressSelector(appState);\n  var loggedIn = isLoggedInSelector(appState);\n  var walletLogin = walletLoginSelector(appState);\n\n  if (!provider) {\n    throw 'provider not initialized';\n  }\n\n  if (getIsProviderEqualTo(LoginMethodsEnum.ledger) && loggedIn) {\n    return new Promise(function (resolve) {\n      resolve(address);\n    });\n  }\n\n  return !getIsProviderEqualTo(LoginMethodsEnum.none) && !getIsProviderEqualTo(LoginMethodsEnum.wallet) && !getIsProviderEqualTo(LoginMethodsEnum.extra) ? // TODO: does not take into account ledger locked see link for details:\n  // https://github.com/ElrondNetwork/dapp/blob/d5c57695a10055f20d387ba064b6843606789ee9/src/helpers/accountMethods.tsx#L21\n  provider.getAddress() : new Promise(function (resolve) {\n    if (walletLogin != null) {\n      var urlSearchParams = new URLSearchParams(search);\n      var params = Object.fromEntries(urlSearchParams);\n\n      if (addressIsValid(params.address)) {\n        resolve(params.address);\n      }\n    }\n\n    if (loggedIn) {\n      resolve(address);\n    }\n\n    resolve('');\n  });\n}\n\nvar proxyProvider = null;\n\nfunction initializeProxyProvider(networkConfig) {\n  var initializationNetworkConfig = networkConfig || networkSelector(store.getState());\n  proxyProvider = new ProxyProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n  return proxyProvider;\n}\n\nfunction getProxyProvider() {\n  if (proxyProvider == null) {\n    return initializeProxyProvider();\n  } else {\n    return proxyProvider;\n  }\n}\n\nfunction getAccountFromProxyProvider(_x) {\n  return _getAccountFromProxyProvider.apply(this, arguments);\n}\n\nfunction _getAccountFromProxyProvider() {\n  _getAccountFromProxyProvider = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(address) {\n    var proxy;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            proxy = getProxyProvider();\n            _context.next = 4;\n            return proxy.getAccount(new Address$1(address));\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAccountFromProxyProvider.apply(this, arguments);\n}\n\nfunction getNetworkConfigFromProxyProvider() {\n  return _getNetworkConfigFromProxyProvider.apply(this, arguments);\n}\n\nfunction _getNetworkConfigFromProxyProvider() {\n  _getNetworkConfigFromProxyProvider = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n    return runtime_1.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return getProxyProvider().getNetworkConfig();\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('error fetching network config');\n            return _context2.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _getNetworkConfigFromProxyProvider.apply(this, arguments);\n}\n\nfunction getAccount(address) {\n  return getAccountFromProxyProvider(address);\n} // without getting access to store.dispatch function\n\n\nfunction setNonce(nonce) {\n  store.dispatch(setAccountNonce(nonce));\n}\n\nfunction getLatestNonce(account) {\n  var appState = store.getState();\n  var currentAccountNonce = accountNonceSelector(appState);\n\n  if (!account) {\n    return currentAccountNonce;\n  }\n\n  return currentAccountNonce && !isNaN(currentAccountNonce) ? Math.max(currentAccountNonce, account.nonce.valueOf()) : account.nonce.valueOf();\n}\n\nfunction getAccountBalance(_x) {\n  return _getAccountBalance.apply(this, arguments);\n}\n\nfunction _getAccountBalance() {\n  _getAccountBalance = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(address) {\n    var _account$balance;\n\n    var accountAddress, _account, account;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            accountAddress = address;\n\n            if (accountAddress == null) {\n              _account = accountSelector(store.getState());\n              accountAddress = _account.address;\n            }\n\n            _context.next = 4;\n            return getAccount(accountAddress);\n\n          case 4:\n            account = _context.sent;\n\n            if (!(account == null)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw 'Could not read account, user not logged in';\n\n          case 7:\n            return _context.abrupt(\"return\", account == null ? void 0 : (_account$balance = account.balance) == null ? void 0 : _account$balance.toString());\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAccountBalance.apply(this, arguments);\n}\n\nvar setNewAccount = /*#__PURE__*/function () {\n  var _ref = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var address, account, accountData;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getAddress();\n\n          case 3:\n            address = _context.sent;\n            _context.prev = 4;\n            _context.next = 7;\n            return getAccount(address);\n\n          case 7:\n            account = _context.sent;\n\n            if (!(account != null)) {\n              _context.next = 12;\n              break;\n            }\n\n            accountData = {\n              balance: account.balance.toString(),\n              address: address,\n              nonce: getLatestNonce(account)\n            };\n            store.dispatch(setAccount(accountData));\n            return _context.abrupt(\"return\", accountData);\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](4);\n            console.error('Failed getting account ', _context.t0);\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t1 = _context[\"catch\"](0);\n            console.error('Failed getting address ', _context.t1);\n\n          case 22:\n            return _context.abrupt(\"return\", null);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19], [4, 14]]);\n  }));\n\n  return function setNewAccount() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction refreshAccount() {\n  return _refreshAccount.apply(this, arguments);\n}\n\nfunction _refreshAccount() {\n  _refreshAccount = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n    var provider, initialized;\n    return runtime_1.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            provider = getAccountProvider();\n\n            if (!(provider == null)) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw 'Provider not initialized';\n\n          case 3:\n            if (!provider.isInitialized()) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", setNewAccount());\n\n          case 7:\n            _context2.prev = 7;\n            _context2.next = 10;\n            return provider.init();\n\n          case 10:\n            initialized = _context2.sent;\n\n            if (initialized) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            return _context2.abrupt(\"return\", setNewAccount());\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](7);\n            console.error('Failed initializing provider ', _context2.t0);\n\n          case 19:\n            return _context2.abrupt(\"return\", undefined);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[7, 16]]);\n  }));\n  return _refreshAccount.apply(this, arguments);\n}\n\nvar isAddressOfMetachain = function isAddressOfMetachain(pubKey) {\n  // prettier-ignore\n  var metachainPrefix = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  var pubKeyPrefix = pubKey.slice(0, metachainPrefix.length);\n\n  if (pubKeyPrefix.equals(metachainPrefix)) {\n    return true;\n  }\n\n  var zeroAddress = Buffer.alloc(32).fill(0);\n  return pubKey.equals(zeroAddress);\n};\n\nvar getShardOfAddress = function getShardOfAddress(hexPubKey) {\n  try {\n    var numShards = 3;\n    var maskHigh = parseInt('11', 2);\n    var maskLow = parseInt('01', 2);\n    var pubKey = Buffer.from(hexPubKey, 'hex');\n    var lastByteOfPubKey = pubKey[31];\n\n    if (isAddressOfMetachain(pubKey)) {\n      return 4294967295;\n    }\n\n    var shard = lastByteOfPubKey & maskHigh;\n\n    if (shard > numShards - 1) {\n      shard = lastByteOfPubKey & maskLow;\n    }\n\n    return shard;\n  } catch (err) {\n    return -1;\n  }\n};\n\nfunction signMessage(_x) {\n  return _signMessage.apply(this, arguments);\n}\n\nfunction _signMessage() {\n  _signMessage = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_ref) {\n    var message, callbackRoute, address, provider, callbackUrl, signableMessage, signedMessage;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            message = _ref.message, callbackRoute = _ref.callbackRoute;\n            _context.next = 3;\n            return getAddress();\n\n          case 3:\n            address = _context.sent;\n            provider = getAccountProvider();\n            callbackUrl = \"\" + window.location.origin + callbackRoute;\n            signableMessage = new SignableMessage({\n              address: new Address(address),\n              message: Buffer.from(message, 'ascii')\n            });\n            _context.next = 9;\n            return provider.signMessage(signableMessage, {\n              callbackUrl: encodeURIComponent(callbackUrl)\n            });\n\n          case 9:\n            signedMessage = _context.sent;\n            return _context.abrupt(\"return\", signedMessage);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signMessage.apply(this, arguments);\n}\n\nfunction loginWithExternalProvider(address) {\n  store.dispatch(loginAction({\n    address: address,\n    loginMethod: LoginMethodsEnum.extra\n  }));\n}\n\nvar logarithmicRest = function logarithmicRest(position) {\n  var minp = 0;\n  var maxp = 10;\n  var minv = Math.log(0.005);\n  var maxv = Math.log(2);\n  var scale = (maxv - minv) / (maxp - minp);\n  return Math.exp(minv + scale * (position - minp));\n};\n\nvar stringIsInteger = function stringIsInteger(integer, positiveNumbersOnly) {\n  if (positiveNumbersOnly === void 0) {\n    positiveNumbersOnly = true;\n  }\n\n  var stringInteger = String(integer);\n\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n\n  var bNparsed = new BigNumber(stringInteger);\n  var limit = positiveNumbersOnly ? 0 : -1;\n  return bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit;\n};\n\nvar stringIsFloat = function stringIsFloat(amount) {\n  // tslint:disable-next-line\n  var _amount$split = amount.split('.'),\n      wholes = _amount$split[0],\n      decimals = _amount$split[1];\n\n  if (decimals) {\n    while (decimals.charAt(decimals.length - 1) === '0') {\n      decimals = decimals.slice(0, -1);\n    }\n  }\n\n  var number = decimals ? [wholes, decimals].join('.') : wholes;\n  var bNparsed = new BigNumber(number);\n  return bNparsed.toString(10) === number && bNparsed.comparedTo(0) >= 0;\n};\n\nvar esdtParts = 2;\nvar nftParts = 3;\nvar defaultResult = {\n  isEsdt: false,\n  isNft: false,\n  isEgld: false\n};\n\nfunction getIdentifierType(identifier) {\n  var parts = identifier == null ? void 0 : identifier.split('-').length;\n\n  if (parts === esdtParts) {\n    return _extends({}, defaultResult, {\n      isEsdt: true\n    });\n  }\n\n  if (parts === nftParts) {\n    return _extends({}, defaultResult, {\n      isNft: true\n    });\n  }\n\n  return _extends({}, defaultResult, {\n    isEgld: true\n  });\n}\n\nfunction pipe(previous) {\n  return {\n    \"if\": function _if(condition) {\n      if (condition) {\n        return {\n          then: function then(newValue) {\n            return (// if a callback is passed, callback is executed with previous value\n              newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue)\n            );\n          }\n        };\n      } else {\n        return {\n          then: function then() {\n            return pipe(previous);\n          }\n        };\n      }\n    },\n    then: function then(newValue) {\n      return newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue);\n    },\n    valueOf: function valueOf() {\n      return previous;\n    }\n  };\n}\n\nBigNumber.config({\n  ROUNDING_MODE: BigNumber.ROUND_FLOOR\n});\n\nfunction denominate(_ref) {\n  var input = _ref.input,\n      _ref$denomination = _ref.denomination,\n      denomination$1 = _ref$denomination === void 0 ? denomination : _ref$denomination,\n      _ref$decimals = _ref.decimals,\n      decimals$1 = _ref$decimals === void 0 ? decimals : _ref$decimals,\n      _ref$showLastNonZeroD = _ref.showLastNonZeroDecimal,\n      showLastNonZeroDecimal = _ref$showLastNonZeroD === void 0 ? true : _ref$showLastNonZeroD,\n      _ref$showIsLessThanDe = _ref.showIsLessThanDecimalsLabel,\n      showIsLessThanDecimalsLabel = _ref$showIsLessThanDe === void 0 ? false : _ref$showIsLessThanDe,\n      _ref$addCommas = _ref.addCommas,\n      addCommas = _ref$addCommas === void 0 ? false : _ref$addCommas;\n  var token = new Token({\n    decimals: denomination$1\n  });\n\n  if (typeof input === 'string' && !stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  return pipe(input) // denominate\n  [\"if\"](typeof input === 'string').then(function () {\n    return new Balance(token, 0, new BigNumber(input)).toDenominated();\n  })[\"if\"](input.constructor === Balance).then(function () {\n    return input.toDenominated();\n  }) // format\n  .then(function (current) {\n    var bnBalance = new BigNumber(current);\n\n    if (bnBalance.isZero()) {\n      return '0';\n    }\n\n    var balance = bnBalance.toString(10);\n\n    var _balance$split = balance.split('.'),\n        integerPart = _balance$split[0],\n        decimalPart = _balance$split[1];\n\n    var bNdecimalPart = new BigNumber(decimalPart || 0);\n    var decimalPlaces = pipe(0)[\"if\"](Boolean(decimalPart && showLastNonZeroDecimal)).then(function () {\n      return Math.max(decimalPart.length, decimals$1);\n    })[\"if\"](bNdecimalPart.isZero() && !showLastNonZeroDecimal).then(0)[\"if\"](Boolean(decimalPart && !showLastNonZeroDecimal)).then(function () {\n      return Math.min(decimalPart.length, decimals$1);\n    }).valueOf();\n    var shownDecimalsAreZero = decimalPart && decimals$1 >= 1 && decimals$1 <= decimalPart.length && bNdecimalPart.isGreaterThan(0) && new BigNumber(decimalPart.substring(0, decimals$1)).isZero();\n    var formatted = bnBalance.toFormat(decimalPlaces);\n    var formattedBalance = pipe(balance)[\"if\"](addCommas).then(formatted)[\"if\"](Boolean(shownDecimalsAreZero)).then(function (current) {\n      var integerPartZero = new BigNumber(integerPart).isZero();\n\n      var _current$split = current.split('.'),\n          numericPart = _current$split[0],\n          decimalSide = _current$split[1];\n\n      var zeroPlaceholders = new Array(decimals$1 - 1).fill(0);\n      var zeros = [].concat(zeroPlaceholders, [0]).join('');\n      var minAmount = [].concat(zeroPlaceholders, [1]).join(''); // 00..1\n\n      if (!integerPartZero) {\n        return numericPart + \".\" + zeros;\n      }\n\n      if (showIsLessThanDecimalsLabel) {\n        return \"<\" + numericPart + \".\" + minAmount;\n      }\n\n      return numericPart + \".\" + decimalSide;\n    })[\"if\"](Boolean(!shownDecimalsAreZero && decimalPart)).then(function (current) {\n      if (showLastNonZeroDecimal) {\n        return current;\n      }\n\n      var _current$split2 = current.split('.'),\n          numericPart = _current$split2[0];\n\n      var decimalSide = decimalPart.substring(0, decimalPlaces);\n\n      if (!decimalSide) {\n        return numericPart;\n      }\n\n      return numericPart + \".\" + decimalSide;\n    }).valueOf();\n    return formattedBalance;\n  }).valueOf();\n}\n\nfunction nominate(input, customDenomination) {\n  var balance = createBalanceBuilder(new Token$1({\n    decimals: customDenomination || denomination,\n    type: TokenType.Fungible\n  }));\n  return balance(input).toString();\n}\n\nvar placeholderData = {\n  from: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa',\n  to: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa'\n};\n\nfunction calculateFeeLimit(_ref) {\n  var _ref$minGasLimit = _ref.minGasLimit,\n      minGasLimit = _ref$minGasLimit === void 0 ? '50000' : _ref$minGasLimit,\n      gasLimit = _ref.gasLimit,\n      gasPrice = _ref.gasPrice,\n      inputData = _ref.data,\n      gasPerDataByte = _ref.gasPerDataByte,\n      gasPriceModifier = _ref.gasPriceModifier,\n      _ref$defaultGasPrice = _ref.defaultGasPrice,\n      defaultGasPrice = _ref$defaultGasPrice === void 0 ? '1000000000' : _ref$defaultGasPrice,\n      chainId = _ref.chainId;\n  var data = inputData || '';\n  var validGasLimit = stringIsInteger(gasLimit) ? gasLimit : minGasLimit;\n  var validGasPrice = stringIsFloat(gasPrice) ? gasPrice : defaultGasPrice;\n  var transaction = new Transaction({\n    nonce: new Nonce(0),\n    value: Balance.Zero(),\n    receiver: new Address(placeholderData.to),\n    gasPrice: new GasPrice(parseInt(validGasPrice)),\n    gasLimit: new GasLimit(parseInt(validGasLimit)),\n    data: new TransactionPayload(data.trim()),\n    chainID: new ChainID(chainId),\n    version: new TransactionVersion(1)\n  });\n  var networkConfig = new NetworkConfig();\n  networkConfig.MinGasLimit = new GasLimit(parseInt(minGasLimit));\n  networkConfig.GasPerDataByte = parseInt(gasPerDataByte);\n  networkConfig.GasPriceModifier = new GasPriceModifier(parseFloat(gasPriceModifier));\n\n  try {\n    var bNfee = transaction.computeFee(networkConfig);\n    var fee = bNfee.toString(10);\n    return fee;\n  } catch (err) {\n    return '0';\n  }\n}\n\nvar getUsdValue = function getUsdValue(_ref) {\n  var amount = _ref.amount,\n      usd = _ref.usd,\n      _ref$decimals = _ref.decimals,\n      decimals = _ref$decimals === void 0 ? 2 : _ref$decimals;\n  var sum = (parseFloat(amount) * usd).toFixed(decimals);\n  return parseFloat(sum).toLocaleString('en', {\n    maximumFractionDigits: decimals,\n    minimumFractionDigits: decimals\n  });\n};\n\nvar ESDTTransferTypes = ['ESDTNFTTransfer', 'ESDTNFTBurn', 'ESDTNFTAddQuantity', 'ESDTNFTCreate', 'MultiESDTNFTTransfer', 'ESDTTransfer', 'ESDTBurn', 'ESDTLocalMint', 'ESDTLocalBurn', 'ESDTWipe', 'ESDTFreeze'];\n\nfunction isContract(receiver, sender, data) {\n  if (data === void 0) {\n    data = '';\n  }\n\n  var isValid = addressIsValid(receiver);\n\n  if (!isValid) {\n    return false;\n  }\n\n  var isContract = new Address(receiver).isContractAddress();\n\n  if (isContract) {\n    return true;\n  }\n\n  var extractedAddress = getAddressFromDataField({\n    receiver: receiver,\n    data: data\n  });\n\n  if (!extractedAddress) {\n    return false;\n  }\n\n  var isExtractedAddressContractCall = new Address(extractedAddress).isContractAddress();\n  return isExtractedAddressContractCall || isSelfESDTContract(receiver, sender, data);\n}\n\nvar isHexValidCharacters = function isHexValidCharacters(str) {\n  return str.toLowerCase().match(/[0-9a-f]/g);\n};\n\nvar isHexValidLength = function isHexValidLength(str) {\n  return str.length % 2 === 0;\n};\n\nfunction isSelfESDTContract(receiver, sender, data) {\n  var parts = data == null ? void 0 : data.split('@');\n\n  if (parts == null) {\n    return false;\n  }\n\n  var type = parts[0],\n      restParts = parts.slice(1);\n  var isSelfTransaction = sender != null && receiver != null && receiver === sender;\n  var isCorrectESDTType = ESDTTransferTypes.includes(type);\n  var areDataPartsValid = restParts.every(function (part) {\n    return isHexValidCharacters(part) && isHexValidLength(part);\n  });\n  return isSelfTransaction && isCorrectESDTType && areDataPartsValid;\n}\n\nfunction getAddressFromDataField(_ref) {\n  var receiver = _ref.receiver,\n      data = _ref.data;\n\n  try {\n    if (!data) {\n      return receiver;\n    }\n\n    var parsedData = isStringBase64(data) ? TransactionPayload.fromEncoded(data).toString() : data;\n    var addressIndex = getAddressIndex(parsedData);\n    var parts = parsedData.split('@');\n    return addressIndex > -1 ? parts[addressIndex] : receiver;\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n}\n\nfunction getAddressIndex(data) {\n  if (data.includes(TypesOfSmartContractCallsEnum.MultiESDTNFTTransfer)) {\n    return 1;\n  }\n\n  if (data.includes(TypesOfSmartContractCallsEnum.ESDTNFTTransfer)) {\n    return 4;\n  }\n\n  return -1;\n}\n\nvar classnames = {};\n\ntry {\n  classnames = /*#__PURE__*/require('classnames');\n} catch (err) {}\n\nvar classnames$1 = classnames;\n\nfunction getGeneratedClasses(className, shouldRenderDefaultCss, defaultStyles) {\n  return Object.entries(defaultStyles).reduce(function (acc, _ref) {\n    var key = _ref[0],\n        defaultClassNames = _ref[1];\n    acc[key] = classnames$1 == null ? void 0 : classnames$1(className + \"_\" + key, shouldRenderDefaultCss && defaultClassNames);\n    return acc;\n  }, {});\n}\n\nvar wrapperClassName = 'dapp-core-ui-component';\nvar defaultContextValue = null;\nvar DappCoreContext = /*#__PURE__*/React__default.createContext(defaultContextValue);\nvar useDispatch = /*#__PURE__*/createDispatchHook(DappCoreContext);\nvar useSelector = /*#__PURE__*/createSelectorHook(DappCoreContext);\n\nvar useExtensionLogin = function useExtensionLogin(_ref) {\n  var callbackRoute = _ref.callbackRoute,\n      token = _ref.token,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog;\n\n  var _useState = useState(''),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var isLoggedIn = useSelector(isLoggedInSelector);\n  var dispatch = useDispatch();\n\n  function initiateLogin() {\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  function _initiateLogin() {\n    _initiateLogin = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var provider, isSuccessfullyInitialized, callbackUrl, providerLoginData, _provider$account, signature, address;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              provider = ExtensionProvider.getInstance();\n              _context.prev = 2;\n              _context.next = 5;\n              return provider.init();\n\n            case 5:\n              isSuccessfullyInitialized = _context.sent;\n\n              if (isSuccessfullyInitialized) {\n                _context.next = 9;\n                break;\n              }\n\n              console.warn('Something went wrong trying to redirect to wallet login..');\n              return _context.abrupt(\"return\");\n\n            case 9:\n              callbackUrl = encodeURIComponent(\"\" + window.location.origin + callbackRoute);\n              providerLoginData = _extends({\n                callbackUrl: callbackUrl\n              }, token && {\n                token: token\n              });\n              _context.next = 13;\n              return provider.login(providerLoginData);\n\n            case 13:\n              setAccountProvider(provider);\n              _provider$account = provider.account, signature = _provider$account.signature, address = _provider$account.address;\n\n              if (signature) {\n                dispatch(setTokenLogin({\n                  loginToken: String(token),\n                  signature: signature\n                }));\n              }\n\n              dispatch(loginAction({\n                address: address,\n                loginMethod: LoginMethodsEnum.extension\n              }));\n              optionalRedirect(callbackRoute, redirectAfterLogin);\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('error loging in', _context.t0); // TODO: can be any or typed error\n\n              setError('error logging in' + _context.t0.message);\n\n            case 24:\n              _context.prev = 24;\n              setIsLoading(false);\n              return _context.finish(24);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 20, 24, 27]]);\n    }));\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  var loginFailed = Boolean(error);\n  return [initiateLogin, {\n    loginFailed: loginFailed,\n    error: error,\n    isLoading: isLoading && !loginFailed,\n    isLoggedIn: isLoggedIn && !loginFailed\n  }];\n};\n\nvar useWebWalletLogin = function useWebWalletLogin(_ref) {\n  var callbackRoute = _ref.callbackRoute,\n      token = _ref.token;\n\n  var _useState = useState(''),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var isLoggedIn = useSelector(isLoggedInSelector);\n\n  function initiateLogin() {\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  function _initiateLogin() {\n    _initiateLogin = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var appState, network, provider, now, expires, walletLoginData, callbackUrl, loginData;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setIsLoading(true);\n              appState = store.getState();\n              network = networkSelector(appState);\n              provider = newWalletProvider(network.walletAddress);\n              now = new Date();\n              expires = now.setMinutes(now.getMinutes() + 3) / 1000;\n              walletLoginData = {\n                data: {},\n                expires: expires\n              };\n              store.dispatch(setWalletLogin(walletLoginData));\n              callbackUrl = encodeURIComponent(\"\" + window.location.origin + callbackRoute);\n              loginData = _extends({\n                callbackUrl: callbackUrl\n              }, token && {\n                token: token\n              });\n              _context.next = 13;\n              return provider.login(loginData);\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              setError('error logging in' + _context.t0.message);\n\n            case 19:\n              _context.prev = 19;\n              setIsLoading(false);\n              return _context.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15, 19, 22]]);\n    }));\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  var loginFailed = error != null;\n  return [initiateLogin, {\n    error: error,\n    loginFailed: loginFailed,\n    isLoading: isLoading && !loginFailed,\n    isLoggedIn: isLoggedIn && !loginFailed\n  }];\n};\n\nvar failInitializeErrorText = 'Could not initialise ledger app, make sure Elrond app is open';\nvar defaultAddressesPerPage = 10;\n\nfunction useLedgerLogin(_ref) {\n  var callbackRoute = _ref.callbackRoute,\n      token = _ref.token,\n      _ref$addressesPerPage = _ref.addressesPerPage,\n      addressesPerPage = _ref$addressesPerPage === void 0 ? defaultAddressesPerPage : _ref$addressesPerPage,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog;\n  var ledgerAccount = useSelector(ledgerAccountSelector);\n  var isLoggedIn = useSelector(isLoggedInSelector);\n  var proxy = getProxyProvider();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var hwWalletP = new HWProvider(proxy);\n\n  var _useState3 = useState(0),\n      startIndex = _useState3[0],\n      setStartIndex = _useState3[1];\n\n  var _useState4 = useState([]),\n      accounts = _useState4[0],\n      setAccounts = _useState4[1];\n\n  var _useState5 = useState(''),\n      version = _useState5[0],\n      setVersion = _useState5[1];\n\n  var _useState6 = useState(false),\n      contractDataEnabled = _useState6[0],\n      setContractDataEnabled = _useState6[1];\n\n  var _useState7 = useState(null),\n      selectedAddress = _useState7[0],\n      setSelectedAddress = _useState7[1];\n\n  var _useState8 = useState(false),\n      showAddressList = _useState8[0],\n      setShowAddressList = _useState8[1];\n\n  function dispatchLoginActions(_ref2) {\n    var provider = _ref2.provider,\n        address = _ref2.address,\n        index = _ref2.index,\n        signature = _ref2.signature;\n    setAccountProvider(provider);\n    dispatch(setLedgerLogin({\n      index: index,\n      loginType: LoginMethodsEnum.ledger\n    }));\n\n    if (signature) {\n      dispatch(setTokenLogin({\n        loginToken: String(token),\n        signature: signature\n      }));\n    }\n\n    dispatch(loginAction({\n      address: address,\n      loginMethod: LoginMethodsEnum.ledger\n    }));\n    optionalRedirect(callbackRoute, redirectAfterLogin);\n  }\n\n  var onLoginFailed = function onLoginFailed(err, customMessage) {\n    var _getLedgerErrorCodes = getLedgerErrorCodes(err),\n        errorMessage = _getLedgerErrorCodes.errorMessage;\n\n    if (errorMessage) {\n      setError(errorMessage + customMessage);\n    }\n\n    setIsLoading(false);\n    console.warn(err);\n    dispatch(setLedgerAccount(null));\n  };\n\n  function loginUser(_x) {\n    return _loginUser.apply(this, arguments);\n  }\n\n  function _loginUser() {\n    _loginUser = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(hwWalletProvider) {\n      var index, loginInfo, address;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(selectedAddress == null)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 2:\n              index = selectedAddress.index;\n\n              if (!token) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.prev = 4;\n              _context.next = 7;\n              return hwWalletProvider.tokenLogin({\n                token: Buffer.from(token + \"{}\"),\n                addressIndex: index\n              });\n\n            case 7:\n              loginInfo = _context.sent;\n              dispatchLoginActions({\n                address: loginInfo.address,\n                provider: hwWalletProvider,\n                index: index,\n                signature: loginInfo.signature.hex()\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              onLoginFailed(_context.t0, '. Update Elrond App to continue.');\n\n            case 14:\n              _context.next = 27;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.next = 19;\n              return hwWalletProvider.login({\n                addressIndex: index\n              });\n\n            case 19:\n              address = _context.sent;\n              dispatchLoginActions({\n                address: address,\n                provider: hwWalletProvider,\n                index: index\n              });\n              _context.next = 27;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t1 = _context[\"catch\"](16);\n              onLoginFailed(_context.t1);\n              return _context.abrupt(\"return\", false);\n\n            case 27:\n              return _context.abrupt(\"return\", true);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11], [16, 23]]);\n    }));\n    return _loginUser.apply(this, arguments);\n  }\n\n  function onConfirmSelectedAddress() {\n    return _onConfirmSelectedAddress.apply(this, arguments);\n  }\n\n  function _onConfirmSelectedAddress() {\n    _onConfirmSelectedAddress = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var hwWalletProvider, initialized, _getLedgerErrorCodes2, errorMessage;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading(true);\n\n              if (!(selectedAddress == null)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", false);\n\n            case 4:\n              if (ledgerAccount) {\n                dispatch(updateLedgerAccount(selectedAddress));\n              } else {\n                dispatch(setLedgerAccount(_extends({}, selectedAddress, {\n                  version: version,\n                  hasContractDataEnabled: contractDataEnabled\n                })));\n              }\n\n              hwWalletProvider = new HWProvider(proxy);\n              _context2.next = 8;\n              return hwWalletProvider.init();\n\n            case 8:\n              initialized = _context2.sent;\n\n              if (initialized) {\n                _context2.next = 13;\n                break;\n              }\n\n              setError(failInitializeErrorText);\n              console.warn(failInitializeErrorText);\n              return _context2.abrupt(\"return\", false);\n\n            case 13:\n              setIsLoading(false);\n              _context2.next = 16;\n              return loginUser(hwWalletProvider);\n\n            case 16:\n              _context2.next = 23;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](0);\n              _getLedgerErrorCodes2 = getLedgerErrorCodes(_context2.t0), errorMessage = _getLedgerErrorCodes2.errorMessage;\n\n              if (errorMessage) {\n                setError(errorMessage);\n              }\n\n              console.warn(failInitializeErrorText, _context2.t0);\n\n            case 23:\n              _context2.prev = 23;\n              setIsLoading(false);\n              return _context2.finish(23);\n\n            case 26:\n              setShowAddressList(false);\n              return _context2.abrupt(\"return\", true);\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 18, 23, 26]]);\n    }));\n    return _onConfirmSelectedAddress.apply(this, arguments);\n  }\n\n  function fetchAccounts() {\n    return _fetchAccounts.apply(this, arguments);\n  }\n\n  function _fetchAccounts() {\n    _fetchAccounts = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3() {\n      var initialized, _accounts, ledgerData, _getLedgerErrorCodes3, errorMessage, defaultErrorMessage;\n\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setIsLoading(true);\n              _context3.next = 4;\n              return hwWalletP.init();\n\n            case 4:\n              initialized = _context3.sent;\n\n              if (initialized) {\n                _context3.next = 10;\n                break;\n              }\n\n              setError(failInitializeErrorText);\n              console.warn(failInitializeErrorText);\n              setIsLoading(false);\n              return _context3.abrupt(\"return\");\n\n            case 10:\n              _context3.next = 12;\n              return hwWalletP.getAccounts(startIndex, addressesPerPage);\n\n            case 12:\n              _accounts = _context3.sent;\n              _context3.next = 15;\n              return getLedgerConfiguration(hwWalletP);\n\n            case 15:\n              ledgerData = _context3.sent;\n              setVersion(ledgerData.version);\n              setContractDataEnabled(ledgerData.dataEnabled);\n              setAccounts(_accounts);\n              setIsLoading(false);\n              _context3.next = 28;\n              break;\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](0);\n              _getLedgerErrorCodes3 = getLedgerErrorCodes(_context3.t0), errorMessage = _getLedgerErrorCodes3.errorMessage, defaultErrorMessage = _getLedgerErrorCodes3.defaultErrorMessage;\n              setError(errorMessage != null ? errorMessage : defaultErrorMessage);\n              console.error('error', _context3.t0);\n              setIsLoading(false);\n\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 22]]);\n    }));\n    return _fetchAccounts.apply(this, arguments);\n  }\n\n  function onStartLogin() {\n    return _onStartLogin.apply(this, arguments);\n  }\n\n  function _onStartLogin() {\n    _onStartLogin = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4() {\n      var _hwWalletP, initialized, address, _getLedgerErrorCodes4, defaultErrorMessage;\n\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setError('');\n              _context4.prev = 1;\n              setIsLoading(true);\n\n              if (!(ledgerAccount != null)) {\n                _context4.next = 19;\n                break;\n              }\n\n              _hwWalletP = new HWProvider(proxy);\n              _context4.next = 7;\n              return _hwWalletP.init();\n\n            case 7:\n              initialized = _context4.sent;\n\n              if (initialized) {\n                _context4.next = 11;\n                break;\n              }\n\n              console.warn(failInitializeErrorText);\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              _context4.next = 13;\n              return _hwWalletP.login({\n                addressIndex: selectedAddress == null ? void 0 : selectedAddress.index\n              });\n\n            case 13:\n              address = _context4.sent;\n              setAccountProvider(_hwWalletP);\n              dispatch(loginAction({\n                address: address,\n                loginMethod: LoginMethodsEnum.ledger\n              }));\n              optionalRedirect(callbackRoute, redirectAfterLogin);\n              _context4.next = 26;\n              break;\n\n            case 19:\n              if (!((accounts == null ? void 0 : accounts.length) > 0)) {\n                _context4.next = 23;\n                break;\n              }\n\n              setShowAddressList(true);\n              _context4.next = 26;\n              break;\n\n            case 23:\n              _context4.next = 25;\n              return fetchAccounts();\n\n            case 25:\n              setShowAddressList(true);\n\n            case 26:\n              _context4.next = 33;\n              break;\n\n            case 28:\n              _context4.prev = 28;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('error ', _context4.t0);\n              _getLedgerErrorCodes4 = getLedgerErrorCodes(), defaultErrorMessage = _getLedgerErrorCodes4.defaultErrorMessage;\n              setError(defaultErrorMessage);\n\n            case 33:\n              _context4.prev = 33;\n              setIsLoading(false);\n              return _context4.finish(33);\n\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 28, 33, 36]]);\n    }));\n    return _onStartLogin.apply(this, arguments);\n  }\n\n  function onSelectAddress(newSelectedAddress) {\n    setSelectedAddress(newSelectedAddress);\n  }\n\n  function onGoToNextPage() {\n    setSelectedAddress(null);\n    setStartIndex(function (current) {\n      return current + 1;\n    });\n  }\n\n  function onGoToPrevPage() {\n    setSelectedAddress(null);\n    setStartIndex(function (current) {\n      return current === 0 ? 0 : current - 1;\n    });\n  }\n\n  useEffect(function () {\n    fetchAccounts();\n  }, [startIndex]);\n  var loginFailed = Boolean(error);\n  return [onStartLogin, {\n    loginFailed: loginFailed,\n    isLoggedIn: isLoggedIn && !loginFailed,\n    error: error,\n    isLoading: isLoading && !loginFailed\n  }, {\n    accounts: accounts,\n    showAddressList: showAddressList,\n    startIndex: startIndex,\n    selectedAddress: selectedAddress,\n    version: version,\n    contractDataEnabled: contractDataEnabled,\n    onGoToPrevPage: onGoToPrevPage,\n    onGoToNextPage: onGoToNextPage,\n    onSelectAddress: onSelectAddress,\n    onConfirmSelectedAddress: onConfirmSelectedAddress\n  }];\n}\n\nfunction useUpdateEffect(effect, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n\n  var isInitialMount = useRef(true);\n  useEffect(function () {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n\nvar useWalletConnectLogin = function useWalletConnectLogin(_ref) {\n  var callbackRoute = _ref.callbackRoute,\n      logoutRoute = _ref.logoutRoute,\n      token = _ref.token,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog;\n  var dispatch = useDispatch();\n  var heartbeatInterval = 15000;\n\n  var _useState = useState(''),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(''),\n      wcUri = _useState2[0],\n      setWcUri = _useState2[1];\n\n  var proxy = getProxyProvider();\n  var provider = getAccountProvider();\n  var walletConnectBridgeAddress = useSelector(walletConnectBridgeAddressSelector);\n  var walletConnectDeepLink = useSelector(walletConnectDeepLinkSelector);\n  var isLoggedIn = useSelector(isLoggedInSelector);\n  var providerRef = useRef(provider);\n  var heartbeatDisconnectInterval;\n  var hasWcUri = Boolean(wcUri);\n  var isLoading = !hasWcUri;\n  var uriDeepLink = hasWcUri ? walletConnectDeepLink + \"?wallet-connect=\" + encodeURIComponent(wcUri) : null;\n  useEffect(function () {\n    handleHeartbeat();\n    var interval = setInterval(function () {\n      handleHeartbeat();\n    }, heartbeatInterval);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [provider]);\n  useUpdateEffect(function () {\n    generateWcUri();\n  }, [token]);\n  useUpdateEffect(function () {\n    providerRef.current = provider;\n  }, [provider]);\n\n  function handleHeartbeat() {\n    return _handleHeartbeat.apply(this, arguments);\n  }\n\n  function _handleHeartbeat() {\n    _handleHeartbeat = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var _providerRef$current, _providerRef$current$;\n\n      var isProviderConnected, customMessage;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isProviderConnected = Boolean((_providerRef$current = providerRef.current) == null ? void 0 : (_providerRef$current$ = _providerRef$current.walletConnector) == null ? void 0 : _providerRef$current$.connected);\n\n              if (isProviderConnected) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              customMessage = {\n                method: 'heartbeat',\n                params: {}\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return providerRef.current.sendCustomMessage(customMessage);\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('Connection lost', _context.t0);\n              handleOnLogout();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 9]]);\n    }));\n    return _handleHeartbeat.apply(this, arguments);\n  }\n\n  function handleOnLogin() {\n    return _handleOnLogin.apply(this, arguments);\n  }\n\n  function _handleOnLogin() {\n    _handleOnLogin = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var _provider, address, signature, hasSignature, loginActionData, loginData;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _provider = providerRef.current;\n\n              if (!isLoggedIn) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              if (!(_provider == null)) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _context2.next = 8;\n              return _provider.getAddress();\n\n            case 8:\n              address = _context2.sent;\n              _context2.next = 11;\n              return _provider.getSignature();\n\n            case 11:\n              signature = _context2.sent;\n              hasSignature = Boolean(signature);\n              loginActionData = {\n                address: address,\n                loginMethod: LoginMethodsEnum.walletconnect\n              };\n              loginData = {\n                logoutRoute: logoutRoute,\n                loginType: 'walletConnect',\n                callbackRoute: callbackRoute\n              };\n\n              if (hasSignature) {\n                dispatch(setWalletConnectLogin(loginData));\n                dispatch(setTokenLoginSignature(signature));\n              } else {\n                dispatch(setWalletConnectLogin(loginData));\n              }\n\n              dispatch(loginAction(loginActionData));\n\n              _provider.walletConnector.on('heartbeat', function () {\n                clearInterval(heartbeatDisconnectInterval);\n                heartbeatDisconnectInterval = setInterval(function () {\n                  console.log('Maiar Wallet Connection Lost');\n                  handleOnLogout();\n                  clearInterval(heartbeatDisconnectInterval);\n                }, 150000);\n              });\n\n              optionalRedirect(callbackRoute, redirectAfterLogin);\n              _context2.next = 25;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](0);\n              setError('Invalid address');\n              console.error(_context2.t0);\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 21]]);\n    }));\n    return _handleOnLogin.apply(this, arguments);\n  }\n\n  var handleOnLogout = function handleOnLogout() {\n    logout(logoutRoute);\n  };\n\n  function initiateLogin(_x) {\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  function _initiateLogin() {\n    _initiateLogin = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(loginProvider) {\n      var _providerRef$current2;\n\n      var shouldGenerateWcUri, providerHandlers, newProvider;\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (loginProvider === void 0) {\n                loginProvider = true;\n              }\n\n              shouldGenerateWcUri = loginProvider && !wcUri;\n\n              if (!(!walletConnectBridgeAddress || providerRef != null && (_providerRef$current2 = providerRef.current) != null && _providerRef$current2.isInitialized != null && _providerRef$current2.isInitialized() && !shouldGenerateWcUri)) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 4:\n              providerHandlers = {\n                onClientLogin: handleOnLogin,\n                onClientLogout: handleOnLogout\n              };\n              newProvider = new WalletConnectProvider(proxy, walletConnectBridgeAddress, providerHandlers);\n              _context3.next = 8;\n              return newProvider.init();\n\n            case 8:\n              setAccountProvider(newProvider);\n              providerRef.current = newProvider;\n\n              if (loginProvider) {\n                generateWcUri();\n              }\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _initiateLogin.apply(this, arguments);\n  }\n\n  function generateWcUri() {\n    return _generateWcUri.apply(this, arguments);\n  }\n\n  function _generateWcUri() {\n    _generateWcUri = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4() {\n      var _providerRef$current3;\n\n      var walletConnectUri, hasUri, wcUriWithToken;\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (walletConnectBridgeAddress) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 2:\n              _context4.next = 4;\n              return (_providerRef$current3 = providerRef.current) == null ? void 0 : _providerRef$current3.login();\n\n            case 4:\n              walletConnectUri = _context4.sent;\n              hasUri = Boolean(walletConnectUri);\n\n              if (hasUri) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 8:\n              if (token) {\n                _context4.next = 11;\n                break;\n              }\n\n              setWcUri(walletConnectUri);\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              wcUriWithToken = walletConnectUri + \"&token=\" + token;\n              setWcUri(wcUriWithToken);\n              dispatch(setTokenLogin({\n                loginToken: token\n              }));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _generateWcUri.apply(this, arguments);\n  }\n\n  var loginFailed = error != null;\n  return [initiateLogin, {\n    error: error,\n    loginFailed: loginFailed,\n    isLoading: isLoading && !loginFailed,\n    isLoggedIn: isLoggedIn && !loginFailed\n  }, {\n    uriDeepLink: uriDeepLink,\n    walletConnectUri: wcUri\n  }];\n};\n\nvar index$1 = {\n  __proto__: null,\n  useExtensionLogin: useExtensionLogin,\n  useWebWalletLogin: useWebWalletLogin,\n  useLedgerLogin: useLedgerLogin,\n  useWalletConnectLogin: useWalletConnectLogin\n};\n\nfunction removeTransactionsToSign(sessionId) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\n\nfunction removeSignedTransaction(sessionId) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\n\nfunction removeAllSignedTransactions() {\n  store.dispatch(clearAllSignedTransactions());\n}\n\nfunction removeAllTransactionsToSign() {\n  store.dispatch(clearAllTransactionsToSign());\n}\n\nfunction calcTotalFee(transactions, minGasLimit) {\n  var totalFee = new BigNumber(0);\n  transactions.forEach(function (tx) {\n    var fee = calculateFeeLimit({\n      gasPerDataByte: gasPerDataByte,\n      gasPriceModifier: gasPriceModifier,\n      minGasLimit: String(minGasLimit),\n      gasLimit: tx.getGasLimit().valueOf().toString(),\n      gasPrice: tx.getGasPrice().valueOf().toString(),\n      data: tx.getData().toString(),\n      chainId: tx.getChainID().valueOf()\n    });\n    totalFee = totalFee.plus(new BigNumber(fee));\n  });\n  return totalFee;\n}\n\nfunction signTransactions(_ref) {\n  var transactions = _ref.transactions,\n      callbackRoute = _ref.callbackRoute,\n      _ref$minGasLimit = _ref.minGasLimit,\n      minGasLimit = _ref$minGasLimit === void 0 ? DEFAULT_MIN_GAS_LIMIT : _ref$minGasLimit,\n      customTransactionInformation = _ref.customTransactionInformation,\n      transactionsDisplayInfo = _ref.transactionsDisplayInfo;\n  var appState = store.getState();\n  var sessionId = Date.now().toString();\n  var accountBalance = accountBalanceSelector(appState);\n  var storeChainId = chainIDSelector(appState);\n  var transactionsPayload = Array.isArray(transactions) ? transactions : [transactions];\n  var bNtotalFee = calcTotalFee(transactionsPayload, minGasLimit);\n  var bNbalance = new BigNumber(stringIsFloat(accountBalance) ? accountBalance : '0');\n  var hasSufficientFunds = bNbalance.minus(bNtotalFee).isGreaterThan(0);\n\n  if (!hasSufficientFunds) {\n    var notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Insufficient EGLD funds',\n      description: 'Current EGLD balance cannot cover the transaction fees.'\n    };\n    store.dispatch(setNotificationModal(notificationPayload));\n    return {\n      error: 'insufficient funds',\n      sessionId: null\n    };\n  }\n\n  var hasValidChainId = transactionsPayload == null ? void 0 : transactionsPayload.every(function (tx) {\n    return tx.getChainID().valueOf() === storeChainId.valueOf();\n  });\n\n  if (!hasValidChainId) {\n    var _notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Network change detected',\n      description: 'The application tried to change the transaction network'\n    };\n    store.dispatch(setNotificationModal(_notificationPayload));\n    return {\n      error: 'Invalid ChainID',\n      sessionId: null\n    };\n  }\n\n  var signTransactionsPayload = {\n    sessionId: sessionId,\n    callbackRoute: callbackRoute,\n    customTransactionInformation: customTransactionInformation,\n    transactions: transactionsPayload.map(function (tx) {\n      return tx.toPlainObject();\n    })\n  };\n  store.dispatch(setTransactionsToSign(signTransactionsPayload));\n  store.dispatch(setTransactionsDisplayInfo({\n    sessionId: sessionId,\n    transactionsDisplayInfo: transactionsDisplayInfo\n  }));\n  return {\n    sessionId: sessionId\n  };\n}\n\nvar ErrorCodesEnum;\n\n(function (ErrorCodesEnum) {\n  ErrorCodesEnum[\"invalidReceiver\"] = \"Invalid Receiver address\";\n  ErrorCodesEnum[\"unknownError\"] = \"Unknown Error. Please check the transactions and try again\";\n})(ErrorCodesEnum || (ErrorCodesEnum = {})); // TODO: replace with new erdjs function\n\n\nfunction calculateGasLimit(data) {\n  var bNconfigGasLimit = new BigNumber(gasLimit);\n  var bNgasPerDataByte = new BigNumber(gasPerDataByte);\n  var bNgasValue = data ? bNgasPerDataByte.times(Buffer.from(data).length) : 0;\n  var bNgasLimit = bNconfigGasLimit.plus(bNgasValue);\n  var gasLimit$1 = bNgasLimit.toString(10);\n  return gasLimit$1;\n}\n\nfunction transformAndSignTransactions(_x) {\n  return _transformAndSignTransactions.apply(this, arguments);\n}\n\nfunction _transformAndSignTransactions() {\n  _transformAndSignTransactions = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_ref) {\n    var transactions, address, account, nonce;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            transactions = _ref.transactions;\n            address = addressSelector(store.getState());\n            _context.next = 4;\n            return getAccount(address);\n\n          case 4:\n            account = _context.sent;\n            nonce = getLatestNonce(account);\n            return _context.abrupt(\"return\", transactions.map(function (tx) {\n              var value = tx.value,\n                  receiver = tx.receiver,\n                  _tx$data = tx.data,\n                  data = _tx$data === void 0 ? '' : _tx$data,\n                  chainID = tx.chainID,\n                  version = tx.version,\n                  options = tx.options,\n                  _tx$gasPrice = tx.gasPrice,\n                  gasPrice$1 = _tx$gasPrice === void 0 ? gasPrice : _tx$gasPrice,\n                  _tx$gasLimit = tx.gasLimit,\n                  gasLimit = _tx$gasLimit === void 0 ? calculateGasLimit(tx.data) : _tx$gasLimit;\n              var validatedReceiver = receiver;\n\n              try {\n                var addr = new Address(receiver);\n                validatedReceiver = addr.hex();\n              } catch (err) {\n                throw ErrorCodesEnum.invalidReceiver;\n              }\n\n              var storeChainId = chainIDSelector(store.getState()).valueOf().toString();\n              var transactionsChainId = chainID || storeChainId;\n              return newTransaction({\n                value: value,\n                receiver: validatedReceiver,\n                data: data,\n                gasPrice: gasPrice$1,\n                gasLimit: Number(gasLimit),\n                nonce: Number(nonce.valueOf().toString()),\n                sender: new Address(address).hex(),\n                chainID: transactionsChainId,\n                version: version,\n                options: options\n              });\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _transformAndSignTransactions.apply(this, arguments);\n}\n\nfunction sendTransactions(_x) {\n  return _sendTransactions.apply(this, arguments);\n}\n\nfunction _sendTransactions() {\n  _sendTransactions = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_ref) {\n    var transactions, transactionsDisplayInfo, _ref$redirectAfterSig, redirectAfterSign, _ref$callbackRoute, callbackRoute, signWithoutSending, completedTransactionsDelay, sessionInformation, minGasLimit, transactionsPayload, areComplexTransactions, txToSign;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            transactions = _ref.transactions, transactionsDisplayInfo = _ref.transactionsDisplayInfo, _ref$redirectAfterSig = _ref.redirectAfterSign, redirectAfterSign = _ref$redirectAfterSig === void 0 ? true : _ref$redirectAfterSig, _ref$callbackRoute = _ref.callbackRoute, callbackRoute = _ref$callbackRoute === void 0 ? window.location.pathname : _ref$callbackRoute, signWithoutSending = _ref.signWithoutSending, completedTransactionsDelay = _ref.completedTransactionsDelay, sessionInformation = _ref.sessionInformation, minGasLimit = _ref.minGasLimit;\n            _context.prev = 1;\n            transactionsPayload = Array.isArray(transactions) ? transactions : [transactions];\n            areComplexTransactions = transactionsPayload.every(function (tx) {\n              return Object.getPrototypeOf(tx).toPlainObject != null;\n            });\n            txToSign = transactionsPayload;\n\n            if (areComplexTransactions) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return transformAndSignTransactions({\n              transactions: transactionsPayload,\n              minGasLimit: minGasLimit\n            });\n\n          case 8:\n            txToSign = _context.sent;\n\n          case 9:\n            return _context.abrupt(\"return\", signTransactions({\n              transactions: txToSign,\n              minGasLimit: minGasLimit,\n              callbackRoute: callbackRoute,\n              transactionsDisplayInfo: transactionsDisplayInfo,\n              customTransactionInformation: {\n                redirectAfterSign: redirectAfterSign,\n                completedTransactionsDelay: completedTransactionsDelay,\n                sessionInformation: sessionInformation,\n                signWithoutSending: signWithoutSending\n              }\n            }));\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('error signing transaction', _context.t0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0,\n              sessionId: null\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n  return _sendTransactions.apply(this, arguments);\n}\n\nfunction useTrackTransactionStatus(_ref) {\n  var transactionId = _ref.transactionId,\n      onSuccess = _ref.onSuccess,\n      onFail = _ref.onFail,\n      onCancelled = _ref.onCancelled,\n      onTimedOut = _ref.onTimedOut,\n      onCompleted = _ref.onCompleted;\n  var transactionsBatch = useSelector(function (state) {\n    return transactionStatusSelector(state, transactionId);\n  });\n  var status = transactionsBatch.status,\n      transactions = transactionsBatch.transactions,\n      errorMessage = transactionsBatch.errorMessage;\n  var isPending = getIsTransactionPending(status);\n  var isFailed = getIsTransactionFailed(status);\n  var isTimedOut = getIsTransactionTimedOut(status);\n  var isSuccessful = getIsTransactionSuccessful(status);\n  var isCompleted = getIsTransactionCompleted(status);\n  var isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n  useEffect(function () {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n  useEffect(function () {\n    if (isCompleted && onCompleted) {\n      onCompleted(transactionId);\n    }\n  }, [isCompleted]);\n  useEffect(function () {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n    }\n  }, [isFailed]);\n  useEffect(function () {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n    }\n  }, [isCancelled]);\n  useEffect(function () {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail == null ? void 0 : onFail(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return {\n      errorMessage: 'No transaction to track'\n    };\n  }\n\n  return {\n    isPending: isPending,\n    isSuccessful: isSuccessful,\n    isFailed: isFailed,\n    isCancelled: isCancelled,\n    isCompleted: isCompleted,\n    errorMessage: errorMessage,\n    status: status,\n    transactions: transactions\n  };\n}\n\nfunction useGetPendingTransactions() {\n  var pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  var pendingTransactionsArray = Object.entries(pendingTransactions);\n  var hasPendingTransactions = (pendingTransactionsArray == null ? void 0 : pendingTransactionsArray.length) > 0;\n  return {\n    pendingTransactions: pendingTransactions,\n    pendingTransactionsArray: pendingTransactionsArray,\n    hasPendingTransactions: hasPendingTransactions\n  };\n}\n\nfunction useGetFailedTransactions() {\n  var failedTransactions = useSelector(failedTransactionsSelector);\n  var failedTransactionsArray = Object.entries(failedTransactions);\n  var hasFailedTransactions = (failedTransactionsArray == null ? void 0 : failedTransactionsArray.length) > 0;\n  return {\n    failedTransactions: failedTransactions,\n    failedTransactionsArray: failedTransactionsArray,\n    hasFailedTransactions: hasFailedTransactions\n  };\n}\n\nfunction useGetSuccessfulTransactions() {\n  var successfulTransactions = useSelector(successfulTransactionsSelector);\n  var successfulTransactionsArray = Object.entries(successfulTransactions);\n  var hasSuccessfulTransactions = (successfulTransactionsArray == null ? void 0 : successfulTransactionsArray.length) > 0;\n  return {\n    successfulTransactions: successfulTransactions,\n    successfulTransactionsArray: successfulTransactionsArray,\n    hasSuccessfulTransactions: hasSuccessfulTransactions\n  };\n}\n\nvar defaultTransactionInfo$1 = {\n  tokenId: '',\n  amount: '',\n  type: '',\n  multiTxData: '',\n  receiver: ''\n};\n\nfunction useParseMultiEsdtTransferData(_ref) {\n  var transactions = _ref.transactions;\n\n  var _useState = useState({}),\n      parsedTransactionsByDataField = _useState[0],\n      setParsedTransactions = _useState[1];\n\n  var _useState2 = useState([]),\n      allTransactions = _useState2[0],\n      setAllTransactions = _useState2[1];\n\n  function addTransactionDataToParsedInfo(data, txInfo) {\n    setParsedTransactions(function (existing) {\n      var _extends2;\n\n      return _extends({}, existing, (_extends2 = {}, _extends2[data] = txInfo, _extends2));\n    });\n  }\n\n  function getTxInfoByDataField(data, multiTransactionData) {\n    if (parsedTransactionsByDataField == null) {\n      return defaultTransactionInfo$1;\n    }\n\n    if (data in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[data];\n    }\n\n    if (multiTransactionData != null && String(multiTransactionData) in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[multiTransactionData];\n    }\n\n    return defaultTransactionInfo$1;\n  }\n\n  function extractTransactionESDTData() {\n    if (transactions && transactions.length > 0) {\n      var allTxs = [];\n      transactions.forEach(function (transaction, transactionIndex) {\n        var txData = transaction.getData().toString();\n        var multiTxs = parseMultiEsdtTransferData(txData);\n\n        if (multiTxs.length > 0) {\n          multiTxs.forEach(function (trx, idx) {\n            var newTx = {\n              transaction: transaction,\n              multiTxData: trx.data,\n              transactionIndex: idx\n            };\n            addTransactionDataToParsedInfo(trx.data, {\n              tokenId: trx.token ? trx.token : '',\n              amount: trx.amount ? trx.amount : '',\n              type: trx.type,\n              nonce: trx.nonce ? trx.nonce : '',\n              multiTxData: trx.data,\n              receiver: trx.receiver\n            });\n            allTxs.push(newTx);\n          });\n        } else {\n          var _getTokenFromData = getTokenFromData(transaction.getData().toString()),\n              tokenId = _getTokenFromData.tokenId,\n              amount = _getTokenFromData.amount;\n\n          if (tokenId) {\n            addTransactionDataToParsedInfo(transaction.getData().toString(), {\n              tokenId: tokenId,\n              amount: amount,\n              receiver: transaction.getReceiver().bech32()\n            });\n          }\n\n          allTxs.push({\n            transaction: transaction,\n            transactionIndex: transactionIndex\n          });\n        }\n      });\n      setAllTransactions(allTxs);\n    }\n  }\n\n  useEffect(function () {\n    extractTransactionESDTData();\n  }, [transactions]);\n  return {\n    parsedTransactionsByDataField: parsedTransactionsByDataField,\n    getTxInfoByDataField: getTxInfoByDataField,\n    allTransactions: allTransactions\n  };\n}\n\nfunction useGetActiveTransactionsStatus() {\n  var _Object$keys, _Object$keys2, _Object$keys3;\n\n  var signedTransactions = useSelector(signedTransactionsSelector);\n  var timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  var failedTransactions = useSelector(failedTransactionsSelector);\n  var successfulTransactions = useSelector(successfulTransactionsSelector);\n  var pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  var completedTransactions = useSelector(completedTransactionsSelector);\n  var pending = ((_Object$keys = Object.keys(pendingTransactions)) == null ? void 0 : _Object$keys.length) > 0;\n  var timedOut = !pending && ((_Object$keys2 = Object.keys(timedOutTransactions)) == null ? void 0 : _Object$keys2.length) > 0;\n  var fail = !pending && !timedOut && ((_Object$keys3 = Object.keys(failedTransactions)) == null ? void 0 : _Object$keys3.length) > 0;\n  var success = !pending && !timedOut && !fail && Object.keys(successfulTransactions).length > 0;\n  var completed = !pending && !timedOut && !fail && Object.keys(completedTransactions).length > 0;\n  var hasActiveTransactions = Object.keys(signedTransactions).length > 0;\n  return {\n    pending: pending,\n    timedOut: timedOut,\n    fail: fail,\n    success: success,\n    completed: completed,\n    hasActiveTransactions: hasActiveTransactions\n  };\n}\n\nfunction useGetCompletedTransactions() {\n  var completedTransactions = useSelector(completedTransactionsSelector);\n  var completedTransactionsArray = Object.entries(completedTransactions);\n  var hasCompletedTransactions = (completedTransactionsArray == null ? void 0 : completedTransactionsArray.length) > 0;\n  return {\n    completedTransactions: completedTransactions,\n    completedTransactionsArray: completedTransactionsArray,\n    hasCompletedTransactions: hasCompletedTransactions\n  };\n}\n\nvar index$2 = {\n  __proto__: null,\n  removeTransactionsToSign: removeTransactionsToSign,\n  removeSignedTransaction: removeSignedTransaction,\n  removeAllSignedTransactions: removeAllSignedTransactions,\n  removeAllTransactionsToSign: removeAllTransactionsToSign,\n  sendTransactions: sendTransactions,\n  signTransactions: signTransactions,\n  useTrackTransactionStatus: useTrackTransactionStatus,\n  useGetPendingTransactions: useGetPendingTransactions,\n  useGetFailedTransactions: useGetFailedTransactions,\n  useGetSuccessfulTransactions: useGetSuccessfulTransactions,\n  useParseMultiEsdtTransferData: useParseMultiEsdtTransferData,\n  useGetActiveTransactionsStatus: useGetActiveTransactionsStatus,\n  useGetCompletedTransactions: useGetCompletedTransactions\n};\n\nfunction ProviderInitializer() {\n  var network = useSelector(networkSelector);\n  var walletConnectLogin = useSelector(walletConnectLoginSelector);\n  var loginMethod = useSelector(loginMethodSelector);\n  var walletLogin = useSelector(walletLoginSelector);\n  var address = useSelector(addressSelector);\n  var ledgerAccount = useSelector(ledgerAccountSelector);\n  var ledgerLogin = useSelector(ledgerLoginSelector);\n  var isLoggedIn = useSelector(isLoggedInSelector);\n\n  var _useState = useState(),\n      ledgerData = _useState[0],\n      setLedgerData = _useState[1];\n\n  var proxy = getProxyProvider();\n  var dispatch = useDispatch();\n\n  var _ref = walletConnectLogin ? walletConnectLogin : {\n    callbackRoute: '',\n    logoutRoute: ''\n  },\n      callbackRoute = _ref.callbackRoute,\n      logoutRoute = _ref.logoutRoute;\n\n  var _useWalletConnectLogi = useWalletConnectLogin({\n    callbackRoute: callbackRoute,\n    logoutRoute: logoutRoute\n  }),\n      initWalletLoginProvider = _useWalletConnectLogi[0];\n\n  useEffect(function () {\n    refreshChainID();\n  }, [network]);\n  useEffect(function () {\n    initializeProvider();\n  }, [loginMethod]);\n  useEffect(function () {\n    fetchAccount();\n  }, [address, isLoggedIn]);\n  useEffect(function () {\n    // prevent balance double fetching by handling ledgerAccount data separately\n    setLedgerAccountInfo();\n  }, [ledgerAccount, isLoggedIn, ledgerData]);\n\n  function refreshChainID() {\n    getNetworkConfigFromProxyProvider().then(function (networkConfig) {\n      if (networkConfig) {\n        dispatch(setChainID(networkConfig.ChainID.valueOf()));\n      }\n    })[\"catch\"](function (e) {\n      console.error('To do ', e);\n    });\n  }\n\n  function setLedgerAccountInfo() {\n    if (ledgerAccount == null && ledgerLogin != null && ledgerData) {\n      dispatch(setLedgerAccount({\n        index: ledgerLogin.index,\n        address: address,\n        hasContractDataEnabled: ledgerData.dataEnabled,\n        version: ledgerData.version\n      }));\n    }\n  }\n\n  function fetchAccount() {\n    return _fetchAccount.apply(this, arguments);\n  }\n\n  function _fetchAccount() {\n    _fetchAccount = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var account;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(setIsAccountLoading(true));\n\n              if (!(address && isLoggedIn)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return getAccount(address);\n\n            case 5:\n              account = _context.sent;\n\n              if (account) {\n                dispatch(setAccount({\n                  balance: account.balance.toString(),\n                  address: address,\n                  nonce: account.nonce.valueOf()\n                }));\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch(setAccountLoadingError('Failed getting account'));\n              console.error('Failed getting account ', _context.t0);\n\n            case 13:\n              dispatch(setIsAccountLoading(false));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n    return _fetchAccount.apply(this, arguments);\n  }\n\n  function tryAuthenticateWalletUser() {\n    return _tryAuthenticateWalletUser.apply(this, arguments);\n  }\n\n  function _tryAuthenticateWalletUser() {\n    _tryAuthenticateWalletUser = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var provider, _address, account;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(walletLogin != null)) {\n                _context2.next = 14;\n                break;\n              }\n\n              provider = newWalletProvider(network.walletAddress);\n              _context2.next = 5;\n              return getAddress();\n\n            case 5:\n              _address = _context2.sent;\n\n              if (!_address) {\n                _context2.next = 13;\n                break;\n              }\n\n              setAccountProvider(provider);\n              dispatch(loginAction({\n                address: _address,\n                loginMethod: LoginMethodsEnum.wallet\n              }));\n              _context2.next = 11;\n              return getAccount(_address);\n\n            case 11:\n              account = _context2.sent;\n\n              if (account) {\n                dispatch(setAccount({\n                  balance: account.balance.toString(),\n                  address: _address,\n                  nonce: getLatestNonce(account)\n                }));\n              }\n\n            case 13:\n              dispatch(setWalletLogin(null));\n\n            case 14:\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Failed authenticating wallet user ', _context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16]]);\n    }));\n    return _tryAuthenticateWalletUser.apply(this, arguments);\n  }\n\n  function getInitializedHwWalletProvider() {\n    return _getInitializedHwWalletProvider.apply(this, arguments);\n  }\n\n  function _getInitializedHwWalletProvider() {\n    _getInitializedHwWalletProvider = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3() {\n      var hwWalletP, isInitialized;\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              hwWalletP = new HWProvider(proxy);\n              isInitialized = hwWalletP.isInitialized();\n\n              if (isInitialized) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 5;\n              return hwWalletP.init();\n\n            case 5:\n              isInitialized = _context3.sent;\n\n            case 6:\n              if (!(!isInitialized && isLoggedIn)) {\n                _context3.next = 10;\n                break;\n              }\n\n              console.warn('Could not initialise ledger app');\n              logout();\n              return _context3.abrupt(\"return\");\n\n            case 10:\n              if ((ledgerLogin == null ? void 0 : ledgerLogin.index) != null) {\n                hwWalletP.addressIndex = ledgerLogin.index;\n              }\n\n              return _context3.abrupt(\"return\", hwWalletP);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getInitializedHwWalletProvider.apply(this, arguments);\n  }\n\n  function setLedgerProvider() {\n    return _setLedgerProvider.apply(this, arguments);\n  }\n\n  function _setLedgerProvider() {\n    _setLedgerProvider = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4() {\n      var hwWalletP, ledgerConfig;\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return getInitializedHwWalletProvider();\n\n            case 3:\n              hwWalletP = _context4.sent;\n\n              if (hwWalletP) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 6:\n              _context4.next = 8;\n              return getLedgerConfiguration(hwWalletP);\n\n            case 8:\n              ledgerConfig = _context4.sent;\n              setAccountProvider(hwWalletP);\n              setLedgerData(ledgerConfig);\n              _context4.next = 17;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Could not initialise ledger app', _context4.t0);\n              logout();\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 13]]);\n    }));\n    return _setLedgerProvider.apply(this, arguments);\n  }\n\n  function setExtensionProvider() {\n    return _setExtensionProvider.apply(this, arguments);\n  }\n\n  function _setExtensionProvider() {\n    _setExtensionProvider = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5() {\n      var _address2, provider, success;\n\n      return runtime_1.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return getAddress();\n\n            case 3:\n              _address2 = _context5.sent;\n              provider = ExtensionProvider.getInstance().setAddress(_address2);\n              _context5.next = 7;\n              return provider.init();\n\n            case 7:\n              success = _context5.sent;\n\n              if (success) {\n                setAccountProvider(provider);\n              } else {\n                console.error('Could not initialise extension, make sure Elrond wallet extension is installed.');\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Unable to login to ExtensionProvider', _context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n    return _setExtensionProvider.apply(this, arguments);\n  }\n\n  function initializeProvider() {\n    if (loginMethod == null) {\n      return;\n    }\n\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger:\n        {\n          setLedgerProvider();\n          break;\n        }\n\n      case LoginMethodsEnum.walletconnect:\n        {\n          initWalletLoginProvider(false);\n          break;\n        }\n\n      case LoginMethodsEnum.wallet:\n        {\n          var provider = newWalletProvider(network.walletAddress);\n          setAccountProvider(provider);\n          break;\n        }\n\n      case LoginMethodsEnum.extension:\n        {\n          setExtensionProvider();\n          break;\n        }\n\n      case LoginMethodsEnum.extra:\n        {\n          setExternalProviderAsAccountProvider();\n          break;\n        }\n\n      case LoginMethodsEnum.none:\n        {\n          tryAuthenticateWalletUser();\n          break;\n        }\n\n      default:\n        return;\n    }\n  }\n\n  return null;\n}\n\nfunction sendSignedTransactions(_x) {\n  return _sendSignedTransactions.apply(this, arguments);\n}\n\nfunction _sendSignedTransactions() {\n  _sendSignedTransactions = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(signedTransactions) {\n    var _networkSelector, apiAddress, apiTimeout, promises, response;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _networkSelector = networkSelector(store.getState()), apiAddress = _networkSelector.apiAddress, apiTimeout = _networkSelector.apiTimeout;\n            promises = signedTransactions.map(function (transaction) {\n              return axios.post(apiAddress + \"/transactions\", transaction.toPlainObject(), {\n                timeout: parseInt(apiTimeout)\n              });\n            });\n            _context.next = 4;\n            return Promise.all(promises);\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.map(function (_ref) {\n              var data = _ref.data;\n              return data.txHash;\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendSignedTransactions.apply(this, arguments);\n}\n\nfunction getTransactionsByHashes(_x) {\n  return _getTransactionsByHashes.apply(this, arguments);\n}\n\nfunction _getTransactionsByHashes() {\n  _getTransactionsByHashes = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(pendingTransactions) {\n    var networkConfig, hashes, _yield$axios$get, responseData;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            networkConfig = networkConfigSelector(store.getState());\n            hashes = pendingTransactions.map(function (tx) {\n              return tx.hash;\n            });\n            _context.next = 4;\n            return axios.get(networkConfig.network.apiAddress + \"/transactions\", {\n              params: {\n                hashes: hashes.join(','),\n                withScResults: true\n              }\n            });\n\n          case 4:\n            _yield$axios$get = _context.sent;\n            responseData = _yield$axios$get.data;\n            return _context.abrupt(\"return\", pendingTransactions.map(function (_ref) {\n              var hash = _ref.hash,\n                  previousStatus = _ref.previousStatus;\n              var txOnNetwork = responseData.find(function (txResponse) {\n                return (txResponse == null ? void 0 : txResponse.txHash) === hash;\n              });\n              return {\n                hash: hash,\n                data: txOnNetwork.data,\n                invalidTransaction: txOnNetwork == null,\n                status: txOnNetwork.status,\n                results: txOnNetwork.results,\n                sender: txOnNetwork.sender,\n                receiver: txOnNetwork == null ? void 0 : txOnNetwork.receiver,\n                previousStatus: previousStatus,\n                hasStatusChanged: txOnNetwork.status !== previousStatus\n              };\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getTransactionsByHashes.apply(this, arguments);\n}\n\nfunction getServerConfiguration(_x) {\n  return _getServerConfiguration.apply(this, arguments);\n}\n\nfunction _getServerConfiguration() {\n  _getServerConfiguration = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(apiAddress) {\n    var cleanApiAddress, configUrl, _yield$axios$get, data;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cleanApiAddress = apiAddress.endsWith('/') ? apiAddress.slice(0, -1) : apiAddress;\n            configUrl = cleanApiAddress + \"/\" + configEndpoint;\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.get(configUrl);\n\n          case 5:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n\n            if (!(data != null)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.error('error fetching configuration for ', configUrl);\n\n          case 14:\n            return _context.abrupt(\"return\", null);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n  return _getServerConfiguration.apply(this, arguments);\n}\n\nfunction getServerConfigurationForEnvironment(_x) {\n  return _getServerConfigurationForEnvironment.apply(this, arguments);\n}\n\nfunction _getServerConfigurationForEnvironment() {\n  _getServerConfigurationForEnvironment = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(environment) {\n    var fallbackConfig, config;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fallbackConfig = fallbackNetworkConfigurations[environment];\n            _context.next = 3;\n            return getServerConfiguration(fallbackConfig.apiAddress);\n\n          case 3:\n            config = _context.sent;\n            return _context.abrupt(\"return\", config !== null ? config : fallbackConfig);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServerConfigurationForEnvironment.apply(this, arguments);\n}\n\nfunction getScamAddressData(_x) {\n  return _getScamAddressData.apply(this, arguments);\n}\n\nfunction _getScamAddressData() {\n  _getScamAddressData = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(addressToVerify) {\n    var _networkConfigSelecto, _networkConfigSelecto2, apiAddress, apiTimeout, _yield$axios$get, data;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _networkConfigSelecto = networkConfigSelector(store.getState()), _networkConfigSelecto2 = _networkConfigSelecto.network, apiAddress = _networkConfigSelecto2.apiAddress, apiTimeout = _networkConfigSelecto2.apiTimeout;\n            _context.next = 3;\n            return axios.get(\"/accounts/\" + addressToVerify, {\n              baseURL: apiAddress,\n              timeout: Number(apiTimeout)\n            });\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getScamAddressData.apply(this, arguments);\n}\n\nvar index$3 = {\n  __proto__: null,\n  sendSignedTransactions: sendSignedTransactions,\n  getTransactionsByHashes: getTransactionsByHashes,\n  getServerConfigurationForEnvironment: getServerConfigurationForEnvironment,\n  getServerConfiguration: getServerConfiguration,\n  getScamAddressData: getScamAddressData\n};\n\nvar useGetNetworkConfig = function useGetNetworkConfig() {\n  return useSelector(networkConfigSelector);\n};\n\nfunction useGetNotification() {\n  var notification = useSelector(notificationModalSelector);\n  var dispatch = useDispatch();\n\n  var clearNotification = function clearNotification() {\n    return dispatch(clearNotificationModal());\n  };\n\n  return {\n    notification: notification,\n    clearNotification: clearNotification\n  };\n}\n\nfunction useGetTransactionDisplayInfo(toastId) {\n  return useSelector(function (state) {\n    return transactionDisplayInfoSelector(state, toastId);\n  });\n}\n\nfunction useParseSignedTransactions() {\n  var search = window.location.search;\n  var network = useSelector(networkSelector);\n  var dispatch = useDispatch();\n  React__default.useEffect(function () {\n    if (search != null) {\n      var searchData = qs.parse(search.replace('?', ''));\n\n      if (searchData && walletSignSession in searchData) {\n        var signSessionId = searchData[walletSignSession];\n        var signedTransactions = new WalletProvider(\"\" + network.walletAddress + dappInitRoute).getTransactionsFromWalletUrl();\n\n        if (signedTransactions.length > 0) {\n          dispatch(moveTransactionsToSignedState({\n            sessionId: signSessionId.toString(),\n            status: TransactionBatchStatusesEnum.signed,\n            transactions: signedTransactions.map(function (tx) {\n              return parseTransactionAfterSigning(tx);\n            })\n          }));\n          history.pushState({}, document.title, '?');\n        }\n      }\n    }\n  }, [search]);\n}\n\nvar useSignTransactions = function useSignTransactions() {\n  var dispatch = useDispatch();\n  var savedCallback = useRef('/');\n  var address = useSelector(addressSelector);\n  var provider = getAccountProvider();\n  var providerType = getProviderType(provider);\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var transactionsToSign = useSelector(transactionsToSignSelector);\n  var hasTransactions = Boolean(transactionsToSign == null ? void 0 : transactionsToSign.transactions);\n  useParseSignedTransactions();\n\n  var onAbort = function onAbort(sessionId) {\n    setError(null);\n    clearSignInfo(sessionId);\n  };\n\n  function clearSignInfo(sessionId) {\n    var _ExtensionProvider$ge;\n\n    var isExtensionProvider = provider instanceof ExtensionProvider;\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    if (!isExtensionProvider) {\n      return;\n    }\n\n    (_ExtensionProvider$ge = ExtensionProvider.getInstance()) == null ? void 0 : _ExtensionProvider$ge.cancelAction == null ? void 0 : _ExtensionProvider$ge.cancelAction();\n  }\n\n  var onCancel = function onCancel(errorMessage, sessionId) {\n    var isTxCancelled = errorMessage !== TRANSACTION_CANCELLED;\n    clearSignInfo(sessionId);\n    /*\r\n     * this is triggered by abort action,\r\n     * so no need to show error again\r\n     */\n\n    if (!isTxCancelled) {\n      return;\n    }\n\n    setError(errorMessage);\n  };\n\n  var signWithWallet = function signWithWallet(transactions, sessionId, callbackRoute) {\n    var _urlParams;\n\n    if (callbackRoute === void 0) {\n      callbackRoute = '';\n    }\n\n    var urlParams = (_urlParams = {}, _urlParams[walletSignSession] = sessionId, _urlParams);\n    var callbackUrl = \"\" + window.location.origin + callbackRoute;\n    var buildedCallbackUrl = builtCallbackUrl({\n      callbackUrl: callbackUrl,\n      urlParams: urlParams\n    });\n    provider.signTransactions(transactions, {\n      callbackUrl: encodeURIComponent(buildedCallbackUrl)\n    });\n  };\n\n  var signTransactionsWithProvider = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var sessionId, transactions, callbackRoute, customTransactionInformation, redirectAfterSign, redirectRoute, isCurrentRoute, shouldRedirectAfterSign, isProviderInitialized, errorMessage, signedTransactions, hasSameTransactions, hasAllTransactionsSigned, shouldMoveTransactionsToSignedState, signedTransactionsArray, _errorMessage;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sessionId = transactionsToSign.sessionId, transactions = transactionsToSign.transactions, callbackRoute = transactionsToSign.callbackRoute, customTransactionInformation = transactionsToSign.customTransactionInformation;\n              redirectAfterSign = customTransactionInformation.redirectAfterSign;\n              redirectRoute = callbackRoute || window.location.pathname;\n              isCurrentRoute = window.location.pathname.includes(redirectRoute);\n              shouldRedirectAfterSign = redirectAfterSign && !isCurrentRoute;\n              _context.prev = 5;\n              _context.next = 8;\n              return provider.init();\n\n            case 8:\n              isProviderInitialized = _context.sent;\n\n              if (isProviderInitialized) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              _context.next = 19;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              errorMessage = (_context.t0 == null ? void 0 : _context.t0.message) || _context.t0 || PROVIDER_NOT_INTIALIZED;\n              console.error(PROVIDER_NOT_INTIALIZED, errorMessage);\n              onCancel(errorMessage);\n              return _context.abrupt(\"return\");\n\n            case 19:\n              _context.prev = 19;\n              _context.next = 22;\n              return provider.signTransactions(transactions);\n\n            case 22:\n              signedTransactions = _context.sent;\n              hasSameTransactions = Object.keys(signedTransactions).length === transactions.length;\n              hasAllTransactionsSigned = signedTransactions && hasSameTransactions;\n              shouldMoveTransactionsToSignedState = signedTransactions && hasAllTransactionsSigned;\n\n              if (shouldMoveTransactionsToSignedState) {\n                _context.next = 28;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 28:\n              signedTransactionsArray = Object.values(signedTransactions).map(function (tx) {\n                return parseTransactionAfterSigning(tx);\n              });\n              dispatch(moveTransactionsToSignedState({\n                sessionId: sessionId,\n                transactions: signedTransactionsArray,\n                status: TransactionBatchStatusesEnum.signed\n              }));\n\n              if (shouldRedirectAfterSign) {\n                window.location.href = redirectRoute;\n              }\n\n              _context.next = 39;\n              break;\n\n            case 33:\n              _context.prev = 33;\n              _context.t1 = _context[\"catch\"](19);\n              _errorMessage = (error == null ? void 0 : error.message) || error || ERROR_SIGNING_TX;\n              console.error(ERROR_SIGNING_TX, _errorMessage);\n              dispatch(moveTransactionsToSignedState({\n                sessionId: sessionId,\n                status: TransactionBatchStatusesEnum.cancelled\n              }));\n              onCancel(_errorMessage, sessionId);\n\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 13], [19, 33]]);\n    }));\n\n    return function signTransactionsWithProvider() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var signTransactions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var sessionId, transactions, callbackRoute, setTransactionNonces, proxyAccount, isSigningWithWebWallet, isSigningWithProvider, latestNonce, mappedTransactions, defaultErrorMessage, errorMessage;\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (transactionsToSign) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              sessionId = transactionsToSign.sessionId, transactions = transactionsToSign.transactions, callbackRoute = transactionsToSign.callbackRoute;\n\n              if (provider) {\n                _context2.next = 6;\n                break;\n              }\n\n              console.error(MISSING_PROVIDER_MESSAGE);\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              /*\r\n               * if the transaction is cancelled\r\n               * the callback will go to undefined,\r\n               * we save the most recent one for a valid transaction\r\n               */\n              savedCallback.current = callbackRoute || window.location.pathname;\n\n              setTransactionNonces = function setTransactionNonces(latestNonce, transactions) {\n                return transactions.map(function (tx, index) {\n                  tx.setNonce(new Nonce(latestNonce + index));\n                  return tx;\n                });\n              };\n\n              _context2.prev = 8;\n              _context2.next = 11;\n              return getAccountFromProxyProvider(address);\n\n            case 11:\n              proxyAccount = _context2.sent;\n\n              if (!(proxyAccount == null)) {\n                _context2.next = 14;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 14:\n              isSigningWithWebWallet = providerType === LoginMethodsEnum.wallet;\n              isSigningWithProvider = ![LoginMethodsEnum.wallet, LoginMethodsEnum.ledger].includes(providerType);\n              latestNonce = getLatestNonce(proxyAccount);\n              mappedTransactions = setTransactionNonces(latestNonce, transactions);\n\n              if (isSigningWithWebWallet) {\n                signWithWallet(mappedTransactions, sessionId, callbackRoute);\n              }\n\n              if (isSigningWithProvider) {\n                signTransactionsWithProvider();\n              }\n\n              _context2.next = 29;\n              break;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.t0 = _context2[\"catch\"](8);\n              defaultErrorMessage = error == null ? void 0 : error.message;\n              errorMessage = defaultErrorMessage || ERROR_SIGNING;\n              onCancel(errorMessage, sessionId);\n              dispatch(moveTransactionsToSignedState({\n                sessionId: sessionId,\n                status: TransactionBatchStatusesEnum.cancelled\n              }));\n              console.error(errorMessage, _context2.t0);\n\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[8, 22]]);\n    }));\n\n    return function signTransactions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    signTransactions();\n  }, [transactionsToSign]);\n  return {\n    error: error,\n    onAbort: onAbort,\n    hasTransactions: hasTransactions,\n    callbackRoute: savedCallback.current,\n    sessionId: transactionsToSign == null ? void 0 : transactionsToSign.sessionId,\n    transactions: transactionsToSign == null ? void 0 : transactionsToSign.transactions\n  };\n};\n\nfunction useGetSignedTransactions() {\n  var signedTransactions = useSelector(signedTransactionsSelector);\n  var signedTransactionsArray = Object.entries(signedTransactions);\n  var hasSignedTransactions = (signedTransactionsArray == null ? void 0 : signedTransactionsArray.length) > 0;\n  return {\n    signedTransactions: signedTransactions,\n    signedTransactionsArray: signedTransactionsArray,\n    hasSignedTransactions: hasSignedTransactions\n  };\n}\n\nvar swr = {};\n\ntry {\n  swr = /*#__PURE__*/require('swr')[\"default\"];\n} catch (err) {}\n\nvar useSwr = swr;\n\nvar fetcher = function fetcher(url) {\n  return axios.get(url).then(function (response) {\n    return response.data;\n  });\n};\n\nfunction useGetTokenDetails(_ref) {\n  var _selectedToken$assets;\n\n  var tokenId = _ref.tokenId;\n\n  var _useGetNetworkConfig = useGetNetworkConfig(),\n      network = _useGetNetworkConfig.network;\n\n  var _getIdentifierType = getIdentifierType(tokenId),\n      isEsdt = _getIdentifierType.isEsdt;\n\n  var tokenEndpoint = isEsdt ? 'tokens' : 'nfts';\n\n  var _useSwr = useSwr(Boolean(tokenId) ? network.apiAddress + \"/\" + tokenEndpoint + \"/\" + tokenId : null, fetcher),\n      selectedToken = _useSwr.data,\n      error = _useSwr.error;\n\n  if (!tokenId) {\n    return {\n      tokenDenomination: Number(network.egldDenomination),\n      tokenLabel: '',\n      tokenAvatar: ''\n    };\n  }\n\n  var tokenDenomination = selectedToken ? selectedToken == null ? void 0 : selectedToken.decimals : Number(network.egldDenomination);\n  var tokenLabel = selectedToken ? selectedToken == null ? void 0 : selectedToken.name : '';\n  var tokenAvatar = selectedToken ? \"\" + (selectedToken == null ? void 0 : (_selectedToken$assets = selectedToken.assets) == null ? void 0 : _selectedToken$assets.svgUrl) : '';\n  return {\n    tokenDenomination: tokenDenomination,\n    tokenLabel: tokenLabel,\n    tokenAvatar: tokenAvatar,\n    error: error\n  };\n}\n\nvar useGetAccountInfo = function useGetAccountInfo() {\n  return useSelector(accountInfoSelector);\n};\n\nvar useGetLoginInfo = function useGetLoginInfo() {\n  var loginInfo = useSelector(loginInfoSelector);\n  var isLoggedIn = useSelector(isLoggedInSelector);\n  return _extends({}, loginInfo, {\n    isLoggedIn: isLoggedIn\n  });\n};\n\nvar useGetAccountProvider = function useGetAccountProvider() {\n  var provider = getAccountProvider();\n  var providerType = getProviderType(provider);\n  return {\n    provider: provider,\n    providerType: providerType\n  };\n};\n\nvar verifiedAddresses = {};\n\nfunction useSignTransactionsWithDevice(_ref) {\n  var _currentTransaction$t, _currentTransaction$t2, _currentTransaction$t3;\n\n  var onCancel = _ref.onCancel,\n      _ref$verifyReceiverSc = _ref.verifyReceiverScam,\n      verifyReceiverScam = _ref$verifyReceiverSc === void 0 ? true : _ref$verifyReceiverSc;\n  var transactionsToSign = useSelector(transactionsToSignSelector);\n\n  var _useGetAccountInfo = useGetAccountInfo(),\n      address = _useGetAccountInfo.account.address;\n\n  var _ref2 = transactionsToSign || {},\n      sessionId = _ref2.sessionId,\n      transactions = _ref2.transactions,\n      callbackRoute = _ref2.callbackRoute,\n      customTransactionInformation = _ref2.customTransactionInformation;\n\n  var _useState = useState(0),\n      currentStep = _useState[0],\n      setCurrentStep = _useState[1];\n\n  var _useState2 = useState(),\n      signedTransactions = _useState2[0],\n      setSignedTransactions = _useState2[1];\n\n  var _useParseMultiEsdtTra = useParseMultiEsdtTransferData({\n    transactions: transactions\n  }),\n      getTxInfoByDataField = _useParseMultiEsdtTra.getTxInfoByDataField,\n      allTransactions = _useParseMultiEsdtTra.allTransactions;\n\n  var _useState3 = useState(null),\n      currentTransaction = _useState3[0],\n      setCurrentTransaction = _useState3[1];\n\n  var provider = getAccountProvider();\n  var egldLabel = useSelector(egldLabelSelector);\n\n  var _useState4 = useState(false),\n      waitingForDevice = _useState4[0],\n      setWaitingForDevice = _useState4[1];\n\n  var dispatch = useDispatch();\n  var isLedger = getIsProviderEqualTo(LoginMethodsEnum.ledger);\n  var isLastTransaction = currentStep === allTransactions.length - 1;\n  useEffect(function () {\n    extractTransactionsInfo();\n  }, [currentStep, allTransactions]);\n\n  function extractTransactionsInfo() {\n    return _extractTransactionsInfo.apply(this, arguments);\n  }\n\n  function _extractTransactionsInfo() {\n    _extractTransactionsInfo = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var _verifiedAddresses$re;\n\n      var tx, transaction, multiTxData, dataField, transactionTokenInfo, tokenId, receiver, notSender, verified, _ref3, data, isTokenTransaction;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tx = allTransactions[currentStep];\n\n              if (!(tx == null)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              transaction = tx.transaction, multiTxData = tx.multiTxData;\n              dataField = transaction.getData().toString();\n              transactionTokenInfo = getTxInfoByDataField(transaction.getData().toString(), multiTxData);\n              tokenId = transactionTokenInfo.tokenId;\n              receiver = transaction.getReceiver().toString();\n              notSender = address !== receiver;\n              verified = receiver in verifiedAddresses;\n\n              if (!(notSender && !verified && verifyReceiverScam)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 13;\n              return getScamAddressData(receiver);\n\n            case 13:\n              data = _context.sent;\n              verifiedAddresses = _extends({}, verifiedAddresses, data.scamInfo ? (_ref3 = {}, _ref3[receiver] = data.scamInfo, _ref3) : {});\n\n            case 15:\n              isTokenTransaction = Boolean(tokenId && isTokenTransfer({\n                tokenId: tokenId,\n                erdLabel: egldLabel\n              }));\n              setCurrentTransaction({\n                transaction: transaction,\n                receiverScamInfo: ((_verifiedAddresses$re = verifiedAddresses[receiver]) == null ? void 0 : _verifiedAddresses$re.info) || null,\n                transactionTokenInfo: transactionTokenInfo,\n                isTokenTransaction: isTokenTransaction,\n                dataField: dataField\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _extractTransactionsInfo.apply(this, arguments);\n  }\n\n  function reset() {\n    setCurrentStep(0);\n    setSignedTransactions(undefined);\n    setWaitingForDevice(false);\n  }\n\n  function sign() {\n    return _sign.apply(this, arguments);\n  }\n\n  function _sign() {\n    _sign = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var _newSignedTx, signedTx, newSignedTx, newSignedTransactions, message, errorMessage;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(currentTransaction == null || sessionId == null)) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              setWaitingForDevice(isLedger);\n              _context2.next = 6;\n              return provider.signTransaction(currentTransaction.transaction);\n\n            case 6:\n              signedTx = _context2.sent;\n              newSignedTx = (_newSignedTx = {}, _newSignedTx[currentStep] = signedTx, _newSignedTx);\n              newSignedTransactions = signedTransactions ? _extends({}, signedTransactions, newSignedTx) : newSignedTx;\n              setSignedTransactions(newSignedTransactions);\n\n              if (!isLastTransaction) {\n                setCurrentStep(function (exising) {\n                  return exising + 1;\n                });\n                setWaitingForDevice(false);\n              } else if (newSignedTransactions) {\n                dispatch(moveTransactionsToSignedState({\n                  sessionId: sessionId,\n                  status: TransactionBatchStatusesEnum.signed,\n                  transactions: Object.values(newSignedTransactions).map(function (tx) {\n                    return parseTransactionAfterSigning(tx, isLedger);\n                  })\n                }));\n                reset();\n\n                if (callbackRoute != null && customTransactionInformation != null && customTransactionInformation.redirectAfterSign && !window.location.pathname.includes(callbackRoute)) {\n                  window.location.href = callbackRoute;\n                }\n              }\n\n              _context2.next = 20;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0, 'sign error');\n              message = _context2.t0.message;\n              errorMessage = isLedger ? getLedgerErrorCodes(_context2.t0).errorMessage : null;\n              reset();\n              dispatch(setSignTransactionsError(errorMessage != null ? errorMessage : message));\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 13]]);\n    }));\n    return _sign.apply(this, arguments);\n  }\n\n  function signTx() {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n\n      var signature = currentTransaction.transaction.getSignature();\n\n      if (signature) {\n        if (!isLastTransaction) {\n          setCurrentStep(function (exising) {\n            return exising + 1;\n          });\n        }\n      } else {\n        // currently code doesn't reach here because getSignature throws error if none is found\n        sign();\n      }\n    } catch (_unused) {\n      // the only way to check if tx has signature is with try catch\n      sign();\n    }\n  }\n\n  var isFirst = currentStep === 0;\n\n  function onAbort() {\n    if (isFirst) {\n      dispatch(clearAllTransactionsToSign());\n      onCancel();\n\n      if (callbackRoute != null && customTransactionInformation != null && customTransactionInformation.redirectAfterSign) {\n        window.location.href = callbackRoute;\n      }\n    } else {\n      setCurrentStep(function (existing) {\n        return existing - 1;\n      });\n    }\n  }\n\n  var continueWithoutSigning = (currentTransaction == null ? void 0 : (_currentTransaction$t = currentTransaction.transactionTokenInfo) == null ? void 0 : _currentTransaction$t.type) && (currentTransaction == null ? void 0 : (_currentTransaction$t2 = currentTransaction.transactionTokenInfo) == null ? void 0 : _currentTransaction$t2.multiTxData) && !(currentTransaction != null && currentTransaction.dataField.endsWith(currentTransaction == null ? void 0 : (_currentTransaction$t3 = currentTransaction.transactionTokenInfo) == null ? void 0 : _currentTransaction$t3.multiTxData));\n\n  function onSignTransaction() {\n    if (continueWithoutSigning) {\n      setCurrentStep(function (exising) {\n        return exising + 1;\n      });\n    } else {\n      signTx();\n    }\n  }\n\n  function onNext() {\n    setCurrentStep(function (current) {\n      var nextStep = current + 1;\n\n      if (nextStep > (allTransactions == null ? void 0 : allTransactions.length)) {\n        return current;\n      }\n\n      return nextStep;\n    });\n  }\n\n  function onPrev() {\n    setCurrentStep(function (current) {\n      var nextStep = current - 1;\n\n      if (nextStep < 0) {\n        return current;\n      }\n\n      return nextStep;\n    });\n  }\n\n  return {\n    allTransactions: allTransactions,\n    onSignTransaction: onSignTransaction,\n    onNext: onNext,\n    onPrev: onPrev,\n    waitingForDevice: waitingForDevice,\n    onAbort: onAbort,\n    isLastTransaction: isLastTransaction,\n    callbackRoute: callbackRoute,\n    currentStep: currentStep,\n    signedTransactions: signedTransactions,\n    currentTransaction: currentTransaction\n  };\n}\n\nfunction useSignTransactionsWithLedger(props) {\n  return useSignTransactionsWithDevice(props);\n}\n\nvar useGetSignTransactionsError = function useGetSignTransactionsError() {\n  return useSelector(signTransactionsErrorSelector);\n};\n\nfunction getPendingTransactions(transactions, timedOutHashes) {\n  var pendingTransactions = transactions.reduce(function (acc, _ref) {\n    var status = _ref.status,\n        hash = _ref.hash;\n\n    if (hash != null && !timedOutHashes.includes(hash) && getIsTransactionPending(status)) {\n      acc.push({\n        hash: hash,\n        previousStatus: status\n      });\n    }\n\n    return acc;\n  }, []);\n  return pendingTransactions;\n}\n\nfunction manageFailedTransactions(_ref) {\n  var results = _ref.results,\n      hash = _ref.hash,\n      sessionId = _ref.sessionId;\n  var resultWithError = results.find(function (scResult) {\n    return (scResult == null ? void 0 : scResult.returnMessage) !== '';\n  });\n  store.dispatch(updateSignedTransactionStatus({\n    transactionHash: hash,\n    sessionId: sessionId,\n    status: TransactionServerStatusesEnum.fail,\n    errorMessage: resultWithError == null ? void 0 : resultWithError.returnMessage\n  }));\n  store.dispatch(updateSignedTransactions({\n    sessionId: sessionId,\n    status: TransactionBatchStatusesEnum.fail,\n    errorMessage: resultWithError == null ? void 0 : resultWithError.returnMessage\n  }));\n}\n\nfunction manageTimedOutTransactions(sessionId) {\n  store.dispatch(updateSignedTransactions({\n    sessionId: sessionId,\n    status: TransactionBatchStatusesEnum.timedOut\n  }));\n}\n\nvar retries = {};\nvar timeouts = [];\n\nfunction manageTransaction(_ref) {\n  var serverTransaction = _ref.serverTransaction,\n      sessionId = _ref.sessionId,\n      customTransactionInformation = _ref.customTransactionInformation,\n      shouldRefreshBalance = _ref.shouldRefreshBalance;\n  var hash = serverTransaction.hash,\n      status = serverTransaction.status,\n      results = serverTransaction.results,\n      invalidTransaction = serverTransaction.invalidTransaction,\n      hasStatusChanged = serverTransaction.hasStatusChanged;\n\n  try {\n    if (timeouts.includes(hash)) {\n      return;\n    }\n\n    var retriesForThisHash = retries[hash];\n\n    if (retriesForThisHash > 30) {\n      // consider transaction as stuck after 1 minute\n      manageTimedOutTransactions(sessionId);\n      return;\n    }\n\n    if (invalidTransaction || getIsTransactionPending(status)) {\n      retries[hash] = retries[hash] ? retries[hash] + 1 : 1;\n      return;\n    }\n\n    if (hasStatusChanged) {\n      if (getIsTransactionSuccessful(status) && (customTransactionInformation == null ? void 0 : customTransactionInformation.completedTransactionsDelay) != null) {\n        //if the transaction is successful and the success status should be updated with a delay\n        //it will enter a timeout and then change the status\n        timeouts.push(hash);\n        setTimeout(function () {\n          return store.dispatch(updateSignedTransactionStatus({\n            sessionId: sessionId,\n            status: TransactionServerStatusesEnum.completed,\n            transactionHash: hash\n          }));\n        }, customTransactionInformation == null ? void 0 : customTransactionInformation.completedTransactionsDelay);\n      } else {\n        //otherwise, it will just trigger the change of status\n        store.dispatch(updateSignedTransactionStatus({\n          sessionId: sessionId,\n          status: status,\n          transactionHash: hash\n        }));\n      }\n    } // if set to true will trigger a balance refresh after each iteration\n\n\n    if (!shouldRefreshBalance) {\n      refreshAccount();\n    }\n\n    if (getIsTransactionFailed(status)) {\n      manageFailedTransactions({\n        sessionId: sessionId,\n        hash: hash,\n        results: results\n      });\n    }\n  } catch (error) {\n    console.error(error);\n    manageTimedOutTransactions(sessionId);\n  }\n}\n\nfunction checkBatch(_x) {\n  return _checkBatch.apply(this, arguments);\n}\n\nfunction _checkBatch() {\n  _checkBatch = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_ref2) {\n    var sessionId, _ref2$transactionBatc, transactions, customTransactionInformation, _ref2$getTransactions, getTransactionsByHash, shouldRefreshBalance, pendingTransactions, serverTransactions, _iterator, _step, serverTransaction;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sessionId = _ref2.sessionId, _ref2$transactionBatc = _ref2.transactionBatch, transactions = _ref2$transactionBatc.transactions, customTransactionInformation = _ref2$transactionBatc.customTransactionInformation, _ref2$getTransactions = _ref2.getTransactionsByHash, getTransactionsByHash = _ref2$getTransactions === void 0 ? getTransactionsByHashes : _ref2$getTransactions, shouldRefreshBalance = _ref2.shouldRefreshBalance;\n            _context.prev = 1;\n\n            if (!(transactions == null)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            pendingTransactions = getPendingTransactions(transactions, timeouts);\n            _context.next = 7;\n            return getTransactionsByHash(pendingTransactions);\n\n          case 7:\n            serverTransactions = _context.sent;\n\n            for (_iterator = _createForOfIteratorHelperLoose(serverTransactions); !(_step = _iterator()).done;) {\n              serverTransaction = _step.value;\n              manageTransaction({\n                serverTransaction: serverTransaction,\n                sessionId: sessionId,\n                customTransactionInformation: customTransactionInformation,\n                shouldRefreshBalance: shouldRefreshBalance\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _checkBatch.apply(this, arguments);\n}\n\nfunction useCheckTransactionStatus() {\n  var _useGetPendingTransac = useGetPendingTransactions(),\n      pendingTransactionsArray = _useGetPendingTransac.pendingTransactionsArray;\n\n  function checkTransactionStatus(_x) {\n    return _checkTransactionStatus.apply(this, arguments);\n  }\n\n  function _checkTransactionStatus() {\n    _checkTransactionStatus = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(props) {\n      var pendingBatches, _iterator, _step, _step$value, sessionId, transactionBatch;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pendingBatches = pendingTransactionsArray.filter(function (_ref) {\n                var sessionId = _ref[0],\n                    transactionBatch = _ref[1];\n                var isPending = sessionId != null && getIsTransactionPending(transactionBatch.status);\n                return isPending;\n              });\n\n              if (!(pendingBatches.length > 0)) {\n                _context.next = 9;\n                break;\n              }\n\n              _iterator = _createForOfIteratorHelperLoose(pendingBatches);\n\n            case 3:\n              if ((_step = _iterator()).done) {\n                _context.next = 9;\n                break;\n              }\n\n              _step$value = _step.value, sessionId = _step$value[0], transactionBatch = _step$value[1];\n              _context.next = 7;\n              return checkBatch(_extends({\n                sessionId: sessionId,\n                transactionBatch: transactionBatch\n              }, props));\n\n            case 7:\n              _context.next = 3;\n              break;\n\n            case 9:\n              if (props.shouldRefreshBalance) {\n                refreshAccount();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _checkTransactionStatus.apply(this, arguments);\n  }\n\n  return checkTransactionStatus;\n}\n\nvar getTimeout = function getTimeout(minutes) {\n  return 1000 * 60 * minutes;\n};\n\nvar debounce = 500;\n\nvar useIdleTimer = function useIdleTimer(_ref) {\n  var _ref$minutes = _ref.minutes,\n      minutes = _ref$minutes === void 0 ? 10 : _ref$minutes,\n      onLogout = _ref.onLogout;\n  var isLoggedIn = getIsLoggedIn();\n  var logout$1 = onLogout || logout;\n  var timeout = getTimeout(minutes);\n\n  var onIdle = function onIdle() {\n    if (isLoggedIn) {\n      logout$1();\n    }\n  };\n\n  useIdleTimer$1({\n    timeout: timeout,\n    onIdle: onIdle,\n    debounce: debounce\n  });\n};\n\nfunction getAccountShard() {\n  return _getAccountShard.apply(this, arguments);\n}\n\nfunction _getAccountShard() {\n  _getAccountShard = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var appState, apiAddress, address, shard, _yield$axios$get, account;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            appState = store.getState();\n            apiAddress = apiNetworkSelector(appState);\n            address = addressSelector(appState);\n            shard = shardSelector(appState);\n            _context.prev = 4;\n\n            if (!(shard == null && address)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 8;\n            return axios.get(apiAddress + \"/accounts/\" + address);\n\n          case 8:\n            _yield$axios$get = _context.sent;\n            account = _yield$axios$get.data;\n            store.dispatch(setAccountShard(account.shard));\n            return _context.abrupt(\"return\", account.shard);\n\n          case 14:\n            return _context.abrupt(\"return\", shard);\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](4);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 17]]);\n  }));\n  return _getAccountShard.apply(this, arguments);\n}\n\nfunction AppInitializer(_ref) {\n  var _ref$customNetworkCon = _ref.customNetworkConfig,\n      customNetworkConfig = _ref$customNetworkCon === void 0 ? {} : _ref$customNetworkCon,\n      children = _ref.children,\n      environment = _ref.environment;\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var account = useGetAccountInfo();\n  var address = account.address,\n      publicKey = account.publicKey;\n  var dispatch = useDispatch();\n\n  function initializeProviders(networkConfig) {\n    initializeProxyProvider(networkConfig);\n  }\n\n  function initializeNetwork() {\n    return _initializeNetwork.apply(this, arguments);\n  }\n\n  function _initializeNetwork() {\n    _initializeNetwork = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var fetchConfigFromServer, customNetworkApiAddress, fallbackConfig, localConfig, fallbackApiAddress, serverConfig, apiConfig;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fetchConfigFromServer = !(customNetworkConfig != null && customNetworkConfig.skipFetchFromServer);\n              customNetworkApiAddress = customNetworkConfig == null ? void 0 : customNetworkConfig.apiAddress;\n              fallbackConfig = fallbackNetworkConfigurations[environment] || {};\n              localConfig = _extends({}, fallbackConfig, customNetworkConfig);\n\n              if (!fetchConfigFromServer) {\n                _context.next = 14;\n                break;\n              }\n\n              fallbackApiAddress = fallbackConfig == null ? void 0 : fallbackConfig.apiAddress;\n              _context.next = 8;\n              return getServerConfiguration(customNetworkApiAddress || fallbackApiAddress);\n\n            case 8:\n              serverConfig = _context.sent;\n\n              if (!(serverConfig != null)) {\n                _context.next = 14;\n                break;\n              }\n\n              apiConfig = _extends({}, fallbackConfig, serverConfig, customNetworkConfig);\n              dispatch(initializeNetworkConfig(apiConfig));\n              initializeProviders(apiConfig);\n              return _context.abrupt(\"return\");\n\n            case 14:\n              dispatch(initializeNetworkConfig(localConfig));\n              initializeProviders(localConfig);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _initializeNetwork.apply(this, arguments);\n  }\n\n  function initializeApp() {\n    return _initializeApp.apply(this, arguments);\n  }\n\n  function _initializeApp() {\n    _initializeApp = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return initializeNetwork();\n\n            case 2:\n              setInitialized(true);\n              getAccountShard();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _initializeApp.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!address) {\n      return;\n    }\n\n    getAccountShard();\n  }, [address]);\n  useEffect(function () {\n    if (address) {\n      var pubKey = new Address$1(address).hex();\n\n      if (pubKey !== publicKey) {\n        logout();\n      }\n    }\n  }, [address, publicKey]);\n  useEffect(function () {\n    initializeApp();\n  }, [customNetworkConfig, environment]);\n  return initialized ? React__default.createElement(React__default.Fragment, null, children) : null;\n}\n\nvar TransactionSender = function TransactionSender(_ref) {\n  var _ref$sendSignedTransa = _ref.sendSignedTransactionsAsync,\n      sendSignedTransactionsAsync = _ref$sendSignedTransa === void 0 ? sendSignedTransactions : _ref$sendSignedTransa;\n  var account = useSelector(accountSelector);\n  var signedTransactions = useSelector(signedTransactionsSelector);\n  var sendingRef = useRef(false);\n  var dispatch = useDispatch();\n\n  var clearSignInfo = function clearSignInfo() {\n    dispatch(clearAllTransactionsToSign());\n    sendingRef.current = false;\n  };\n\n  function handleSendTransactions() {\n    return _handleSendTransactions.apply(this, arguments);\n  }\n\n  function _handleSendTransactions() {\n    _handleSendTransactions = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2() {\n      var sessionIds, _i, _sessionIds, _signedTransactions$s, _signedTransactions$s2, sessionId, skipSending, _ret;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sessionIds = Object.keys(signedTransactions);\n              _i = 0, _sessionIds = sessionIds;\n\n            case 2:\n              if (!(_i < _sessionIds.length)) {\n                _context2.next = 25;\n                break;\n              }\n\n              sessionId = _sessionIds[_i];\n              skipSending = signedTransactions == null ? void 0 : (_signedTransactions$s = signedTransactions[sessionId]) == null ? void 0 : (_signedTransactions$s2 = _signedTransactions$s.customTransactionInformation) == null ? void 0 : _signedTransactions$s2.signWithoutSending;\n\n              if (!(!sessionId || skipSending)) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 22);\n\n            case 7:\n              _context2.prev = 7;\n              return _context2.delegateYield( /*#__PURE__*/runtime_1.mark(function _callee() {\n                var isSessionIdSigned, shouldSendCurrentSession, transactions, transactionsToSend, responseHashes, newStatus, newTransactions, submittedModalPayload;\n                return runtime_1.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        isSessionIdSigned = signedTransactions[sessionId].status === TransactionBatchStatusesEnum.signed;\n                        shouldSendCurrentSession = isSessionIdSigned && !sendingRef.current;\n\n                        if (shouldSendCurrentSession) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", \"continue\");\n\n                      case 4:\n                        transactions = signedTransactions[sessionId].transactions;\n\n                        if (transactions) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", \"continue\");\n\n                      case 7:\n                        sendingRef.current = true;\n                        transactionsToSend = transactions.map(function (tx) {\n                          var address = new Address(tx.sender);\n                          var transactionObject = newTransaction(tx);\n                          var signature = new Signature(tx.signature);\n                          transactionObject.applySignature(signature, address);\n                          return transactionObject;\n                        });\n                        _context.next = 11;\n                        return sendSignedTransactionsAsync(transactionsToSend);\n\n                      case 11:\n                        responseHashes = _context.sent;\n                        newStatus = TransactionServerStatusesEnum.pending;\n                        newTransactions = transactions.map(function (transaction) {\n                          if (responseHashes.includes(transaction.hash)) {\n                            return _extends({}, transaction, {\n                              status: newStatus\n                            });\n                          }\n\n                          return transaction;\n                        });\n                        submittedModalPayload = {\n                          sessionId: sessionId,\n                          submittedMessage: 'submitted'\n                        };\n                        dispatch(setTxSubmittedModal(submittedModalPayload));\n                        dispatch(updateSignedTransactions({\n                          sessionId: sessionId,\n                          status: TransactionBatchStatusesEnum.sent,\n                          transactions: newTransactions\n                        }));\n                        clearSignInfo();\n                        setNonce(account.nonce + transactions.length);\n                        history.pushState({}, document.title, '?');\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })(), \"t0\", 9);\n\n            case 9:\n              _ret = _context2.t0;\n\n              if (!(_ret === \"continue\")) {\n                _context2.next = 12;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 22);\n\n            case 12:\n              _context2.next = 19;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t1 = _context2[\"catch\"](7);\n              console.error('Unable to send transactions', _context2.t1);\n              dispatch(updateSignedTransactions({\n                sessionId: sessionId,\n                status: TransactionBatchStatusesEnum.fail,\n                errorMessage: _context2.t1.message\n              }));\n              clearSignInfo();\n\n            case 19:\n              _context2.prev = 19;\n              sendingRef.current = false;\n              return _context2.finish(19);\n\n            case 22:\n              _i++;\n              _context2.next = 2;\n              break;\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[7, 14, 19, 22]]);\n    }));\n    return _handleSendTransactions.apply(this, arguments);\n  }\n\n  React__default.useEffect(function () {\n    handleSendTransactions();\n  }, [signedTransactions, account]);\n  return null;\n};\n\nfunction useTransactionsTracker(props) {\n  var _props$getTransaction;\n\n  var _useGetPendingTransac = useGetPendingTransactions(),\n      pendingTransactionsArray = _useGetPendingTransac.pendingTransactionsArray;\n\n  var getTransactionsByHash = (_props$getTransaction = props == null ? void 0 : props.getTransactionsByHash) != null ? _props$getTransaction : getTransactionsByHashes;\n  var checkTransactionStatus = useCheckTransactionStatus();\n  var intervalRef = useRef();\n  var pendingBatches = pendingTransactionsArray.filter(function (_ref) {\n    var sessionId = _ref[0],\n        transactionBatch = _ref[1];\n    var isPending = sessionId != null && getIsTransactionPending(transactionBatch.status);\n    return isPending;\n  });\n  useEffect(function () {\n    if (pendingBatches.length > 0) {\n      intervalRef.current = setInterval(function () {\n        checkTransactionStatus({\n          getTransactionsByHash: getTransactionsByHash\n        });\n      }, 2000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return function () {\n      clearInterval(intervalRef.current);\n    };\n  }, [pendingBatches]);\n}\n\nfunction TransactionsTracker(_ref) {\n  var getTransactionsByHash = _ref.getTransactionsByHash;\n  useTransactionsTracker({\n    getTransactionsByHash: getTransactionsByHash\n  });\n  return null;\n}\n\nfunction CustomComponents(_ref) {\n  var _transactionSender$co, _transactionTracker$c;\n\n  var customComponents = _ref.customComponents;\n  var transactionSender = customComponents == null ? void 0 : customComponents.transactionSender;\n  var transactionTracker = customComponents == null ? void 0 : customComponents.transactionTracker;\n  var TxSender = (_transactionSender$co = transactionSender == null ? void 0 : transactionSender.component) != null ? _transactionSender$co : TransactionSender;\n  var TxTracker = (_transactionTracker$c = transactionTracker == null ? void 0 : transactionTracker.component) != null ? _transactionTracker$c : TransactionsTracker;\n  return React__default.createElement(React__default.Fragment, null, React__default.createElement(TxSender, Object.assign({}, transactionSender == null ? void 0 : transactionSender.props)), React__default.createElement(TxTracker, Object.assign({}, transactionTracker == null ? void 0 : transactionTracker.props)));\n}\n\nvar DappProvider = function DappProvider(_ref) {\n  var children = _ref.children,\n      _ref$customNetworkCon = _ref.customNetworkConfig,\n      customNetworkConfig = _ref$customNetworkCon === void 0 ? {} : _ref$customNetworkCon,\n      externalProvider = _ref.externalProvider,\n      environment = _ref.environment,\n      customComponents = _ref.customComponents;\n\n  if (!environment) {\n    //throw if the user tries to initialize the app without a valid environment\n    throw new Error('missing environment flag');\n  }\n\n  if (externalProvider != null) {\n    setExternalProvider(externalProvider);\n  }\n\n  return React__default.createElement(Provider, {\n    context: DappCoreContext,\n    store: store\n  }, React__default.createElement(PersistGate, {\n    persistor: persistor,\n    loading: null\n  }, React__default.createElement(AppInitializer, {\n    environment: environment,\n    customNetworkConfig: customNetworkConfig\n  }, React__default.createElement(ProviderInitializer, null), React__default.createElement(CustomComponents, {\n    customComponents: customComponents\n  }), children)));\n};\n\nvar AuthenticatedRoutesWrapper = function AuthenticatedRoutesWrapper(_ref) {\n  var children = _ref.children,\n      routes = _ref.routes,\n      unlockRoute = _ref.unlockRoute,\n      onRedirect = _ref.onRedirect;\n  var isLoggedIn = useSelector(isLoggedInSelector);\n  var isAccountLoading = useSelector(isAccountLoadingSelector);\n  var walletLogin = useSelector(walletLoginSelector);\n  var pathname = window.location.pathname;\n  var authenticatedRoutesRef = useRef(routes.filter(function (route) {\n    return Boolean(route.authenticatedRoute);\n  }));\n  var isOnAuthenticatedRoute = authenticatedRoutesRef.current.some(function (_ref2) {\n    var path = _ref2.path;\n    return pathname === path;\n  });\n  var shouldRedirect = isOnAuthenticatedRoute && !isLoggedIn && walletLogin == null;\n\n  if (isAccountLoading || walletLogin) {\n    return null;\n  }\n\n  if (shouldRedirect) {\n    if (onRedirect) {\n      onRedirect(unlockRoute);\n    } else {\n      window.location.href = unlockRoute;\n    }\n\n    return null;\n  }\n\n  return React__default.createElement(React__default.Fragment, null, children);\n};\n\nvar TransactionParameter = function TransactionParameter(sender, receiver, functionName, inputParameters, outputParameters) {\n  this.sender = sender;\n  this.receiver = receiver;\n  this.functionName = functionName;\n  this.inputParameters = inputParameters;\n  this.outputParameters = outputParameters;\n};\n\nvar index$4 = {\n  __proto__: null,\n  TransactionParameter: TransactionParameter,\n  newTransaction: newTransaction\n};\n\nvar withClassNameWrapper = function withClassNameWrapper(Component) {\n  return function (_ref) {\n    var props = _extends({}, _ref);\n\n    return React__default.createElement(\"span\", {\n      className: wrapperClassName\n    }, React__default.createElement(Component, Object.assign({}, props)));\n  };\n};\n\nvar denominateInvalid = function denominateInvalid(props) {\n  return React__default.createElement(\"span\", {\n    \"data-testid\": props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n  }, React__default.createElement(\"span\", {\n    className: 'int-amount'\n  }, \"...\"));\n};\n\nvar denominateValid = function denominateValid(props, erdLabel) {\n  var value = props.value,\n      _props$showLastNonZer = props.showLastNonZeroDecimal,\n      showLastNonZeroDecimal = _props$showLastNonZer === void 0 ? false : _props$showLastNonZer,\n      _props$showLabel = props.showLabel,\n      showLabel = _props$showLabel === void 0 ? true : _props$showLabel;\n  var decimals$1 = props.decimals !== undefined ? props.decimals : decimals;\n  var denomination$1 = props.denomination !== undefined ? props.denomination : denomination;\n  var denominatedValue = denominate({\n    input: value,\n    denomination: denomination$1,\n    decimals: decimals$1,\n    showLastNonZeroDecimal: showLastNonZeroDecimal,\n    addCommas: true\n  });\n  var valueParts = denominatedValue.split('.');\n  var hasNoDecimals = valueParts.length === 1;\n  var isNotZero = denominatedValue !== '0';\n\n  if (decimals$1 > 0 && hasNoDecimals && isNotZero) {\n    var zeros = '';\n\n    for (var i = 1; i <= decimals$1; i++) {\n      zeros = zeros + '0';\n    }\n\n    valueParts.push(zeros);\n  }\n\n  return React__default.createElement(\"span\", {\n    \"data-testid\": props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n  }, React__default.createElement(\"span\", {\n    className: 'int-amount'\n  }, valueParts[0]), valueParts.length > 1 && React__default.createElement(\"span\", {\n    className: 'decimals'\n  }, \".\", valueParts[1]), showLabel && React__default.createElement(\"span\", {\n    className: \"symbol \" + (props.token ? 'text-muted' : '')\n  }, \"\\xA0\", props.token ? props.token : erdLabel));\n};\n\nvar Denominate = function Denominate(props) {\n  var value = props.value;\n  return !stringIsInteger(value) ? denominateInvalid(props) : denominateValid(props, props.egldLabel || '');\n};\n\nvar DenominateWrapper = function DenominateWrapper(props) {\n  var egldLabel = props.egldLabel || getEgldLabel();\n\n  var denominateProps = _extends({}, props, {\n    egldLabel: egldLabel\n  });\n\n  return React__default.createElement(Denominate, Object.assign({}, denominateProps));\n};\n\nvar Denominate$1 = /*#__PURE__*/withClassNameWrapper(DenominateWrapper);\nvar fontawesomeFreeSolidIcons = {};\n\ntry {\n  fontawesomeFreeSolidIcons = /*#__PURE__*/require('@fortawesome/free-solid-svg-icons');\n} catch (err) {}\n\nvar icons = fontawesomeFreeSolidIcons;\nvar ReactFontawesome = {};\n\ntry {\n  ReactFontawesome = /*#__PURE__*/require('@fortawesome/react-fontawesome');\n} catch (err) {}\n\nvar ReactFontawesome$1 = ReactFontawesome;\n\nvar ExplorerLink = function ExplorerLink(_ref) {\n  var page = _ref.page,\n      text = _ref.text,\n      className = _ref.className;\n\n  var _useGetNetworkConfig = useGetNetworkConfig(),\n      explorerAddress = _useGetNetworkConfig.network.explorerAddress;\n\n  return React__default.createElement(\"a\", Object.assign({\n    href: \"\" + explorerAddress + page\n  }, {\n    target: '_blank'\n  }, {\n    className: \"link-style \" + className\n  }), text ? React__default.createElement(React__default.Fragment, null, text) : React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icons.faSearch,\n    className: 'text-secondary'\n  }));\n};\n\nvar ExplorerLink$1 = /*#__PURE__*/withClassNameWrapper(ExplorerLink);\n\nvar ExtensionLoginButton = function ExtensionLoginButton(_ref) {\n  var token = _ref.token,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'extension-login' : _ref$className,\n      children = _ref.children,\n      callbackRoute = _ref.callbackRoute,\n      buttonClassName = _ref.buttonClassName,\n      _ref$loginButtonText = _ref.loginButtonText,\n      loginButtonText = _ref$loginButtonText === void 0 ? 'Maiar DeFi Wallet' : _ref$loginButtonText,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa;\n\n  var _useExtensionLogin = useExtensionLogin({\n    callbackRoute: callbackRoute,\n    token: token,\n    redirectAfterLogin: redirectAfterLogin\n  }),\n      onInitiateLogin = _useExtensionLogin[0];\n\n  var isFirefox = navigator.userAgent.indexOf('Firefox') != -1;\n  var classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: \"btn btn-primary px-sm-4 m-1 mx-sm-3 \" + (buttonClassName != null ? buttonClassName : ''),\n    loginText: 'text-left',\n    noExtensionButtonWrapper: 'btn btn-unlock d-inline-block',\n    noExtensionButtonContent: 'd-flex justify-content-between align-items-center',\n    noExtensionButtonTitle: 'title',\n    noExtensionButtonIcon: ''\n  });\n\n  var handleLogin = function handleLogin() {\n    onInitiateLogin();\n  };\n\n  return !window.elrondWallet ? React__default.createElement(\"a\", {\n    rel: 'noreferrer',\n    href: isFirefox ? 'https://addons.mozilla.org/en-US/firefox/addon/maiar-defi-wallet/' : 'https://chrome.google.com/webstore/detail/dngmlblcodfobpdpecaadgfbcggfjfnm?authuser=0&hl=en',\n    target: '_blank',\n    className: classes.noExtensionButtonWrapper\n  }, children || React__default.createElement(\"div\", {\n    className: classes.noExtensionButtonContent\n  }, React__default.createElement(\"div\", {\n    className: classes.noExtensionButtonTitle\n  }, \"Maiar DeFi Wallet\"), React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    className: classes.noExtensionButtonIcon,\n    icon: icons.faArrowRight\n  }))) : React__default.createElement(\"button\", {\n    onClick: handleLogin,\n    className: classes.wrapper\n  }, children || React__default.createElement(\"span\", {\n    className: classes.loginText\n  }, loginButtonText));\n};\n\nvar ExtensionLoginButton$1 = /*#__PURE__*/withClassNameWrapper(ExtensionLoginButton);\n\nvar ModalContainer = function ModalContainer(_ref) {\n  var children = _ref.children,\n      noSpacer = _ref.noSpacer,\n      className = _ref.className,\n      title = _ref.title,\n      onClose = _ref.onClose;\n  return React__default.createElement(RB.Modal, {\n    show: true,\n    backdrop: 'static',\n    onHide: onClose,\n    className: \"modal-container \" + (className ? className : '') + \" \" + wrapperClassName,\n    animation: false,\n    centered: true\n  }, React__default.createElement(\"div\", {\n    className: 'modal-card card w-100'\n  }, React__default.createElement(\"div\", {\n    className: 'card-title h5 mb-0'\n  }, React__default.createElement(\"div\", {\n    className: 'd-flex justify-content-between align-items-center pt-spacer px-spacer mb-0'\n  }, React__default.createElement(\"div\", {\n    className: 'px-3'\n  }, title), React__default.createElement(\"button\", {\n    type: 'button',\n    className: 'btn btn-light px-3 py-2',\n    onClick: onClose\n  }, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    size: 'lg',\n    icon: icons.faTimes\n  })))), React__default.createElement(\"div\", {\n    className: \"modal-card-body text-center \" + (noSpacer ? 'p-0' : 'p-spacer')\n  }, children)));\n};\n\nvar PageState = function PageState(_ref) {\n  var _classNames;\n\n  var icon = _ref.icon,\n      title = _ref.title,\n      action = _ref.action,\n      iconClass = _ref.iconClass,\n      dataTestId = _ref.dataTestId,\n      description = _ref.description,\n      iconBgClass = _ref.iconBgClass,\n      _ref$iconSize = _ref.iconSize,\n      iconSize = _ref$iconSize === void 0 ? '5x' : _ref$iconSize,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'page-state' : _ref$className,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'state m-auto p-4 text-center',\n    iconContainer: classNames('icon-state mx-auto', (_classNames = {}, _classNames[\"\" + iconBgClass] = Boolean(iconBgClass), _classNames)),\n    iconClass: classNames(iconClass != null && iconClass),\n    title: 'h4 my-4',\n    description: 'mb-3'\n  });\n  return React__default.createElement(\"div\", {\n    className: generatedClasses.wrapper,\n    \"data-testid\": dataTestId\n  }, icon && React__default.createElement(\"span\", {\n    className: generatedClasses.iconContainer\n  }, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icon,\n    className: generatedClasses.iconClass,\n    size: iconSize\n  })), title && React__default.createElement(\"p\", {\n    className: generatedClasses.title\n  }, title), description && React__default.createElement(\"div\", {\n    className: generatedClasses.description\n  }, description), action && React__default.createElement(React__default.Fragment, null, action));\n};\n\nvar PageState$1 = /*#__PURE__*/withClassNameWrapper(PageState);\n\nvar trimHash = function trimHash(hash, keep) {\n  if (keep === void 0) {\n    keep = 10;\n  }\n\n  var start = hash.substring(0, keep);\n  var end = hash.substring(hash.length - keep);\n  return start + \"...\" + end;\n};\n\nvar noBalance = '...';\n\nvar AddressRow = function AddressRow(_ref) {\n  var address = _ref.address,\n      index = _ref.index,\n      selectedAddress = _ref.selectedAddress,\n      onSelectAddress = _ref.onSelectAddress;\n\n  var _React$useState = React__default.useState(noBalance),\n      balance = _React$useState[0],\n      setBalance = _React$useState[1];\n\n  var handleChange = function handleChange(e) {\n    var checked = e.target.checked;\n\n    if (checked) {\n      onSelectAddress({\n        address: address,\n        index: index\n      });\n    }\n  };\n\n  var fetchBalance = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var _balance;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getAccountBalance(address);\n\n            case 3:\n              _balance = _context.sent;\n              setBalance(_balance);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('error fetching balance', _context.t0, balance);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fetchBalance() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  React__default.useEffect(function () {\n    fetchBalance();\n  }, []);\n  return React__default.createElement(\"tr\", null, React__default.createElement(\"td\", {\n    className: 'text-left'\n  }, React__default.createElement(\"div\", {\n    className: 'd-flex align-items-start text-left form-check'\n  }, React__default.createElement(\"input\", {\n    type: 'radio',\n    id: \"check_\" + index,\n    \"data-testid\": \"check_\" + index,\n    onChange: handleChange,\n    role: 'button',\n    checked: selectedAddress === address,\n    className: 'form-check-input mr-1'\n  }), React__default.createElement(\"label\", {\n    htmlFor: \"check_\" + index,\n    role: 'button',\n    \"data-testid\": \"label_\" + index,\n    className: 'form-check-label text-nowrap trim-size-xl m-0'\n  }, React__default.createElement(\"div\", {\n    className: 'd-flex align-items-center text-nowrap trim'\n  }, React__default.createElement(\"span\", null, trimHash(address)))))), React__default.createElement(\"td\", {\n    className: 'text-left'\n  }, React__default.createElement(Denominate$1, {\n    value: balance\n  })), React__default.createElement(\"td\", {\n    className: 'text-left'\n  }, index));\n};\n\nvar ledgerWaitingText = 'Waiting for device';\nvar addressesPerPage = 10;\n\nvar AddressTable = function AddressTable(_ref) {\n  var loading = _ref.loading,\n      accounts = _ref.accounts,\n      startIndex = _ref.startIndex,\n      selectedAddress = _ref.selectedAddress,\n      onGoToPrevPage = _ref.onGoToPrevPage,\n      onGoToNextPage = _ref.onGoToNextPage,\n      onConfirmSelectedAddress = _ref.onConfirmSelectedAddress,\n      onSelectAddress = _ref.onSelectAddress,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'ledger-address-table' : _ref$className;\n  var classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'card my-4 text-center border-0',\n    cardBody: 'card-body p-4 mx-lg-4',\n    tableWrapper: 'table-responsive',\n    tableContent: 'table m-0 border-bottom',\n    tableHeader: 'py-2 text-semibold border-bottom',\n    tableHeaderText: 'text-left border-0',\n    buttonsWrapper: 'd-flex justify-content-center pager mt-2',\n    arrowButton: 'btn btn-link mx-2',\n    confirmButton: 'btn btn-primary px-4 mt-4'\n  });\n\n  switch (true) {\n    case loading:\n      return React__default.createElement(PageState$1, {\n        className: className,\n        icon: icons.faCircleNotch,\n        iconClass: 'fa-spin text-primary',\n        title: ledgerWaitingText\n      });\n\n    default:\n      return React__default.createElement(React__default.Fragment, null, React__default.createElement(\"div\", {\n        className: 'm-auto'\n      }, React__default.createElement(\"div\", {\n        className: classes.wrapper\n      }, React__default.createElement(\"div\", {\n        className: classes.cardBody\n      }, React__default.createElement(\"div\", {\n        className: classes.tableWrapper,\n        \"data-testid\": 'ledgerAddresses'\n      }, React__default.createElement(\"table\", {\n        className: classes.tableContent\n      }, React__default.createElement(\"thead\", {\n        className: classes.tableHeader\n      }, React__default.createElement(\"tr\", null, React__default.createElement(\"th\", {\n        className: classes.tableHeaderText\n      }, \"Address\"), React__default.createElement(\"th\", {\n        className: classes.tableHeaderText\n      }, \"Balance\"), React__default.createElement(\"th\", {\n        className: classes.tableHeaderText\n      }, \"#\"))), React__default.createElement(\"tbody\", {\n        \"data-testid\": 'addressesTable'\n      }, accounts.map(function (address, index) {\n        var key = index + startIndex * addressesPerPage;\n        return React__default.createElement(AddressRow, {\n          key: key,\n          address: address,\n          index: key,\n          selectedAddress: selectedAddress,\n          onSelectAddress: onSelectAddress\n        });\n      })))), React__default.createElement(\"div\", {\n        className: classes.buttonsWrapper\n      }, React__default.createElement(\"button\", {\n        type: 'button',\n        className: classes.arrowButton,\n        onClick: onGoToPrevPage,\n        \"data-testid\": 'prevBtn',\n        disabled: startIndex === 0\n      }, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n        size: 'sm',\n        icon: icons.faChevronLeft\n      }), ' ', \"Prev\"), React__default.createElement(\"button\", {\n        type: 'button',\n        className: classes.arrowButton,\n        onClick: onGoToNextPage,\n        \"data-testid\": 'nextBtn'\n      }, \"Next\", ' ', React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n        size: 'sm',\n        icon: icons.faChevronRight\n      }))), React__default.createElement(\"button\", {\n        className: classes.confirmButton,\n        disabled: selectedAddress === '',\n        onClick: onConfirmSelectedAddress,\n        \"data-testid\": 'confirmBtn'\n      }, \"Confirm\")))));\n  }\n};\n\nvar ConfirmAddress = function ConfirmAddress(_ref) {\n  var token = _ref.token,\n      noBorder = _ref.noBorder;\n\n  var _useGetAccountInfo = useGetAccountInfo(),\n      ledgerAccount = _useGetAccountInfo.ledgerAccount;\n\n  return React__default.createElement(\"div\", {\n    className: 'm-auto'\n  }, React__default.createElement(\"div\", {\n    className: \"card my-4 text-center \" + (noBorder ? 'border-0' : '')\n  }, React__default.createElement(\"div\", {\n    className: 'card-body p-4 mx-lg-4'\n  }, React__default.createElement(\"h4\", {\n    className: 'mb-4'\n  }, \"Confirm Ledger Address\"), React__default.createElement(\"p\", null, \"For security, please confirm that your address: \"), React__default.createElement(\"p\", {\n    className: 'lead border rounded p-2'\n  }, ledgerAccount ? ledgerAccount.address : ''), token && React__default.createElement(React__default.Fragment, null, React__default.createElement(\"p\", null, \"and Auth Token\"), React__default.createElement(\"p\", {\n    className: 'lead border rounded p-2'\n  }, token + \"{}\")), React__default.createElement(\"p\", {\n    className: 'm-0'\n  }, token ? 'are the one shown on your Ledger device screen now.' : 'is the one shown on your Ledger device screen now.'), React__default.createElement(\"p\", null, \"Select Approve on your device to confirm.\"), React__default.createElement(\"p\", null, \"Or, if it does not match, close this page and\", ' ', React__default.createElement(\"a\", Object.assign({\n    href: 'https://help.elrond.com/en/'\n  }, {\n    target: '_blank'\n  }), \"contact support\"), \".\"))));\n};\n\nvar _defs, _g;\n\nfunction _extends$1() {\n  _extends$1 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends$1.apply(this, arguments);\n}\n\nvar SvgLedgerNano = function SvgLedgerNano(props) {\n  return /*#__PURE__*/createElement(\"svg\", _extends$1({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 110,\n    height: 55,\n    viewBox: \"0 0 260 129\"\n  }, props), _defs || (_defs = /*#__PURE__*/createElement(\"defs\", null, /*#__PURE__*/createElement(\"linearGradient\", {\n    id: \"ledger-nano_svg__a\",\n    x1: \"50%\",\n    x2: \"50%\",\n    y1: \"0%\",\n    y2: \"100%\"\n  }, /*#__PURE__*/createElement(\"stop\", {\n    offset: \"0%\"\n  }), /*#__PURE__*/createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#FFF\"\n  })), /*#__PURE__*/createElement(\"path\", {\n    id: \"ledger-nano_svg__b\",\n    d: \"M91 0h34a4 4 0 0 1 4 4v108.144c0 11.519-9.337 20.856-20.856 20.856h-.288C96.337 133 87 123.663 87 112.144V4a4 4 0 0 1 4-4z\"\n  }))), _g || (_g = /*#__PURE__*/createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/createElement(\"path\", {\n    className: \"ledger-nano_svg__ledger-stroke\",\n    stroke: \"#1D2027\",\n    strokeWidth: 2,\n    d: \"M127.856 31.44a1 1 0 0 1-1 1H100.63a5 5 0 0 1-5-5v-8.486a5 5 0 0 1 5-5h26.225a1 1 0 0 1 1 1v16.485z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    className: \"ledger-nano_svg__ledger-stroke\",\n    stroke: \"#142533\",\n    strokeWidth: 2,\n    d: \"M95.247 26.231H84.318v-6.435h10.93v6.435z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    className: \"ledger-nano_svg__ledger-stroke\",\n    stroke: \"#1D2027\",\n    strokeWidth: 2,\n    d: \"M127.923 28.726V17.471l6.977.083a1 1 0 0 1 .988 1v9.266a1 1 0 0 1-1.012.988l-6.953-.083z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    fill: \"url(#ledger-nano_svg__a)\",\n    d: \"M6.836 53.925h1.616v82.65H6.836v-82.65zm5.657 0h1.616v82.65h-1.616v-82.65z\",\n    transform: \"matrix(0 -1 -1 0 137.5 33.44)\"\n  }), /*#__PURE__*/createElement(\"g\", {\n    transform: \"rotate(-90 128.59 1.975)\"\n  }, /*#__PURE__*/createElement(\"rect\", {\n    className: \"ledger-nano_svg__ledger-fill\",\n    width: 4.492,\n    height: 17.12,\n    x: 125.336,\n    y: 15.505,\n    fill: \"#142533\",\n    rx: 2\n  }), /*#__PURE__*/createElement(\"rect\", {\n    className: \"ledger-nano_svg__ledger-fill\",\n    width: 4.492,\n    height: 17.12,\n    x: 125.336,\n    y: 70.094,\n    fill: \"#142533\",\n    rx: 2\n  }), /*#__PURE__*/createElement(\"use\", {\n    className: \"ledger-nano_svg__ledger-fill-inner-bg\",\n    fill: \"#FFF\",\n    xlinkHref: \"#ledger-nano_svg__b\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    className: \"ledger-nano_svg__ledger-stroke\",\n    fill: \"#6490F1\",\n    fillOpacity: 0.15,\n    stroke: \"#142533\",\n    strokeLinejoin: \"square\",\n    strokeWidth: 2,\n    d: \"M91 1a3 3 0 0 0-3 3v108.144C88 123.11 96.89 132 107.856 132h.288C119.11 132 128 123.11 128 112.144V4a3 3 0 0 0-3-3H91z\"\n  }), /*#__PURE__*/createElement(\"rect\", {\n    className: \"ledger-nano_svg__ledger-fill-outer-bg\",\n    width: 21,\n    height: 62,\n    x: 97.5,\n    y: 21.5,\n    fill: \"#FFF\",\n    stroke: \"#6490F1\",\n    rx: 1.6\n  }), /*#__PURE__*/createElement(\"path\", {\n    fill: \"#6490F1\",\n    d: \"M105.5 35h5a.5.5 0 0 1 .5.5v34a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-34a.5.5 0 0 1 .5-.5zm1.238 3.042.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908.774.512v.013l-.774.505.341.466.722-.578h.013l.243.9.551-.178-.328-.88.932.053v-.597l-.932.046.328-.872-.551-.17-.243.891h-.013l-.722-.584-.34.473zm0 3.907.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.178-.328-.879.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908.774.511v.014l-.774.505.341.466.722-.578h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.872-.551-.171-.243.892h-.013l-.722-.584-.34.473zm0 3.907.774.512v.013l-.774.505.341.466.722-.577h.013l.243.898.551-.177-.328-.879.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908.774.511v.013l-.774.506.341.465.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.473zm0 3.907.774.512v.013l-.774.505.341.466.722-.578h.013l.243.9.551-.178-.328-.879.932.052v-.597l-.932.046.328-.872-.551-.17-.243.891h-.013l-.722-.583-.34.472zm0 3.907.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    className: \"ledger-nano_svg__ledger-stroke ledger-nano_svg__ledger-fill-outer-bg\",\n    fill: \"#FFF\",\n    stroke: \"#142533\",\n    strokeWidth: 2,\n    d: \"M123.166 125.105c7.049-8.4 5.953-20.925-2.447-27.974l-90.824-76.21a3 3 0 0 0-4.227.37L4 47.115a3 3 0 0 0 .37 4.227l90.824 76.21c8.4 7.049 20.924 5.953 27.973-2.447z\"\n  }), /*#__PURE__*/createElement(\"ellipse\", {\n    cx: 108.016,\n    cy: 111.123,\n    stroke: \"#6490F1\",\n    rx: 10.57,\n    ry: 10.644\n  })))));\n};\n\nvar LedgerConnect = function LedgerConnect(_ref) {\n  var onClick = _ref.onClick,\n      error = _ref.error,\n      connectPageContent = _ref.connectPageContent;\n  return React__default.createElement(\"div\", {\n    className: 'm-auto login-container'\n  }, React__default.createElement(\"div\", {\n    className: 'card my-4 text-center border-0'\n  }, React__default.createElement(\"div\", {\n    className: 'card-body p-4 mx-lg-4'\n  }, connectPageContent ? React__default.createElement(React__default.Fragment, null, connectPageContent) : React__default.createElement(React__default.Fragment, null, React__default.createElement(SvgLedgerNano, {\n    className: 'mb-4'\n  }), React__default.createElement(\"h4\", {\n    className: 'mb-4'\n  }, \"Connect Ledger\"), React__default.createElement(\"p\", {\n    className: 'lead mb-4'\n  }, \"Unlock your device & open the Elrond App.\")), React__default.createElement(\"div\", null, error && React__default.createElement(\"p\", {\n    className: 'text-danger d-flex justify-content-center align-items-center'\n  }, error), React__default.createElement(\"button\", {\n    className: 'btn btn-primary px-4',\n    onClick: onClick,\n    \"data-testid\": 'connectBtn'\n  }, \"Connect Ledger\")))));\n};\n\nvar ledgerWaitingText$1 = 'Waiting for device';\n\nfunction LedgerLoginContainer(_ref) {\n  var callbackRoute = _ref.callbackRoute,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'login-modal-content' : _ref$className,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$wrapContentInsid = _ref.wrapContentInsideModal,\n      wrapContentInsideModal = _ref$wrapContentInsid === void 0 ? true : _ref$wrapContentInsid,\n      redirectAfterLogin = _ref.redirectAfterLogin,\n      onClose = _ref.onClose,\n      token = _ref.token;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    spinner: 'fa-spin text-primary'\n  });\n\n  var _useGetAccountInfo = useGetAccountInfo(),\n      ledgerAccount = _useGetAccountInfo.ledgerAccount;\n\n  var _useLedgerLogin = useLedgerLogin({\n    callbackRoute: callbackRoute,\n    token: token,\n    redirectAfterLogin: redirectAfterLogin\n  }),\n      onStartLogin = _useLedgerLogin[0],\n      _useLedgerLogin$ = _useLedgerLogin[1],\n      error = _useLedgerLogin$.error,\n      isLoading = _useLedgerLogin$.isLoading,\n      _useLedgerLogin$2 = _useLedgerLogin[2],\n      showAddressList = _useLedgerLogin$2.showAddressList,\n      accounts = _useLedgerLogin$2.accounts,\n      onGoToPrevPage = _useLedgerLogin$2.onGoToPrevPage,\n      onGoToNextPage = _useLedgerLogin$2.onGoToNextPage,\n      onSelectAddress = _useLedgerLogin$2.onSelectAddress,\n      onConfirmSelectedAddress = _useLedgerLogin$2.onConfirmSelectedAddress,\n      startIndex = _useLedgerLogin$2.startIndex,\n      selectedAddress = _useLedgerLogin$2.selectedAddress;\n\n  function getContent() {\n    if (isLoading) {\n      return React__default.createElement(PageState$1, {\n        icon: icons.faCircleNotch,\n        iconClass: generatedClasses.spinner,\n        title: ledgerWaitingText$1\n      });\n    }\n\n    if (ledgerAccount != null && !error) {\n      return React__default.createElement(ConfirmAddress, {\n        token: token\n      });\n    }\n\n    if (showAddressList && !error) {\n      return React__default.createElement(AddressTable, {\n        accounts: accounts,\n        loading: isLoading,\n        className: className,\n        shouldRenderDefaultCss: shouldRenderDefaultCss,\n        onGoToNextPage: onGoToNextPage,\n        onGoToPrevPage: onGoToPrevPage,\n        onSelectAddress: onSelectAddress,\n        startIndex: startIndex,\n        selectedAddress: selectedAddress == null ? void 0 : selectedAddress.address,\n        onConfirmSelectedAddress: onConfirmSelectedAddress\n      });\n    }\n\n    return React__default.createElement(LedgerConnect, {\n      onClick: onStartLogin,\n      error: error\n    });\n  }\n\n  return wrapContentInsideModal ? React__default.createElement(ModalContainer, {\n    title: 'Login with ledger',\n    className: className,\n    onClose: onClose\n  }, getContent()) : getContent();\n}\n\nvar LedgerLoginContainer$1 = /*#__PURE__*/withClassNameWrapper(LedgerLoginContainer);\n\nvar LedgerLoginButton = function LedgerLoginButton(_ref) {\n  var token = _ref.token,\n      callbackRoute = _ref.callbackRoute,\n      children = _ref.children,\n      onModalOpens = _ref.onModalOpens,\n      onModalCloses = _ref.onModalCloses,\n      _ref$loginButtonText = _ref.loginButtonText,\n      loginButtonText = _ref$loginButtonText === void 0 ? 'Ledger' : _ref$loginButtonText,\n      buttonClassName = _ref.buttonClassName,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'ledger-login' : _ref$className,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog,\n      _ref$wrapContentInsid = _ref.wrapContentInsideModal,\n      wrapContentInsideModal = _ref$wrapContentInsid === void 0 ? true : _ref$wrapContentInsid,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$shouldRenderDefa2 = _ref.shouldRenderDefaultModalCss,\n      shouldRenderDefaultModalCss = _ref$shouldRenderDefa2 === void 0 ? true : _ref$shouldRenderDefa2,\n      _ref$hideButtonWhenMo = _ref.hideButtonWhenModalOpens,\n      hideButtonWhenModalOpens = _ref$hideButtonWhenMo === void 0 ? false : _ref$hideButtonWhenMo;\n\n  var _React$useState = React__default.useState(false),\n      showLoginModal = _React$useState[0],\n      setShowLoginModal = _React$useState[1];\n\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: \"btn btn-primary px-sm-4 m-1 mx-sm-3 \" + (buttonClassName != null ? buttonClassName : ''),\n    loginText: 'text-left'\n  });\n\n  function handleOpenModal() {\n    setShowLoginModal(true);\n    onModalOpens == null ? void 0 : onModalOpens();\n  }\n\n  function handleCloseModal() {\n    setShowLoginModal(false);\n    onModalCloses == null ? void 0 : onModalCloses();\n  }\n\n  var shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n  return React__default.createElement(\"span\", {\n    className: wrapperClassName\n  }, shouldRenderButton && React__default.createElement(\"button\", {\n    onClick: handleOpenModal,\n    className: generatedClasses.wrapper\n  }, children || React__default.createElement(\"span\", {\n    className: generatedClasses.loginText\n  }, loginButtonText)), showLoginModal && React__default.createElement(LedgerLoginContainer$1, {\n    className: className,\n    shouldRenderDefaultCss: shouldRenderDefaultModalCss,\n    callbackRoute: callbackRoute,\n    token: token,\n    wrapContentInsideModal: wrapContentInsideModal,\n    redirectAfterLogin: redirectAfterLogin,\n    onClose: handleCloseModal\n  }));\n};\n\nvar LedgerLoginButton$1 = /*#__PURE__*/withClassNameWrapper(LedgerLoginButton);\n\nvar _notificationTypesToI;\n\nvar typedIcons = icons;\nvar notificationTypesToIcons = (_notificationTypesToI = {}, _notificationTypesToI[NotificationTypesEnum.warning] = typedIcons.faExclamationTriangle, _notificationTypesToI);\nvar defaultIcon = typedIcons.faExclamationTriangle;\n\nfunction NotificationModal() {\n  var _useGetNotification = useGetNotification(),\n      notification = _useGetNotification.notification,\n      clearNotification = _useGetNotification.clearNotification;\n\n  var showModal = Boolean(notification);\n\n  var onDone = function onDone() {\n    clearNotification();\n  };\n\n  var type = notification == null ? void 0 : notification.type;\n  var icon = notification ? notificationTypesToIcons[type] || defaultIcon : null;\n  return notification ? React__default.createElement(RB.Modal, {\n    show: showModal,\n    backdrop: true,\n    onHide: notification,\n    className: \"modal-container \" + wrapperClassName,\n    animation: false,\n    centered: true\n  }, React__default.createElement(\"div\", {\n    className: 'card w-100 notification-modal'\n  }, React__default.createElement(PageState$1, {\n    icon: icon,\n    iconClass: notification.iconClassName,\n    iconBgClass: 'p-4 rounded-bg-circle',\n    iconSize: '3x',\n    title: notification.title,\n    description: notification.description,\n    action: React__default.createElement(\"button\", {\n      className: 'btn btn-primary',\n      onClick: onDone\n    }, \"Done\")\n  }))) : null;\n}\n\nvar Dot = function Dot(_ref) {\n  var color = _ref.color,\n      dataTestId = _ref['data-testid'];\n  return React__default.createElement(\"span\", {\n    className: \"dot \" + color,\n    \"data-testid\": dataTestId\n  });\n};\n\nvar ProgressSteps = function ProgressSteps(_ref) {\n  var totalSteps = _ref.totalSteps,\n      currentStep = _ref.currentStep,\n      className = _ref.className;\n  var dots = [];\n\n  for (var i = 1; i <= totalSteps; i += 1) {\n    var isCurrentStep = currentStep === i;\n    var color = isCurrentStep || i < currentStep ? 'bg-primary' : 'bg-secondary';\n    dots.push(React__default.createElement(Dot, {\n      \"data-testid\": \"step\" + i + (isCurrentStep ? 'active' : ''),\n      key: i,\n      color: color\n    }));\n  }\n\n  return React__default.createElement(\"div\", {\n    className: \"progress-steps d-flex justify-content-center \" + className\n  }, React__default.createElement(\"div\", {\n    className: 'steps d-flex justify-content-center align-items-center position-relative'\n  }, React__default.createElement(\"hr\", {\n    className: 'position-absolute w-100 m-0'\n  }), dots));\n};\n\nvar SignWithExtensionModal = function SignWithExtensionModal(_ref) {\n  var handleClose = _ref.handleClose,\n      error = _ref.error,\n      callbackRoute = _ref.callbackRoute,\n      transactions = _ref.transactions,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'extension-modal' : _ref$className;\n  var classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container extension',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n  var description = error ? error : transactions && transactions.length > 1 ? 'Check your Elrond Wallet Extension to sign the transactions' : 'Check your Elrond Wallet Extension to sign the transaction';\n\n  var close = function close(e) {\n    e.preventDefault();\n    handleClose();\n\n    if (callbackRoute != null && !window.location.pathname.includes(callbackRoute)) {\n      window.location.href = callbackRoute;\n    }\n  };\n\n  return React__default.createElement(RB.Modal, {\n    show: true,\n    backdrop: 'static',\n    onHide: handleClose,\n    className: classnames$1(classes.wrapper, wrapperClassName),\n    animation: false,\n    centered: true\n  }, React__default.createElement(PageState$1, {\n    icon: error ? icons.faTimes : icons.faHourglass,\n    iconClass: classes.icon,\n    className: className,\n    iconBgClass: error ? 'bg-danger' : 'bg-warning',\n    iconSize: '3x',\n    title: 'Confirm on Maiar DeFi Wallet',\n    description: description,\n    action: React__default.createElement(\"button\", {\n      id: 'closeButton',\n      \"data-testid\": 'closeButton',\n      onClick: close,\n      className: classes.closeBtn\n    }, \"Close\")\n  }));\n};\n\nvar _g$1;\n\nfunction _extends$2() {\n  _extends$2 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends$2.apply(this, arguments);\n}\n\nvar SvgEgld = function SvgEgld(props) {\n  return /*#__PURE__*/createElement(\"svg\", _extends$2({\n    viewBox: \"0 0 100 100\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _g$1 || (_g$1 = /*#__PURE__*/createElement(\"g\", {\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/createElement(\"path\", {\n    d: \"M79.6 19.424c-.4-.438-.6-.877-.6-1.425 0-.547.2-.986.6-1.424.8-.767 2-.767 2.8 0 .4.438.6.877.6 1.424 0 .548-.2.987-.6 1.425-.4.329-.9.548-1.4.548-.5.11-1-.11-1.4-.548M74.556 24.448c-.333-.441-.556-.883-.556-1.435s.223-.993.556-1.434c.778-.772 2.111-.772 2.889 0 .333.441.555.883.555 1.435s-.222.993-.555 1.434C77 24.779 76.556 25 76 25s-1-.221-1.445-.552M69.556 30.448c-.333-.331-.556-.883-.556-1.435s.223-.993.556-1.434c.778-.772 2.111-.772 2.889 0 .333.331.555.883.555 1.435s-.222.993-.555 1.434C72 30.889 71.556 31 71 31s-1.112-.221-1.445-.552M64.6 35.448c-.4-.331-.6-.883-.6-1.435s.2-.993.6-1.434c.8-.772 2-.772 2.8 0 .4.331.6.883.6 1.435s-.2 1.103-.6 1.434c-.4.441-.9.552-1.4.552s-1-.11-1.4-.552M59.556 40.424c-.444-.329-.556-.877-.556-1.425 0-.547.223-.986.556-1.424.778-.767 2.111-.767 2.889 0 .444.329.555.877.555 1.424 0 .548-.222 1.096-.555 1.425-.333.438-.889.548-1.445.548a1.457 1.457 0 0 1-1.444-.548M53 44.014c0-.552.222-.993.556-1.435.777-.772 2.11-.772 2.888 0 .445.442.556.883.556 1.435s-.222.993-.556 1.435c-.333.33-.888.551-1.444.551s-1-.22-1.444-.551c-.334-.332-.556-.883-.556-1.435zM43.556 56.424c-.333-.329-.556-.877-.556-1.425 0-.547.223-.986.556-1.424.778-.767 2.111-.767 2.889 0 .444.438.555.877.555 1.424 0 .548-.222.987-.555 1.425-.333.438-.889.548-1.445.548-.555.11-1-.11-1.444-.548M38.6 61.424c-.4-.329-.6-.877-.6-1.425 0-.547.2-.986.6-1.424.8-.767 2-.767 2.8 0 .4.438.6.877.6 1.424 0 .548-.2.987-.6 1.425-.4.438-.9.548-1.4.548-.5.11-1-.11-1.4-.548M33.556 66.448c-.333-.331-.556-.883-.556-1.435s.223-1.103.556-1.434c.778-.772 2.111-.772 2.889 0 .333.331.555.883.555 1.434s-.222.994-.555 1.435C36 66.889 35.556 67 35 67s-1-.221-1.444-.552M27.556 71.448c-.444-.331-.556-.883-.556-1.435s.223-.993.556-1.434c.778-.772 2.111-.772 2.889 0 .333.441.555.883.555 1.435s-.222 1.103-.555 1.434C30 71.889 29.556 72 29 72s-1.112-.11-1.445-.552M22.615 76.448c-.41-.331-.615-.883-.615-1.435s.205-.993.615-1.434c.82-.772 2.051-.772 2.77 0 .41.441.615.883.615 1.435s-.206 1.103-.616 1.434c-.41.331-.923.552-1.436.552-.513 0-1.025-.11-1.333-.552M17.556 82.424c-.444-.438-.556-.877-.556-1.425 0-.547.223-.986.556-1.424.778-.767 2.111-.767 2.889 0 .444.438.555.877.555 1.425 0 .547-.222.986-.555 1.424-.333.329-.889.548-1.444.548-.445.11-1-.11-1.445-.548M20.444 19.424c.333-.438.556-.877.556-1.425 0-.547-.223-.986-.556-1.424-.778-.767-2.111-.767-2.889 0-.444.438-.555.877-.555 1.424 0 .548.222.987.555 1.425.333.329.889.548 1.444.548.556.11 1.112-.11 1.445-.548M25.4 24.448c.4-.441.6-.883.6-1.435s-.2-.993-.6-1.434c-.8-.772-2-.772-2.8 0-.4.441-.6.883-.6 1.435s.2.993.6 1.434c.4.331.9.552 1.4.552s1-.221 1.4-.552M30.444 30.448c.333-.331.556-.883.556-1.435s-.223-.993-.556-1.434c-.778-.772-2.111-.772-2.889 0-.333.331-.555.883-.555 1.435s.222.993.555 1.434C28 30.889 28.444 31 29 31c.445 0 1-.221 1.445-.552M36.444 35.448c.333-.331.556-.883.556-1.435s-.223-.993-.556-1.434c-.778-.772-2.111-.772-2.889 0-.333.331-.555.883-.555 1.435s.222 1.103.555 1.434C34 35.889 34.444 36 35 36c.444 0 1-.11 1.444-.552M41.385 40.424c.41-.329.615-.877.615-1.425 0-.547-.205-.986-.615-1.424-.718-.767-2.051-.767-2.77 0-.41.329-.615.877-.615 1.424 0 .548.206 1.096.616 1.425.41.438.923.548 1.436.548.513.11 1.025-.11 1.333-.548M47 44.014c0-.552-.222-.993-.556-1.435-.777-.772-2.11-.772-2.888 0-.445.442-.556.883-.556 1.435s.222.993.556 1.435c.333.33.888.551 1.444.551s1-.22 1.444-.551c.445-.332.556-.883.556-1.435zM51.444 51.448c.444-.441.556-.883.556-1.435s-.223-.993-.556-1.434c-.778-.772-2.111-.772-2.889 0-.444.441-.555.883-.555 1.435s.222.993.555 1.434c.333.331.889.552 1.445.552s1.11-.221 1.444-.552M56.385 56.424c.41-.329.615-.877.615-1.425 0-.547-.205-.986-.615-1.424-.82-.767-2.051-.767-2.77 0-.41.438-.615.877-.615 1.424 0 .548.206.987.616 1.425.41.438.923.548 1.436.548.41.11.923-.11 1.333-.548M62.444 61.424c.333-.329.556-.877.556-1.425 0-.547-.223-.986-.556-1.424-.778-.767-2.111-.767-2.889 0-.333.438-.555.877-.555 1.424 0 .548.222.987.555 1.425.445.438.889.548 1.445.548.444.11 1-.11 1.444-.548M67.444 66.448c.333-.331.556-.883.556-1.435s-.223-1.103-.556-1.434c-.778-.772-2.111-.772-2.889 0-.333.331-.555.883-.555 1.434s.222.994.555 1.435C65 66.889 65.444 67 66 67s1-.221 1.445-.552M72.444 71.448c.444-.331.556-.883.556-1.435s-.223-.993-.556-1.434c-.778-.772-2.111-.772-2.889 0-.333.441-.555.883-.555 1.435s.222 1.103.555 1.434C70 71.889 70.444 72 71 72s1.112-.11 1.445-.552M77.444 76.448c.444-.331.556-.883.556-1.435s-.223-.993-.556-1.434c-.778-.772-2.111-.772-2.889 0-.444.441-.555.883-.555 1.435s.222 1.103.555 1.434c.333.331.889.552 1.444.552s1.112-.11 1.445-.552M82.385 82.424c.41-.438.615-.877.615-1.425 0-.547-.205-.986-.615-1.424-.82-.767-2.051-.767-2.77 0-.41.438-.615.877-.615 1.425 0 .547.206.986.616 1.424.41.329.923.548 1.436.548.41.11.923-.11 1.333-.548M33.036 21c5.265-3.433 11.036-5.048 17.414-5.149 6.277 0 12.048 1.716 17.414 5.149L79.001 9.894C70.294 3.331 60.878 0 50.45 0 40.022 0 30.505 3.332 22.001 9.894L33.037 21zM21 66.742c-3.585-5.375-5.327-11.157-5.327-17.343 0-6.288 1.742-12.069 5.327-17.343L9.834 21.001C3.278 29.521 0 38.953 0 49.501c0 10.345 3.278 19.879 9.937 28.5L21 66.743zM67.964 78c-5.265 3.533-11.036 5.35-17.313 5.451-6.378 0-12.25-1.716-17.515-5.35L21.999 89.105c8.606 6.663 18.123 9.994 28.652 9.893 10.428-.1 19.844-3.432 28.348-9.893L67.963 78zM79 32.258c3.533 5.375 5.35 11.258 5.25 17.648-.102 6.187-1.818 11.867-5.25 17.039L90.105 78c6.562-8.52 9.893-17.952 9.893-28.297.101-10.548-3.23-20.082-9.893-28.703L79 32.258zM90 81c4.364 0 8 3.533 8 8 0 4.364-3.533 8-8 8-4.364 0-8-3.533-8-8s3.533-8 8-8M10 81c4.421 0 8 3.533 8 8 0 4.364-3.579 8-8 8-4.421 0-8-3.533-8-8s3.579-8 8-8M90 1c4.421 0 8 3.533 8 8 0 4.468-3.579 8-8 8s-8-3.533-8-8c0-4.468 3.579-8 8-8M10 1c4.364 0 8 3.579 8 8 0 4.421-3.533 8-8 8-4.364 0-8-3.579-8-8 0-4.421 3.533-8 8-8\"\n  }))));\n};\n\nvar Simple = function Simple(_ref) {\n  var children = _ref.children;\n  return createElement(\"div\", {\n    className: 'token-symbol'\n  }, children);\n};\n\nvar Combined = function Combined(_ref2) {\n  var small = _ref2.small,\n      children = _ref2.children;\n  return createElement(\"div\", {\n    className: \"token-symbol-combined \" + (small ? 'small' : '')\n  }, children);\n};\n\nvar getIdentifierWithoutNonce = function getIdentifierWithoutNonce(identifier) {\n  var tokenParts = identifier.split('-');\n  return identifier.includes('-') ? tokenParts[0] + \"-\" + tokenParts[1] : identifier;\n};\n\nfunction getIcon(isEgldTransfer, tokenAvatar) {\n  if (tokenAvatar) {\n    return React__default.createElement(\"img\", {\n      className: 'token-symbol-custom-token',\n      src: tokenAvatar\n    });\n  }\n\n  return isEgldTransfer ? React__default.createElement(SvgEgld, null) : React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icons.faDiamond\n  });\n}\n\nvar getDetails = function getDetails(token, tokenAvatar) {\n  var egldLabel = getEgldLabel();\n  var isEgldTransfer = token === egldLabel;\n  return {\n    token: token,\n    symbol: token ? token.split('-')[0] : '',\n    label: token,\n    // eslint-disable-next-line react/display-name\n    icon: function icon() {\n      return getIcon(isEgldTransfer, tokenAvatar);\n    }\n  };\n};\n\nvar TokenDetails = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TokenDetails, _React$Component);\n\n  function TokenDetails() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TokenDetails.prototype;\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return TokenDetails;\n}(React__default.Component);\n\nTokenDetails.Token = function (props) {\n  return React__default.createElement(React__default.Fragment, null, props.token);\n};\n\nTokenDetails.Symbol = function (props) {\n  return React__default.createElement(React__default.Fragment, null, getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar).symbol);\n};\n\nTokenDetails.Label = function (props) {\n  return React__default.createElement(React__default.Fragment, null, getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar).label);\n};\n\nTokenDetails.Icon = function (props) {\n  var Component = process.env.NODE_ENV !== 'test' ? getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar).icon : function () {\n    return null;\n  };\n  return React__default.createElement(\"span\", {\n    className: wrapperClassName\n  }, props.combined ? React__default.createElement(Combined, {\n    small: props.small\n  }, React__default.createElement(Component, null)) : React__default.createElement(Simple, null, React__default.createElement(Component, null)));\n};\n\nvar allOccurences = function allOccurences(sourceStr, searchStr) {\n  return [].concat(sourceStr.matchAll(new RegExp(searchStr, 'gi'))).map(function (a) {\n    return a.index;\n  });\n};\n\nvar TransactionData = function TransactionData(_ref) {\n  var data = _ref.data,\n      highlight = _ref.highlight,\n      isScCall = _ref.isScCall;\n  var output = createElement(Fragment, null, data);\n\n  var _ref2 = highlight && isScCall ? highlight.split('@') : [],\n      encodedScCall = _ref2[0],\n      remainingDataFields = _ref2.slice(1);\n\n  if (data && highlight && allOccurences(data, highlight).length === 1) {\n    switch (true) {\n      case data.startsWith(highlight):\n        {\n          var _data$split = data.split(highlight),\n              rest = _data$split[1];\n\n          output = createElement(Fragment, null, highlight, createElement(\"span\", {\n            className: 'text-muted'\n          }, rest));\n          break;\n        }\n\n      case data.endsWith(highlight):\n        {\n          var _data$split2 = data.split(highlight),\n              _rest = _data$split2[0];\n\n          output = createElement(Fragment, null, createElement(\"span\", {\n            className: 'text-muted'\n          }, _rest), highlight);\n          break;\n        }\n\n      default:\n        {\n          var _data$split3 = data.split(highlight),\n              start = _data$split3[0],\n              end = _data$split3[1];\n\n          output = createElement(Fragment, null, createElement(\"span\", {\n            className: 'text-muted'\n          }, start), createElement(\"span\", {\n            className: 'highlighted'\n          }, highlight), createElement(\"span\", {\n            className: 'text-muted'\n          }, end));\n          break;\n        }\n    }\n  }\n\n  return createElement(Fragment, null, encodedScCall && createElement(\"div\", {\n    className: 'form-group mb-0 data-field mw-100'\n  }, createElement(\"span\", {\n    className: 'form-label text-secondary d-block'\n  }, \"SC Call\"), createElement(\"div\", {\n    \"data-testid\": 'confirmScCall',\n    className: 'textarea sc-call form-control cursor-text mt-1 text-break-all'\n  }, [decodePart(encodedScCall)].concat(remainingDataFields).join('@'))), createElement(\"div\", {\n    className: 'form-group mb-0 data-field mw-100'\n  }, createElement(\"span\", {\n    className: 'form-label text-secondary d-block'\n  }, \"Data\"), createElement(\"div\", {\n    \"data-testid\": 'confirmData',\n    className: 'textarea form-control cursor-text mt-1 text-break-all'\n  }, data ? output : 'N/A')));\n};\n\nvar TransactionData$1 = /*#__PURE__*/withClassNameWrapper(TransactionData);\n\nvar SignStep = function SignStep(_ref) {\n  var onSignTransaction = _ref.onSignTransaction,\n      handleClose = _ref.handleClose,\n      onPrev = _ref.onPrev,\n      title = _ref.title,\n      waitingForDevice = _ref.waitingForDevice,\n      currentTransaction = _ref.currentTransaction,\n      error = _ref.error,\n      allTransactions = _ref.allTransactions,\n      isLastTransaction = _ref.isLastTransaction,\n      currentStep = _ref.currentStep,\n      className = _ref.className;\n  var egldLabel = getEgldLabel();\n\n  if (!currentTransaction) {\n    return null;\n  }\n\n  var transactionData = currentTransaction.transaction.getData().toString();\n\n  var _useGetNetworkConfig = useGetNetworkConfig(),\n      network = _useGetNetworkConfig.network;\n\n  var _currentTransaction$t = currentTransaction.transactionTokenInfo,\n      tokenId = _currentTransaction$t.tokenId,\n      amount = _currentTransaction$t.amount,\n      type = _currentTransaction$t.type,\n      multiTxData = _currentTransaction$t.multiTxData,\n      receiver = _currentTransaction$t.receiver;\n  var isTokenTransaction = Boolean(tokenId && isTokenTransfer({\n    tokenId: tokenId,\n    erdLabel: egldLabel\n  }));\n  var isFirst = currentStep === 0;\n\n  var onCloseClick = function onCloseClick(e) {\n    e.preventDefault();\n\n    if (isFirst) {\n      handleClose();\n    } else {\n      onPrev();\n    }\n  };\n\n  var continueWithoutSigning = type && multiTxData && !transactionData.endsWith(multiTxData);\n  var signBtnLabel = 'Sign & Continue';\n  signBtnLabel = waitingForDevice ? 'Check your Ledger' : signBtnLabel;\n  signBtnLabel = isLastTransaction && !waitingForDevice ? 'Sign & Submit' : signBtnLabel;\n  signBtnLabel = continueWithoutSigning ? 'Continue' : signBtnLabel;\n\n  var _useGetTokenDetails = useGetTokenDetails({\n    tokenId: currentTransaction.transactionTokenInfo.tokenId\n  }),\n      tokenDenomination = _useGetTokenDetails.tokenDenomination,\n      tokenAvatar = _useGetTokenDetails.tokenAvatar;\n\n  var denominatedAmount = denominate({\n    input: isTokenTransaction ? amount : currentTransaction.transaction.getValue().toString(),\n    denomination: isTokenTransaction ? tokenDenomination : Number(network.egldDenomination),\n    decimals: Number(network.decimals),\n    showLastNonZeroDecimal: false,\n    addCommas: true\n  });\n  var scamReport = currentTransaction.receiverScamInfo;\n  var showProgressSteps = allTransactions.length > 1;\n  var classes = getGeneratedClasses(className, true, {\n    formGroup: 'form-group text-left',\n    formLabel: 'form-label text-secondary',\n    icon: 'text-white',\n    contentWrapper: 'd-flex flex-column justify-content-start flex-md-row justify-content-md-between mb-3',\n    tokenWrapper: 'mb-3 mb-md-0 d-flex flex-column align-items-start',\n    tokenLabel: 'text-secondary text-left',\n    tokenValue: 'd-flex align-items-center mt-1',\n    scamReport: 'text-warning',\n    scamReportIcon: 'text-warning mr-1',\n    tokenAmountLabel: 'text-secondary text-left',\n    tokenAmountValue: 'd-flex align-items-center',\n    dataFormGroup: 'form-group text-left',\n    errorMessage: 'text-danger d-flex justify-content-center align-items-center',\n    buttonsWrapper: 'd-flex align-items-center justify-content-end mt-spacer',\n    cancelButton: 'btn btn-dark text-white flex-even mr-2',\n    signButton: \"btn \" + (scamReport ? 'btn-warning' : 'btn-primary') + \" flex-even ml-2\"\n  });\n  return React__default.createElement(PageState$1, {\n    icon: error ? icons.faTimes : icons.faHourglass,\n    iconClass: classes.icon,\n    iconBgClass: error ? 'bg-danger' : 'bg-warning',\n    iconSize: '3x',\n    className: className,\n    title: title || 'Confirm on Ledger',\n    description: React__default.createElement(React__default.Fragment, null, currentTransaction.transaction && React__default.createElement(React__default.Fragment, null, showProgressSteps && React__default.createElement(ProgressSteps, {\n      totalSteps: allTransactions.length,\n      currentStep: currentStep + 1,\n      className: 'mb-4'\n    }), React__default.createElement(\"div\", {\n      className: classes.formGroup,\n      \"data-testid\": 'transactionTitle'\n    }, React__default.createElement(\"div\", {\n      className: classes.formLabel\n    }, \"To: \"), multiTxData ? new Address$1(receiver).bech32() : currentTransaction.transaction.getReceiver().toString(), scamReport && React__default.createElement(\"div\", {\n      className: classes.scamReport\n    }, React__default.createElement(\"span\", null, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n      icon: icons.faExclamationTriangle,\n      className: classes.scamReportIcon\n    }), React__default.createElement(\"small\", null, scamReport)))), React__default.createElement(\"div\", {\n      className: classes.contentWrapper\n    }, React__default.createElement(\"div\", {\n      className: classes.tokenWrapper\n    }, React__default.createElement(\"div\", {\n      className: classes.tokenlabel\n    }, \"Token\"), React__default.createElement(\"div\", {\n      className: classes.tokenValue\n    }, React__default.createElement(TokenDetails.Icon, {\n      tokenAvatar: tokenAvatar,\n      token: tokenId || egldLabel\n    }), React__default.createElement(\"div\", {\n      className: 'mr-1'\n    }), React__default.createElement(TokenDetails.Label, {\n      token: tokenId || egldLabel\n    }))), React__default.createElement(\"div\", null, React__default.createElement(\"div\", {\n      className: classes.tokenAmountLabel\n    }, \"Amount\"), React__default.createElement(\"div\", {\n      className: classes.tokenAmountValue\n    }, React__default.createElement(\"div\", {\n      className: 'mr-1'\n    }, denominatedAmount), React__default.createElement(TokenDetails.Symbol, {\n      token: tokenId || egldLabel\n    })))), React__default.createElement(\"div\", {\n      className: classes.dataFormGroup\n    }, currentTransaction.transaction.getData() && React__default.createElement(TransactionData$1, Object.assign({}, {\n      data: currentTransaction.transaction.getData().toString(),\n      highlight: multiTxData,\n      isScCall: !tokenId\n    }))), error && React__default.createElement(\"p\", {\n      className: classes.errorMessage\n    }, error))),\n    action: React__default.createElement(\"div\", {\n      className: classes.buttonsWrapper\n    }, React__default.createElement(\"button\", {\n      id: 'closeButton',\n      \"data-testid\": 'closeButton',\n      onClick: onCloseClick,\n      className: classes.cancelButton\n    }, isFirst ? 'Cancel' : 'Back'), React__default.createElement(\"button\", {\n      type: 'button',\n      className: classes.signButton,\n      id: 'signBtn',\n      \"data-testid\": 'signBtn',\n      onClick: onSignTransaction,\n      disabled: waitingForDevice\n    }, signBtnLabel))\n  });\n};\n\nvar SignWithDeviceModal = function SignWithDeviceModal(_ref) {\n  var handleClose = _ref.handleClose,\n      error = _ref.error,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'device-modal' : _ref$className,\n      _ref$verifyReceiverSc = _ref.verifyReceiverScam,\n      verifyReceiverScam = _ref$verifyReceiverSc === void 0 ? true : _ref$verifyReceiverSc,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Confirm transaction' : _ref$title;\n\n  var _useSignTransactionsW = useSignTransactionsWithDevice({\n    onCancel: handleClose,\n    verifyReceiverScam: verifyReceiverScam\n  }),\n      onSignTransaction = _useSignTransactionsW.onSignTransaction,\n      onNext = _useSignTransactionsW.onNext,\n      onPrev = _useSignTransactionsW.onPrev,\n      allTransactions = _useSignTransactionsW.allTransactions,\n      waitingForDevice = _useSignTransactionsW.waitingForDevice,\n      onAbort = _useSignTransactionsW.onAbort,\n      isLastTransaction = _useSignTransactionsW.isLastTransaction,\n      currentStep = _useSignTransactionsW.currentStep,\n      callbackRoute = _useSignTransactionsW.callbackRoute,\n      currentTransaction = _useSignTransactionsW.currentTransaction;\n\n  var classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    container: 'card container',\n    cardBody: 'card-body'\n  });\n  return React__default.createElement(RB.Modal, {\n    show: currentTransaction != null,\n    backdrop: 'static',\n    onHide: handleClose,\n    className: classnames$1(classes.wrapper, wrapperClassName),\n    animation: false,\n    centered: true\n  }, React__default.createElement(\"div\", {\n    className: classes.container\n  }, React__default.createElement(\"div\", {\n    className: classes.cardBody\n  }, React__default.createElement(SignStep, Object.assign({}, {\n    onSignTransaction: onSignTransaction,\n    onNext: onNext,\n    onPrev: onPrev,\n    allTransactions: allTransactions,\n    waitingForDevice: waitingForDevice,\n    isLastTransaction: isLastTransaction,\n    currentStep: currentStep,\n    callbackRoute: callbackRoute,\n    currentTransaction: currentTransaction,\n    handleClose: onAbort,\n    className: className,\n    error: error,\n    title: title\n  })))));\n};\n\nvar SignWithLedgerModal = function SignWithLedgerModal(props) {\n  return React__default.createElement(SignWithDeviceModal, Object.assign({}, props, {\n    title: props.title || 'Confirm on Ledger',\n    className: props.className || 'ledger-modal'\n  }));\n};\n\nvar SignWithWalletConnectModal = function SignWithWalletConnectModal(_ref) {\n  var error = _ref.error,\n      handleClose = _ref.handleClose,\n      callbackRoute = _ref.callbackRoute,\n      transactions = _ref.transactions,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'wallet-connect-modal' : _ref$className;\n  var classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n  var hasMultipleTransactions = transactions && (transactions == null ? void 0 : transactions.length) > 1;\n  var description = error ? error : \"Check your phone to sign the transaction\" + (hasMultipleTransactions ? 's' : '');\n\n  var close = function close(e) {\n    e.preventDefault();\n    handleClose();\n\n    if (callbackRoute != null && !window.location.pathname.includes(callbackRoute)) {\n      window.location.href = callbackRoute;\n    }\n  };\n\n  return React__default.createElement(RB.Modal, {\n    show: true,\n    backdrop: 'static',\n    onHide: close,\n    className: classnames$1(classes.wrapper, wrapperClassName),\n    animation: false,\n    centered: true\n  }, React__default.createElement(PageState$1, {\n    icon: error ? icons.faTimes : icons.faHourglass,\n    iconClass: classes.icon,\n    className: className,\n    iconBgClass: error ? 'bg-danger' : 'bg-warning',\n    iconSize: '3x',\n    title: 'Confirm on Maiar',\n    description: description,\n    action: React__default.createElement(\"button\", {\n      id: 'closeButton',\n      \"data-testid\": 'closeButton',\n      onClick: close,\n      className: classes.closeBtn\n    }, \"Close\")\n  }));\n};\n\nfunction SignTransactionsModals(_ref) {\n  var className = _ref.className,\n      CustomConfirmScreens = _ref.CustomConfirmScreens,\n      _ref$verifyReceiverSc = _ref.verifyReceiverScam,\n      verifyReceiverScam = _ref$verifyReceiverSc === void 0 ? true : _ref$verifyReceiverSc;\n\n  var _useSignTransactions = useSignTransactions(),\n      callbackRoute = _useSignTransactions.callbackRoute,\n      transactions = _useSignTransactions.transactions,\n      error = _useSignTransactions.error,\n      sessionId = _useSignTransactions.sessionId,\n      onAbort = _useSignTransactions.onAbort,\n      hasTransactions = _useSignTransactions.hasTransactions;\n\n  var _useGetAccountProvide = useGetAccountProvider(),\n      providerType = _useGetAccountProvide.providerType;\n\n  var signTransactionsError = useGetSignTransactionsError();\n\n  var _useGetLoginInfo = useGetLoginInfo(),\n      loginMethod = _useGetLoginInfo.loginMethod;\n\n  var handleClose = function handleClose() {\n    onAbort(sessionId);\n  };\n\n  var signError = error || signTransactionsError;\n  var signProps = {\n    handleClose: handleClose,\n    error: signError,\n    sessionId: sessionId,\n    transactions: transactions,\n    providerType: providerType,\n    callbackRoute: callbackRoute,\n    className: className,\n    verifyReceiverScam: verifyReceiverScam\n  };\n\n  if (signError || hasTransactions) {\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger:\n        return CustomConfirmScreens != null && CustomConfirmScreens.Ledger ? React__default.createElement(CustomConfirmScreens.Ledger, Object.assign({}, signProps)) : React__default.createElement(SignWithLedgerModal, Object.assign({}, signProps));\n\n      case LoginMethodsEnum.walletconnect:\n        return CustomConfirmScreens != null && CustomConfirmScreens.WalletConnect ? React__default.createElement(CustomConfirmScreens.WalletConnect, Object.assign({}, signProps)) : React__default.createElement(SignWithWalletConnectModal, Object.assign({}, signProps));\n\n      case LoginMethodsEnum.extension:\n        return CustomConfirmScreens != null && CustomConfirmScreens.Extension ? React__default.createElement(CustomConfirmScreens.Extension, Object.assign({}, signProps)) : React__default.createElement(SignWithExtensionModal, Object.assign({}, signProps));\n\n      case LoginMethodsEnum.extra:\n        return CustomConfirmScreens != null && CustomConfirmScreens.Extra ? React__default.createElement(CustomConfirmScreens.Extra, Object.assign({}, signProps)) : null;\n\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\nvar index$5 = /*#__PURE__*/withClassNameWrapper(SignTransactionsModals);\nvar SessionStorageKeysEnum;\n\n(function (SessionStorageKeysEnum) {\n  SessionStorageKeysEnum[\"toasts\"] = \"toasts\";\n})(SessionStorageKeysEnum || (SessionStorageKeysEnum = {}));\n\nfunction setToastsIdsToStorage(ids) {\n  return sessionStorage.setItem(SessionStorageKeysEnum.toasts, JSON.stringify(ids));\n}\n\nfunction getToastsIdsFromStorage() {\n  var toastsIds = sessionStorage.getItem(SessionStorageKeysEnum.toasts);\n  return toastsIds != null ? JSON.parse(toastsIds) : [];\n}\n\nfunction isCrossShardTransaction(_ref) {\n  var receiverAddress = _ref.receiverAddress,\n      senderShard = _ref.senderShard,\n      senderAddress = _ref.senderAddress;\n\n  try {\n    var receiver = new Address$1(receiverAddress);\n    var receiverShard = getShardOfAddress(receiver.pubkey());\n\n    if (senderShard == null && senderAddress != null) {\n      var sender = new Address$1(senderAddress);\n      return getShardOfAddress(sender) === receiverShard;\n    }\n\n    return receiverShard === senderShard;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar IconState = function IconState(_ref) {\n  var icon = _ref.icon,\n      _ref$iconSize = _ref.iconSize,\n      iconSize = _ref$iconSize === void 0 ? '3x' : _ref$iconSize,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'icon-state' : _ref$className,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: classnames$1('icon-state mx-auto', className, {\n      half: iconSize === '2x'\n    }),\n    icon: classnames$1('text-white', className)\n  });\n  return React__default.createElement(\"span\", {\n    className: generatedClasses.wrapper\n  }, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icon,\n    size: iconSize,\n    className: generatedClasses.icon\n  }));\n};\n\nvar IconState$1 = /*#__PURE__*/withClassNameWrapper(IconState);\n\nvar Progress = function Progress(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      progress = _ref.progress,\n      done = _ref.done,\n      _ref$expiresIn = _ref.expiresIn,\n      expiresIn = _ref$expiresIn === void 0 ? 10 * 60 : _ref$expiresIn;\n  var ref = React__default.useRef(null);\n  var intervalRef = React__default.useRef();\n\n  var removeTxFromSession = function removeTxFromSession() {\n    var toastProgress = storage$1.session.getItem('toastProgress');\n    var hasSessionStoredTx = Boolean(toastProgress == null ? void 0 : toastProgress[id]);\n\n    if (!hasSessionStoredTx) {\n      return;\n    }\n\n    var expires = moment$1().add(expiresIn, 'seconds').unix();\n    delete toastProgress[id];\n    storage$1.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires: expires\n    });\n  };\n\n  var saveToSession = function saveToSession(_ref2) {\n    var value = _ref2.value;\n    var toastProgress = storage$1.session.getItem('toastProgress') || {};\n    toastProgress[id] = value;\n    storage$1.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires: moment$1().add(expiresIn, 'seconds').unix()\n    });\n  };\n\n  var getInitialData = function getInitialData() {\n    var totalSeconds = progress ? progress.endTime - progress.startTime : 0;\n    var toastProgress = storage$1.session.getItem('toastProgress');\n    var remaining = progress ? (progress.endTime - moment$1().unix()) * 100 / totalSeconds : 0;\n    var currentRemaining = toastProgress && id in toastProgress ? toastProgress[id] : remaining;\n    return {\n      currentRemaining: currentRemaining,\n      totalSeconds: totalSeconds\n    };\n  };\n\n  var _getInitialData = getInitialData(),\n      totalSeconds = _getInitialData.totalSeconds,\n      currentRemaining = _getInitialData.currentRemaining;\n\n  var _React$useState = React__default.useState(currentRemaining),\n      percentRemaining = _React$useState[0],\n      setPercentRemaining = _React$useState[1];\n\n  React__default.useEffect(function () {\n    if (progress) {\n      var maxPercent = 90;\n      var perc = totalSeconds / maxPercent;\n\n      var _int = moment$1.duration(perc.toFixed(2), 's').asMilliseconds();\n\n      if (done) {\n        intervalRef.current = setInterval(function () {\n          if (ref.current !== null) {\n            setPercentRemaining(function (existing) {\n              var value = existing - 1;\n\n              if (value <= 0) {\n                clearInterval(intervalRef.current);\n                removeTxFromSession();\n                return 0;\n              } else {\n                saveToSession({\n                  value: value\n                });\n                return value;\n              }\n            });\n          }\n        }, 5);\n      } else {\n        intervalRef.current = setInterval(function () {\n          if (ref.current !== null) {\n            setPercentRemaining(function (existing) {\n              var decrement = existing > 100 - maxPercent ? 1 : logarithmicRest(existing);\n              var value = existing - decrement;\n              saveToSession({\n                value: value\n              });\n              return value;\n            });\n          }\n        }, _int);\n      }\n\n      return function () {\n        clearInterval(intervalRef.current);\n      };\n    }\n\n    return;\n  }, [progress, done]);\n  return progress ? React__default.createElement(\"div\", {\n    className: 'progress position-relative',\n    ref: ref\n  }, React__default.createElement(\"div\", {\n    className: 'progress-bar',\n    role: 'progressbar',\n    style: {\n      width: percentRemaining + \"%\"\n    },\n    \"aria-valuenow\": percentRemaining,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100\n  }, React__default.createElement(\"div\", {\n    className: 'content-height'\n  }, children)), React__default.createElement(\"div\", {\n    className: 'd-flex position-absolute w-100'\n  }, children)) : React__default.createElement(React__default.Fragment, null, children);\n};\n\nvar Progress$1 = /*#__PURE__*/withClassNameWrapper(Progress);\n\nfunction fallbackCopyTextToClipboard(text) {\n  var success = false;\n  var textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n    success = true;\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n  return success;\n}\n\nfunction copyTextToClipboard(_x) {\n  return _copyTextToClipboard.apply(this, arguments);\n}\n\nfunction _copyTextToClipboard() {\n  _copyTextToClipboard = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(text) {\n    var success;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            success = false;\n\n            if (navigator.clipboard) {\n              _context.next = 5;\n              break;\n            }\n\n            success = fallbackCopyTextToClipboard(text);\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.next = 7;\n            return navigator.clipboard.writeText(text).then(function done() {\n              return true;\n            }, function error(err) {\n              console.error('Async: Could not copy text: ', err);\n              return false;\n            });\n\n          case 7:\n            success = _context.sent;\n\n          case 8:\n            return _context.abrupt(\"return\", success);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _copyTextToClipboard.apply(this, arguments);\n}\n\nvar CopyButton = function CopyButton(_ref) {\n  var text = _ref.text,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className;\n\n  var _React$useState = React__default.useState({\n    \"default\": true,\n    success: false\n  }),\n      copyResult = _React$useState[0],\n      setCopyResut = _React$useState[1];\n\n  var handleCopyToClipboard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(e) {\n      var noSpaces;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              e.stopPropagation();\n              noSpaces = text ? text.trim() : text;\n              _context.t0 = setCopyResut;\n              _context.next = 6;\n              return copyTextToClipboard(noSpaces);\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                \"default\": false,\n                success: _context.t1\n              };\n              (0, _context.t0)(_context.t2);\n              setTimeout(function () {\n                setCopyResut({\n                  \"default\": true,\n                  success: false\n                });\n              }, 1000);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCopyToClipboard(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React__default.createElement(\"a\", {\n    href: '/#',\n    onClick: handleCopyToClipboard,\n    className: \"side-action text-secondary \" + className\n  }, copyResult[\"default\"] || !copyResult.success ? React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icons.faCopy\n  }) : React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icons.faCheck,\n    className: 'text-primary-highlight'\n  }));\n};\n\nvar CopyButton$1 = /*#__PURE__*/withClassNameWrapper(CopyButton);\n\nvar Trim = function Trim(_ref) {\n  var text = _ref.text,\n      _ref$dataTestId = _ref.dataTestId,\n      dataTestId = _ref$dataTestId === void 0 ? '' : _ref$dataTestId;\n\n  var _React$useState = React__default.useState(false),\n      overflow = _React$useState[0],\n      setOverflow = _React$useState[1];\n\n  var trimRef = React__default.useRef(document.createElement('span'));\n  var hiddenTextRef = React__default.useRef(document.createElement('span'));\n  var listener = useCallback(debounce$1(function () {\n    if (trimRef.current && hiddenTextRef.current) {\n      var diff = hiddenTextRef.current.offsetWidth - trimRef.current.offsetWidth;\n      setOverflow(diff > 1);\n    }\n  }, 300), []);\n\n  var addWindowResizeListener = function addWindowResizeListener() {\n    window.addEventListener('resize', listener);\n    return function () {\n      window.removeEventListener('resize', listener);\n    };\n  };\n\n  React__default.useEffect(addWindowResizeListener);\n  React__default.useEffect(function () {\n    listener();\n  }, []);\n  return React__default.createElement(\"span\", {\n    ref: trimRef,\n    className: \"trim \" + (overflow ? 'overflow' : ''),\n    \"data-testid\": dataTestId\n  }, React__default.createElement(\"span\", {\n    ref: hiddenTextRef,\n    className: 'hidden-text-ref'\n  }, text), overflow ? React__default.createElement(React__default.Fragment, null, React__default.createElement(\"span\", {\n    className: 'left'\n  }, React__default.createElement(\"span\", null, String(text).substring(0, Math.floor(text.length / 2)))), React__default.createElement(\"span\", {\n    className: 'ellipsis'\n  }, \"...\"), React__default.createElement(\"span\", {\n    className: 'right'\n  }, React__default.createElement(\"span\", null, String(text).substring(Math.ceil(text.length / 2))))) : React__default.createElement(\"span\", null, text));\n};\n\nvar Trim$1 = /*#__PURE__*/withClassNameWrapper(Trim);\n\nvar TxDetails = function TxDetails(_ref) {\n  var title = _ref.title,\n      transactions = _ref.transactions,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'tx-details' : _ref$className,\n      _ref$isTimedOut = _ref.isTimedOut,\n      isTimedOut = _ref$isTimedOut === void 0 ? false : _ref$isTimedOut,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    title: 'mb-0',\n    statusTransactions: 'mb-2 mt-1',\n    iconSuccess: 'mr-1 text-secondary',\n    iconFailed: 'mr-1 text-secondary',\n    trimContainer: 'text-nowrap trim-fs-sm mr-3',\n    iconPending: 'mr-1 text-secondary fa-spin slow-spin',\n    item: 'tx-description d-flex justify-content-start align-items-center'\n  });\n  var iconSuccessData = {\n    icon: icons.faCheck,\n    classNames: generatedClasses.iconSuccess\n  };\n  var iconFailedData = {\n    icon: icons.faTimes,\n    classNames: generatedClasses.iconSuccess\n  };\n  var iconPendingData = {\n    icon: icons.faCircleNotch,\n    classNames: generatedClasses.iconPending\n  };\n  var iconData = {\n    pending: iconPendingData,\n    success: iconSuccessData,\n    completed: iconSuccessData,\n    fail: iconFailedData,\n    invalid: iconFailedData,\n    timedOut: iconFailedData\n  };\n  return React__default.createElement(React__default.Fragment, null, title && React__default.createElement(\"div\", {\n    className: generatedClasses.title\n  }, title), React__default.createElement(\"div\", {\n    className: generatedClasses.statusTransactions\n  }, transactions.filter(function (tx) {\n    return !isServerTransactionPending(tx.status);\n  }).length, ' ', \"/ \", transactions.length, \" transactions processed\"), transactions.map(function (_ref2) {\n    var hash = _ref2.hash,\n        status = _ref2.status;\n    var iconSrc = iconData[status];\n    return React__default.createElement(\"div\", {\n      className: generatedClasses.item,\n      key: hash\n    }, !isTimedOut && iconSrc != null && React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n      icon: iconSrc.icon,\n      className: iconSrc.classNames\n    }), React__default.createElement(\"span\", {\n      className: generatedClasses.trimContainer,\n      style: {\n        width: '10rem'\n      }\n    }, React__default.createElement(Trim$1, {\n      text: hash\n    })), React__default.createElement(CopyButton$1, {\n      text: hash\n    }), !isServerTransactionPending(status) && React__default.createElement(ExplorerLink$1, {\n      page: \"/transactions/\" + hash,\n      className: 'ml-2'\n    }));\n  }));\n};\n\nvar TxDetails$1 = /*#__PURE__*/withClassNameWrapper(TxDetails);\nvar averageTxDurationMs = 6000;\nvar crossShardRounds = 5;\n\nvar TransactionToast = function TransactionToast(_ref) {\n  var toastId = _ref.toastId,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'transaction-toast' : _ref$className,\n      _ref$withTxNonce = _ref.withTxNonce,\n      withTxNonce = _ref$withTxNonce === void 0 ? false : _ref$withTxNonce,\n      transactions = _ref.transactions,\n      status = _ref.status,\n      onClose = _ref.onClose,\n      startTimeProgress = _ref.startTimeProgress,\n      endTimeProgress = _ref.endTimeProgress,\n      lifetimeAfterSuccess = _ref.lifetimeAfterSuccess;\n  var ref = useRef(null);\n\n  var _useState = useState(true),\n      shouldRender = _useState[0],\n      setShouldRender = _useState[1];\n\n  var transactionDisplayInfo = useGetTransactionDisplayInfo(toastId);\n  var accountShard = useSelector(shardSelector);\n  var _transactionDisplayIn = transactionDisplayInfo.errorMessage,\n      errorMessage = _transactionDisplayIn === void 0 ? 'Transaction failed' : _transactionDisplayIn,\n      _transactionDisplayIn2 = transactionDisplayInfo.timedOutMessage,\n      timedOutMessage = _transactionDisplayIn2 === void 0 ? 'Transaction timed out' : _transactionDisplayIn2,\n      _transactionDisplayIn3 = transactionDisplayInfo.successMessage,\n      successMessage = _transactionDisplayIn3 === void 0 ? 'Transaction successful' : _transactionDisplayIn3,\n      _transactionDisplayIn4 = transactionDisplayInfo.processingMessage,\n      processingMessage = _transactionDisplayIn4 === void 0 ? 'Processing transaction' : _transactionDisplayIn4;\n  var isSameShard = useMemo(function () {\n    return transactions.reduce(function (prevTxIsSameShard, _ref2) {\n      var receiver = _ref2.receiver,\n          data = _ref2.data;\n      var receiverAddress = getAddressFromDataField({\n        receiver: receiver,\n        data: data\n      });\n\n      if (receiverAddress == null) {\n        return prevTxIsSameShard;\n      }\n\n      return prevTxIsSameShard && isCrossShardTransaction({\n        receiverAddress: receiverAddress,\n        senderShard: accountShard\n      });\n    }, true);\n  }, [transactions, accountShard]);\n  var shardAdjustedDuration = isSameShard ? averageTxDurationMs : crossShardRounds * averageTxDurationMs;\n  var transactionDuration = (transactionDisplayInfo == null ? void 0 : transactionDisplayInfo.transactionDuration) || shardAdjustedDuration;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    toastFooter: 'mb-0 text-break',\n    details: 'media-body flex-grow-1',\n    toastContainer: 'w-100 media p-2',\n    wrapper: 'toast-visible clickable',\n    toastHeader: 'd-flex justify-content-between mb-1',\n    iconContainer: 'align-self-center ml-2 mr-2 pr-1',\n    title: 'm-0 font-weight-normal text-nowrap text-truncate',\n    closeButton: 'close d-flex side-action align-items-center mx-2 outline-0'\n  });\n\n  var _useMemo = useMemo(function () {\n    var startTime = startTimeProgress || moment$1().unix();\n    var endTime = endTimeProgress || moment$1().add(Number(transactionDuration), 'milliseconds').unix();\n    return [startTime, endTime];\n  }, []),\n      startTime = _useMemo[0],\n      endTime = _useMemo[1];\n\n  var progress = {\n    startTime: startTime,\n    endTime: endTime\n  };\n  var successToastData = {\n    id: toastId,\n    icon: icons.faCheck,\n    expires: 30000,\n    hasCloseButton: true,\n    title: successMessage,\n    iconClassName: 'bg-success'\n  };\n  var pendingToastData = {\n    id: toastId,\n    expires: false,\n    icon: icons.faHourglass,\n    hasCloseButton: false,\n    title: processingMessage,\n    iconClassName: 'bg-warning'\n  };\n  var failToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: errorMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-danger'\n  };\n  var timedOutToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: timedOutMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-warning'\n  };\n  var isPending = getIsTransactionPending(status);\n  var isTimedOut = getIsTransactionTimedOut(status);\n  var toatsOptionsData = {\n    signed: pendingToastData,\n    sent: pendingToastData,\n    pending: pendingToastData,\n    success: successToastData,\n    completed: successToastData,\n    cancelled: failToastData,\n    fail: failToastData,\n    timedOut: timedOutToastData\n  };\n  var toastDataState = toatsOptionsData[status];\n\n  var handleDeleteToast = function handleDeleteToast() {\n    setShouldRender(false);\n    onClose == null ? void 0 : onClose(toastId);\n  };\n\n  if (!shouldRender || transactions == null) {\n    return null;\n  }\n\n  return React__default.createElement(RB.Toast, {\n    ref: ref,\n    className: generatedClasses.wrapper,\n    key: toastId\n  }, React__default.createElement(Progress$1, {\n    key: toastId,\n    id: toastId,\n    progress: progress,\n    expiresIn: lifetimeAfterSuccess,\n    done: !isPending || isTimedOut\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.toastContainer\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.iconContainer\n  }, React__default.createElement(IconState$1, {\n    iconSize: '2x',\n    icon: toastDataState.icon,\n    className: toastDataState.iconClassName\n  }), withTxNonce && transactions.map(function (tx) {\n    return React__default.createElement(\"p\", {\n      key: tx.nonce.valueOf()\n    }, tx.nonce.valueOf());\n  })), React__default.createElement(\"div\", {\n    className: generatedClasses.details,\n    style: {\n      minWidth: 0\n    }\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.toastHeader\n  }, React__default.createElement(\"h5\", {\n    className: generatedClasses.title\n  }, toastDataState.title), !isPending && React__default.createElement(\"button\", {\n    type: 'button',\n    className: generatedClasses.closeButton,\n    onClick: handleDeleteToast\n  }, React__default.createElement(ReactFontawesome$1.FontAwesomeIcon, {\n    icon: icons.faTimes,\n    size: 'xs'\n  }))), React__default.createElement(\"div\", {\n    className: generatedClasses.toastFooter\n  }, React__default.createElement(TxDetails$1, {\n    transactions: transactions,\n    title: title,\n    isTimedOut: isTimedOut\n  }))))));\n};\n\nvar TransactionToast$1 = /*#__PURE__*/withClassNameWrapper(TransactionToast);\n\nfunction TransactionsToastList(_ref) {\n  var _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$withTxNonce = _ref.withTxNonce,\n      withTxNonce = _ref$withTxNonce === void 0 ? false : _ref$withTxNonce,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'transactions-toast-list' : _ref$className,\n      pendingTransactions = _ref.pendingTransactions,\n      signedTransactions = _ref.signedTransactions,\n      successfulToastLifetime = _ref.successfulToastLifetime;\n\n  var _useState = useState([]),\n      toastsIds = _useState[0],\n      setToastsIds = _useState[1];\n\n  var pendingTransactionsFromStore = useGetPendingTransactions().pendingTransactions;\n  var signedTransactionsFromStore = useGetSignedTransactions().signedTransactions;\n  var pendingTransactionsToRender = pendingTransactions || pendingTransactionsFromStore;\n  var signedTransactionsToRender = signedTransactions || signedTransactionsFromStore;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'toast-messages d-flex flex-column align-items-center justify-content-sm-end',\n    toast: ''\n  });\n  var mappedToastsList = toastsIds == null ? void 0 : toastsIds.map(function (toastId) {\n    var currentTx = signedTransactionsToRender[toastId];\n\n    if (currentTx == null || (currentTx == null ? void 0 : currentTx.transactions) == null || (currentTx == null ? void 0 : currentTx.status) == null) {\n      return null;\n    }\n\n    var transactions = currentTx.transactions,\n        status = currentTx.status;\n    return React__default.createElement(TransactionToast$1, {\n      className: className,\n      key: toastId,\n      transactions: transactions,\n      status: status,\n      toastId: toastId,\n      withTxNonce: withTxNonce,\n      lifetimeAfterSuccess: successfulToastLifetime\n    });\n  });\n\n  var mapPendingSignedTransactions = function mapPendingSignedTransactions() {\n    var newToasts = [].concat(toastsIds);\n\n    for (var sessionId in pendingTransactionsToRender) {\n      var hasToast = toastsIds.includes(sessionId);\n\n      if (!hasToast) {\n        newToasts.push(sessionId);\n      }\n    }\n\n    setToastsIds(newToasts);\n  };\n\n  var fetchSessionStorageToasts = function fetchSessionStorageToasts() {\n    var sessionStorageToastsIds = getToastsIdsFromStorage();\n\n    if (sessionStorageToastsIds) {\n      var newToasts = [].concat(toastsIds, sessionStorageToastsIds);\n      setToastsIds(newToasts);\n    }\n  };\n\n  var saveSessionStorageToasts = function saveSessionStorageToasts() {\n    var shouldSaveLocalToasts = Boolean(toastsIds.length);\n\n    if (!shouldSaveLocalToasts) {\n      return;\n    }\n\n    setToastsIdsToStorage(toastsIds);\n  };\n\n  useEffect(function () {\n    fetchSessionStorageToasts();\n    return function () {\n      saveSessionStorageToasts();\n    };\n  }, []);\n  useEffect(function () {\n    mapPendingSignedTransactions();\n  }, [pendingTransactionsToRender]);\n  return React__default.createElement(\"div\", {\n    className: generatedClasses.wrapper\n  }, mappedToastsList);\n}\n\nvar index$6 = /*#__PURE__*/withClassNameWrapper(TransactionsToastList);\nvar _excluded$1 = [\"amount\", \"usd\"];\n\nvar UsdValue = function UsdValue(props) {\n  var amount = props.amount,\n      usd = props.usd,\n      dataTestId = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var value = \"\\u2248 $\" + getUsdValue({\n    amount: amount,\n    usd: usd\n  });\n  return createElement(\"small\", Object.assign({\n    className: 'form-text text-secondary mt-0'\n  }, dataTestId), \"\" + amount === '0' ? '= $0' : value);\n};\n\nvar platform = {};\n\ntry {\n  platform = /*#__PURE__*/require('platform');\n} catch (err) {}\n\nvar platform$1 = platform;\nvar qrcode = {};\n\ntry {\n  qrcode = /*#__PURE__*/require('qrcode');\n} catch (err) {}\n\nvar QRCode = qrcode;\n\nvar _g$2;\n\nfunction _extends$3() {\n  _extends$3 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends$3.apply(this, arguments);\n}\n\nvar SvgLightning = function SvgLightning(props) {\n  return /*#__PURE__*/createElement(\"svg\", _extends$3({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 31.114 44.981\",\n    width: 16,\n    height: 16\n  }, props), _g$2 || (_g$2 = /*#__PURE__*/createElement(\"g\", {\n    fillRule: \"evenodd\",\n    fill: \"#fff\"\n  }, /*#__PURE__*/createElement(\"path\", {\n    d: \"m20.547 1.001-3.832 17.8H7.054Z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    d: \"m31.41 17.802-7.053 9.379H0l7.054-9.379Z\"\n  }), /*#__PURE__*/createElement(\"path\", {\n    d: \"m24.357 26.18-13.493 17.8 3.832-17.8Z\"\n  }))));\n};\n\nfunction WalletConnectLoginContainer(_ref) {\n  var _platform$os, _platform$os2;\n\n  var callbackRoute = _ref.callbackRoute,\n      loginButtonText = _ref.loginButtonText,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Maiar Login' : _ref$title,\n      _ref$logoutRoute = _ref.logoutRoute,\n      logoutRoute = _ref$logoutRoute === void 0 ? '/unlock' : _ref$logoutRoute,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'wallect-connect-login-modal' : _ref$className,\n      _ref$lead = _ref.lead,\n      lead = _ref$lead === void 0 ? 'Scan the QR code using Maiar' : _ref$lead,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$wrapContentInsid = _ref.wrapContentInsideModal,\n      wrapContentInsideModal = _ref$wrapContentInsid === void 0 ? true : _ref$wrapContentInsid,\n      redirectAfterLogin = _ref.redirectAfterLogin,\n      token = _ref.token,\n      onClose = _ref.onClose;\n\n  var _useWalletConnectLogi = useWalletConnectLogin({\n    logoutRoute: logoutRoute,\n    callbackRoute: callbackRoute,\n    token: token,\n    redirectAfterLogin: redirectAfterLogin,\n    shouldLoginUser: true\n  }),\n      initLoginWithWalletConnect = _useWalletConnectLogi[0],\n      error = _useWalletConnectLogi[1].error,\n      _useWalletConnectLogi2 = _useWalletConnectLogi[2],\n      uriDeepLink = _useWalletConnectLogi2.uriDeepLink,\n      walletConnectUri = _useWalletConnectLogi2.walletConnectUri;\n\n  var _useState = useState(''),\n      qrCodeSvg = _useState[0],\n      setQrCodeSvg = _useState[1];\n\n  var isMobileDevice = (platform$1 == null ? void 0 : (_platform$os = platform$1.os) == null ? void 0 : _platform$os.family) === 'iOS' || (platform$1 == null ? void 0 : (_platform$os2 = platform$1.os) == null ? void 0 : _platform$os2.family) === 'Android';\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'btn btn-primary px-sm-4 m-1 mx-sm-3',\n    loginText: 'text-left',\n    container: 'm-auto login-container',\n    card: 'card my-3 text-center',\n    cardBody: 'card-body p-4 mx-lg-4',\n    qrCodeSvgContainer: 'mx-auto mb-3',\n    title: 'mb-3',\n    leadText: 'lead mb-0',\n    mobileLoginButton: 'btn btn-primary d-inline-flex align-items-center px-4 mt-4',\n    mobileLoginButtonIcon: 'mr-2',\n    errorMessage: 'text-danger d-flex justify-content-center align-items-center'\n  });\n\n  var generateQRCode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var svg;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (walletConnectUri) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return QRCode.toString(walletConnectUri, {\n                type: 'svg'\n              });\n\n            case 4:\n              svg = _context.sent;\n              setQrCodeSvg(svg);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function generateQRCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    generateQRCode();\n  }, [walletConnectUri]);\n  useEffect(function () {\n    initLoginWithWalletConnect();\n  }, []);\n  var content = React__default.createElement(\"div\", {\n    className: generatedClasses.container\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.root\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.card\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.cardBody\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.qrCodeSvgContainer,\n    dangerouslySetInnerHTML: {\n      __html: qrCodeSvg\n    },\n    style: {\n      width: '15rem',\n      height: '15rem'\n    }\n  }), React__default.createElement(\"h4\", {\n    className: generatedClasses.title\n  }, title), isMobileDevice ? React__default.createElement(React__default.Fragment, null, React__default.createElement(\"p\", {\n    className: generatedClasses.leadText\n  }, loginButtonText), React__default.createElement(\"a\", {\n    id: 'accessWalletBtn',\n    \"data-testid\": 'accessWalletBtn',\n    className: generatedClasses.mobileLoginButton,\n    href: uriDeepLink || undefined,\n    rel: 'noopener noreferrer nofollow',\n    target: '_blank'\n  }, React__default.createElement(SvgLightning, {\n    className: generatedClasses.mobileLoginButtonIcon,\n    style: {\n      width: '0.9rem',\n      height: '0.9rem'\n    }\n  }), title)) : React__default.createElement(\"p\", {\n    className: generatedClasses.leadText\n  }, lead), React__default.createElement(\"div\", null, error && React__default.createElement(\"p\", {\n    className: generatedClasses.errorMessage\n  }, error))))));\n  return wrapContentInsideModal ? React__default.createElement(ModalContainer, {\n    title: 'Login with Maiar',\n    className: className,\n    onClose: onClose\n  }, content) : content;\n}\n\nvar WalletConnectLoginContainer$1 = /*#__PURE__*/withClassNameWrapper(WalletConnectLoginContainer);\n\nvar WalletConnectLoginButton = function WalletConnectLoginButton(_ref) {\n  var children = _ref.children,\n      callbackRoute = _ref.callbackRoute,\n      onModalOpens = _ref.onModalOpens,\n      onModalCloses = _ref.onModalCloses,\n      _ref$loginButtonText = _ref.loginButtonText,\n      loginButtonText = _ref$loginButtonText === void 0 ? 'Maiar App' : _ref$loginButtonText,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Maiar Login' : _ref$title,\n      _ref$logoutRoute = _ref.logoutRoute,\n      logoutRoute = _ref$logoutRoute === void 0 ? '/unlock' : _ref$logoutRoute,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$wrapContentInsid = _ref.wrapContentInsideModal,\n      wrapContentInsideModal = _ref$wrapContentInsid === void 0 ? true : _ref$wrapContentInsid,\n      _ref$redirectAfterLog = _ref.redirectAfterLogin,\n      redirectAfterLogin = _ref$redirectAfterLog === void 0 ? false : _ref$redirectAfterLog,\n      buttonClassName = _ref.buttonClassName,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'wallect-connect-login' : _ref$className,\n      _ref$lead = _ref.lead,\n      lead = _ref$lead === void 0 ? 'Scan the QR code using Maiar' : _ref$lead,\n      token = _ref.token,\n      _ref$hideButtonWhenMo = _ref.hideButtonWhenModalOpens,\n      hideButtonWhenModalOpens = _ref$hideButtonWhenMo === void 0 ? false : _ref$hideButtonWhenMo;\n\n  var _useState = useState(false),\n      showLoginModal = _useState[0],\n      setShowLoginModal = _useState[1];\n\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: \"btn btn-primary px-sm-4 m-1 mx-sm-3 \" + (buttonClassName != null ? buttonClassName : ''),\n    loginText: 'text-left'\n  });\n\n  var handleOpenModal = function handleOpenModal() {\n    setShowLoginModal(true);\n    onModalOpens == null ? void 0 : onModalOpens();\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setShowLoginModal(false);\n    onModalCloses == null ? void 0 : onModalCloses();\n  };\n\n  var shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n  return React__default.createElement(Fragment, null, shouldRenderButton && React__default.createElement(\"button\", {\n    onClick: handleOpenModal,\n    className: generatedClasses.wrapper\n  }, children || React__default.createElement(\"span\", {\n    className: generatedClasses.loginText\n  }, loginButtonText)), showLoginModal && React__default.createElement(WalletConnectLoginContainer$1, {\n    callbackRoute: callbackRoute,\n    loginButtonText: loginButtonText,\n    title: title,\n    token: token,\n    className: className,\n    logoutRoute: logoutRoute,\n    lead: lead,\n    wrapContentInsideModal: wrapContentInsideModal,\n    redirectAfterLogin: redirectAfterLogin,\n    onClose: handleCloseModal\n  }));\n};\n\nvar WalletConnectLoginButton$1 = /*#__PURE__*/withClassNameWrapper(WalletConnectLoginButton);\n\nvar WebWalletLoginButton = function WebWalletLoginButton(_ref) {\n  var children = _ref.children,\n      token = _ref.token,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'web-wallet-login' : _ref$className,\n      callbackRoute = _ref.callbackRoute,\n      buttonClassName = _ref.buttonClassName,\n      _ref$loginButtonText = _ref.loginButtonText,\n      loginButtonText = _ref$loginButtonText === void 0 ? 'Elrond Web Wallet' : _ref$loginButtonText,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa;\n\n  var _useWebWalletLogin = useWebWalletLogin({\n    callbackRoute: callbackRoute,\n    token: token\n  }),\n      onInitiateLogin = _useWebWalletLogin[0];\n\n  var classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: \"btn btn-primary px-sm-4 m-1 mx-sm-3 \" + (buttonClassName != null ? buttonClassName : ''),\n    loginText: 'text-left'\n  });\n\n  var handleLogin = function handleLogin() {\n    onInitiateLogin();\n  };\n\n  return React__default.createElement(\"button\", {\n    onClick: handleLogin,\n    className: classes.wrapper\n  }, children || React__default.createElement(\"span\", {\n    className: classes.loginText\n  }, loginButtonText));\n};\n\nvar WebWalletLoginButton$1 = /*#__PURE__*/withClassNameWrapper(WebWalletLoginButton);\n\nvar UnlockPage = function UnlockPage(_ref) {\n  var loginRoute = _ref.loginRoute,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Login' : _ref$title,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'unlock-page' : _ref$className,\n      _ref$shouldRenderDefa = _ref.shouldRenderDefaultCss,\n      shouldRenderDefaultCss = _ref$shouldRenderDefa === void 0 ? true : _ref$shouldRenderDefa,\n      _ref$LedgerLoginButto = _ref.LedgerLoginButtonText,\n      LedgerLoginButtonText = _ref$LedgerLoginButto === void 0 ? 'Ledger' : _ref$LedgerLoginButto,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? 'Pick a login method' : _ref$description,\n      _ref$WalletConnectLog = _ref.WalletConnectLoginButtonText,\n      WalletConnectLoginButtonText = _ref$WalletConnectLog === void 0 ? 'Maiar' : _ref$WalletConnectLog,\n      _ref$ExtensionLoginBu = _ref.ExtensionLoginButtonText,\n      ExtensionLoginButtonText = _ref$ExtensionLoginBu === void 0 ? 'Extension' : _ref$ExtensionLoginBu,\n      _ref$WebWalletLoginBu = _ref.WebWalletLoginButtonText,\n      WebWalletLoginButtonText = _ref$WebWalletLoginBu === void 0 ? 'Web wallet' : _ref$WebWalletLoginBu;\n  var generatedClasses = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: \"home d-flex flex-fill align-items-center \" + wrapperClassName,\n    title: 'mb-4',\n    description: 'mb-4',\n    cardContainer: 'm-auto',\n    card: 'card my-4 text-center',\n    cardBody: 'card-body py-4 px-2 px-sm-2 mx-lg-4'\n  });\n\n  var _useGetLoginInfo = useGetLoginInfo(),\n      isLoggedIn = _useGetLoginInfo.isLoggedIn;\n\n  React__default.useEffect(function () {\n    if (isLoggedIn) {\n      window.location.href = loginRoute;\n    }\n  }, [isLoggedIn]);\n  return React__default.createElement(\"div\", {\n    className: generatedClasses.wrapper\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.cardContainer\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.card\n  }, React__default.createElement(\"div\", {\n    className: generatedClasses.cardBody\n  }, React__default.createElement(\"h4\", {\n    className: generatedClasses.title\n  }, title), React__default.createElement(\"p\", {\n    className: generatedClasses.description\n  }, description), React__default.createElement(ExtensionLoginButton$1, {\n    callbackRoute: loginRoute,\n    loginButtonText: ExtensionLoginButtonText\n  }), React__default.createElement(WebWalletLoginButton$1, {\n    callbackRoute: loginRoute,\n    loginButtonText: WebWalletLoginButtonText\n  }), React__default.createElement(LedgerLoginButton$1, {\n    loginButtonText: LedgerLoginButtonText,\n    callbackRoute: loginRoute\n  }), React__default.createElement(WalletConnectLoginButton$1, {\n    callbackRoute: loginRoute,\n    loginButtonText: WalletConnectLoginButtonText\n  })))));\n};\n\nvar index$7 = /*#__PURE__*/withClassNameWrapper(UnlockPage);\nvar index$8 = {\n  __proto__: null,\n  UnlockPage: index$7\n};\nvar index$9 = {\n  __proto__: null,\n  ExplorerLink: ExplorerLink$1,\n  Denominate: Denominate$1,\n  PageState: PageState$1,\n  ExtensionLoginButton: ExtensionLoginButton$1,\n  LedgerLoginButton: LedgerLoginButton$1,\n  LedgerLoginContainer: LedgerLoginContainer$1,\n  NotificationModal: NotificationModal,\n  SignTransactionsModals: index$5,\n  SignWithLedgerModal: SignWithLedgerModal,\n  SignWithDeviceModal: SignWithDeviceModal,\n  SignWithExtensionModal: SignWithExtensionModal,\n  TransactionsToastList: index$6,\n  TransactionToast: TransactionToast$1,\n  WalletConnectLoginButton: WalletConnectLoginButton$1,\n  WalletConnectLoginContainer: WalletConnectLoginContainer$1,\n  WebWalletLoginButton: WebWalletLoginButton$1,\n  Trim: Trim$1,\n  UsdValue: UsdValue,\n  ProgressSteps: ProgressSteps,\n  DappCorePages: index$8\n};\nvar apiProvider = null;\n\nfunction initializeApiProvider(networkConfig) {\n  var initializationNetworkConfig = networkConfig || networkSelector(store.getState());\n  apiProvider = new ApiProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n  return apiProvider;\n}\n\nfunction getApiProvider() {\n  if (apiProvider == null) {\n    return initializeApiProvider();\n  } else {\n    return apiProvider;\n  }\n}\n\nvar mnemonicWords = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis', 'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz', 'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle', 'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic', 'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow', 'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future', 'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym', 'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid', 'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory', 'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just', 'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know', 'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics', 'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth', 'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut', 'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone', 'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid', 'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote', 'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural', 'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system', 'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical', 'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility', 'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage', 'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong', 'yard', 'year', 'yellow', 'you', 'young', 'youth', 'zebra', 'zero', 'zone', 'zoo'];\n\nfunction getMnemonicWords() {\n  return mnemonicWords;\n}\n\nexport { AppInitializer, AuthenticatedRoutesWrapper, DappProvider, index$9 as DappUI, ESDTTransferTypes, EnvironmentsEnum, LoginMethodsEnum, NotificationTypesEnum, TransactionBatchStatusesEnum, TransactionServerStatusesEnum, TransactionTypesEnum, TypesOfSmartContractCallsEnum, addressIsValid, index$3 as apiCalls, buildUrlParams$1 as buildUrlParams, builtCallbackUrl, calculateFeeLimit, completedServerTransactionsStates, index as constants, decodeBase64, decodePart, denominate, encodeToBase64, failBatchTransactionsStates, failServerTransactionsStates, fallbackNetworkConfigurations, getAccount, getAccountBalance, getAccountProvider, getAccountProviderType, getAddress, getAddressFromDataField, getApiProvider, getChainID, getEgldLabel, getExternalProvider, getGeneratedClasses, getIdentifierType, getIsLoggedIn, getIsProviderEqualTo, getIsTransactionCompleted, getIsTransactionFailed, getIsTransactionPending, getIsTransactionSuccessful, getIsTransactionTimedOut, getLatestNonce, getMnemonicWords, getNetworkConfig, getProxyProvider, getShardOfAddress, getTokenFromData, getUsdValue, isBatchTransactionFailed, isBatchTransactionPending, isBatchTransactionSuccessful, isBatchTransactionTimedOut, isContract, isSelfESDTContract, isServerTransactionFailed, isServerTransactionPending, isServerTransactionSuccessful, isStringBase64, isTokenTransfer, logarithmicRest, index$1 as loginServices, loginWithExternalProvider, logout, index$4 as models, nominate, parseMultiEsdtTransferData, parseTransactionAfterSigning, pendingBatchTransactionsStates, pendingServerTransactionsStatuses, pipe, refreshAccount, sendTransactions, setNonce, signMessage, storage$1 as storage, stringIsFloat, stringIsInteger, successBatchTransactionsStates, successServerTransactionsStates, switchTrue, timedOutBatchTransactionsStates, index$2 as transactionServices, useCheckTransactionStatus, useGetAccountInfo, useGetAccountProvider, useGetLoginInfo, useGetNetworkConfig, useGetNotification, useGetPendingTransactions, useGetSignTransactionsError, useGetSignedTransactions, useGetTokenDetails, useGetTransactionDisplayInfo, useIdleTimer, useParseMultiEsdtTransferData, useParseSignedTransactions, useSignTransactions, useSignTransactionsWithDevice, useSignTransactionsWithLedger, useUpdateEffect, wrapperClassName };","map":{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants/errorsMessages.ts","../src/constants/network.ts","../src/constants/ledgerErrorCodes.ts","../src/constants/index.ts","../src/types/enums.ts","../src/providers/utils.ts","../src/providers/accountProvider.ts","../src/redux/commonActions.ts","../src/utils/storage/local.ts","../src/optionalPackages/moment.ts","../src/utils/storage/session.ts","../src/utils/storage/index.ts","../src/storage/local.ts","../src/redux/slices/loginInfoSlice.ts","../src/utils/internal/optionalRedirect.ts","../src/utils/internal/getBridgeAddressFromNetwork.ts","../src/utils/internal/getLedgerErrorCodes.ts","../src/redux/slices/networkConfigSlice.ts","../src/redux/slices/accountInfoSlice.ts","../src/utils/transactions/transactionStateByStatus.ts","../src/types/transactions.ts","../src/utils/decoders/decodePart.ts","../src/utils/decoders/base64Utils.ts","../src/utils/getAllStringOccurrences.ts","../src/utils/transactions/parseMultiEsdtTransferData.ts","../src/utils/account/addressIsValid.ts","../src/utils/transactions/getTokenFromData.ts","../src/utils/transactions/isTokenTransfer.ts","../src/utils/transactions/builtCallbackUrl.ts","../src/utils/transactions/parseTransactionAfterSigning.ts","../src/redux/slices/transactionsSlice.ts","../src/redux/slices/transactionsInfoSlice.ts","../src/redux/slices/modalsSlice.ts","../src/redux/selectors/helpers.ts","../src/redux/selectors/accountInfoSelectors.ts","../src/redux/selectors/loginInfoSelectors.ts","../src/redux/middlewares/loginSessionMiddleware.ts","../src/redux/reducers.ts","../src/redux/store.ts","../src/redux/selectors/networkConfigSelectors.ts","../src/models/newTransaction.ts","../src/redux/selectors/transactionsSelectors.ts","../src/redux/selectors/transactionsInfoSelectors.ts","../src/redux/selectors/modalsSelectors.ts","../src/utils/getIsLoggedIn.ts","../src/utils/logout.ts","../src/utils/buildUrlParams.ts","../src/utils/switchTrue.ts","../src/utils/network/getAccountProviderType.ts","../src/utils/network/getChainID.ts","../src/utils/network/getNetworkConfig.ts","../src/utils/network/getEgldLabel.ts","../src/utils/network/getIsProviderEqualTo.ts","../src/utils/account/getAddress.tsx","../src/providers/proxyProvider.ts","../src/utils/account/getAccount.tsx","../src/utils/account/setNonce.tsx","../src/utils/account/getLatestNonce.tsx","../src/utils/account/getAccountBalance.tsx","../src/utils/account/refreshAccount.tsx","../src/utils/account/getShardOfAddress.ts","../src/utils/account/signMessage.ts","../src/utils/account/loginWithExternalProvider.ts","../src/utils/math.ts","../src/utils/validation/stringIsInteger.ts","../src/utils/validation/stringIsFloat.ts","../src/utils/validation/getIdentifierType.ts","../src/utils/operations/pipe.ts","../src/utils/operations/denominate.ts","../src/utils/operations/nominate.ts","../src/utils/operations/calculateFeeLimit.ts","../src/utils/operations/getUsdValue.tsx","../src/utils/smartContracts.ts","../src/optionalPackages/classnames.ts","../src/utils/getGeneratedClasses.ts","../src/utils/wrapperClassName.ts","../src/redux/DappProviderContext.ts","../src/services/login/useExtensionLogin.ts","../src/services/login/useWebWalletLogin.ts","../src/services/login/useLedgerLogin.ts","../src/hooks/useUpdateEffect.ts","../src/services/login/useWalletConnectLogin.ts","../src/services/transactions/clearTransactions.ts","../src/services/transactions/utils.ts","../src/services/transactions/signTransactions.tsx","../src/services/transactions/transformAndSignTransactions.ts","../src/services/transactions/sendTransactions.ts","../src/services/transactions/hooks/useTrackTransactionStatus.ts","../src/services/transactions/hooks/useGetPendingTransactions.ts","../src/services/transactions/hooks/useGetFailedTransactions.ts","../src/services/transactions/hooks/useGetSuccessfulTransactions.ts","../src/services/transactions/hooks/useParseMultiEsdtTransferData.ts","../src/services/transactions/hooks/useGetActiveTransactionsStatus.ts","../src/services/transactions/hooks/useGetCompletedTransactions.ts","../src/components/ProviderInitializer.tsx","../src/apiCalls/transactions/sendSignedTransactions.ts","../src/apiCalls/transactions/getTransactionsByHashes.ts","../src/apiCalls/configuration/getServerConfiguration.ts","../src/apiCalls/configuration/getServerConfigurationForEnvironment.ts","../src/apiCalls/getScamAddressData.ts","../src/hooks/useGetNetworkConfig.ts","../src/hooks/useGetNotification.ts","../src/hooks/transactions/useGetTransactionDisplayInfo.ts","../src/hooks/transactions/useParseSignedTransactions.tsx","../src/hooks/transactions/useSignTransactions.tsx","../src/hooks/transactions/useGetSignedTransactions.ts","../src/optionalPackages/swr.ts","../src/hooks/transactions/useGetTokenDetails.tsx","../src/hooks/account/useGetAccountInfo.ts","../src/hooks/account/useGetLoginInfo.ts","../src/hooks/account/useGetAccountProvider.ts","../src/hooks/transactions/useSignTransactionsWithDevice.tsx","../src/hooks/transactions/useSignTransactionsWithLedger.tsx","../src/hooks/transactions/useGetSignTransactionsError.ts","../src/hooks/transactions/useCheckTransactionStatus/getPendingTransactions.ts","../src/hooks/transactions/useCheckTransactionStatus/manageFailedTransactions.ts","../src/hooks/transactions/useCheckTransactionStatus/manageTimedOutTransactions.ts","../src/hooks/transactions/useCheckTransactionStatus/checkBatch.ts","../src/hooks/transactions/useCheckTransactionStatus/useCheckTransactionStatus.ts","../src/hooks/useIdleTimer.tsx","../src/utils/account/getAccountShard.tsx","../src/wrappers/AppInitializer.tsx","../src/components/TransactionSender/index.ts","../src/components/TransactionsTracker/useTransactionsTracker.ts","../src/components/TransactionsTracker/index.tsx","../src/redux/DappProvider/CustomComponents.tsx","../src/redux/DappProvider/index.tsx","../src/wrappers/AuthenticatedRoutesWrapper/index.tsx","../src/models/TransactionParameter.ts","../src/wrappers/withClassNameWrapper.tsx","../src/UI/Denominate/index.tsx","../src/optionalPackages/fortawesome-free-solid-svg-icons.ts","../src/optionalPackages/react-fontawesome.ts","../src/UI/ExplorerLink/index.tsx","../src/UI/extension/LoginButton/index.tsx","../src/UI/ModalContainer/index.tsx","../src/UI/PageState/index.tsx","../src/UI/ledger/LoginModal/AddressRow.tsx","../src/UI/ledger/LoginModal/AddressTable.tsx","../src/UI/ledger/LoginModal/ConfirmAddress.tsx","../src/UI/ledger/LoginModal/LedgerConnect.tsx","../src/UI/ledger/LoginModal/index.tsx","../src/UI/ledger/LoginButton/index.tsx","../src/UI/NotificationModal/index.tsx","../src/UI/ProgressSteps/Dot.tsx","../src/UI/ProgressSteps/index.tsx","../src/UI/SignTransactionsModals/SignWithExtensionModal/index.tsx","../src/UI/TokenDetails/TokenSymbol/index.tsx","../src/UI/TokenDetails/index.tsx","../src/UI/TransactionData/index.tsx","../src/UI/SignTransactionsModals/SignWithDeviceModal/SignStep.tsx","../src/UI/SignTransactionsModals/SignWithDeviceModal/index.tsx","../src/UI/SignTransactionsModals/SignWithLedgerModal/index.tsx","../src/UI/SignTransactionsModals/SignWithWalletConnectModal/index.tsx","../src/UI/SignTransactionsModals/index.tsx","../src/storage/session.ts","../src/services/transactions/isCrossShardTransaction.ts","../src/UI/IconState/index.tsx","../src/UI/Progress/index.tsx","../src/UI/CopyButton/helpers/copyToClipboard.tsx","../src/UI/CopyButton/index.tsx","../src/UI/Trim/index.tsx","../src/UI/TxDetails/index.tsx","../src/UI/TransactionToast/index.tsx","../src/UI/TransactionsToastList/index.tsx","../src/UI/UsdValue/index.tsx","../src/optionalPackages/platform.ts","../src/optionalPackages/qrcode.ts","../src/UI/walletConnect/WalletConnectLoginContainer/index.tsx","../src/UI/walletConnect/WalletConnectLoginButton/index.tsx","../src/UI/webWallet/LoginButton/index.tsx","../src/UI/pages/UnlockPage/index.tsx","../src/providers/apiProvider.ts","../src/constants/mnemonicWords.ts"],"names":["undefined","ERROR_SIGNING","TRANSACTION_CANCELLED","ERROR_SIGNING_TX","PROVIDER_NOT_INTIALIZED","MISSING_PROVIDER_MESSAGE","DEFAULT_MIN_GAS_LIMIT","configEndpoint","fallbackNetworkConfigurations","devnet","id","chainId","name","egldLabel","egldDenomination","decimals","gasPerDataByte","walletConnectDeepLink","walletConnectBridgeAddresses","walletAddress","apiAddress","explorerAddress","apiTimeout","testnet","mainnet","ledgerErrorCodes","code","message","gasPriceModifier","gasLimit","gasPrice","denomination","version","ledgerContractDataEnabledValue","dappInitRoute","walletSignSession","TransactionServerStatusesEnum","TransactionBatchStatusesEnum","LoginMethodsEnum","NotificationTypesEnum","TypesOfSmartContractCallsEnum","EnvironmentsEnum","DAPP_INIT_ROUTE","getProviderType","provider","newWalletProvider","getLedgerConfiguration","initializedHwWalletP","hwApp","contractData","dataEnabled","notInitializedError","EmptyProvider","login","isInitialized","emptyProvider","accountProvider","externalProvider","setAccountProvider","setExternalProvider","setExternalProviderAsAccountProvider","getAccountProvider","getExternalProvider","logoutAction","createAction","loginAction","payload","localStorageKeys","loginExpiresAt","hasLocalStorage","setItem","key","data","expires","localStorage","String","getItem","item","deserializedItem","JSON","expired","moment","removeItem","require","sessionStorage","clear","storage","session","local","getNewLoginExpiresTimestamp","setLoginExpiresAt","expiresAt","initialState","loginMethod","walletConnectLogin","ledgerLogin","tokenLogin","walletLogin","extensionLogin","loginInfoSlice","createSlice","reducers","setLoginMethod","state","action","setTokenLogin","setTokenLoginSignature","setWalletLogin","setWalletConnectLogin","setLedgerLogin","extraReducers","builder","optionalRedirect","callbackUrl","shouldRedirect","setTimeout","window","getBridgeAddressFromNetwork","Math","ledgerAppErrorText","notConnectedCode","getLedgerErrorCodes","err","errorMessage","statusCode","defaultErrorMessage","defaultNetwork","walletConnectBridgeAddress","network","chainID","networkConfigSlice","initializeNetworkConfig","omit","setChainID","emptyAccount","balance","address","nonce","account","ledgerAccount","publicKey","walletConnectAccount","isAccountLoading","accountLoadingError","accountInfoSlice","setAddress","setAccount","setAccountNonce","setAccountShard","setLedgerAccount","updateLedgerAccount","setWalletConnectAccount","setIsAccountLoading","setAccountLoadingError","accountInfo","shard","pendingBatchTransactionsStates","successBatchTransactionsStates","failBatchTransactionsStates","timedOutBatchTransactionsStates","pendingServerTransactionsStatuses","successServerTransactionsStates","completedServerTransactionsStates","failServerTransactionsStates","getIsTransactionCompleted","status","getIsTransactionPending","isBatchTransactionPending","isServerTransactionPending","getIsTransactionSuccessful","isBatchTransactionSuccessful","isServerTransactionSuccessful","getIsTransactionFailed","isBatchTransactionFailed","isServerTransactionFailed","getIsTransactionTimedOut","isBatchTransactionTimedOut","TransactionTypesEnum","isUtf8","i","str","decodePart","part","decodedPart","hexPart","Buffer","isStringBase64","string","atob","encodeToBase64","btoa","decodeBase64","getAllStringOccurrences","startingIndices","indexOccurence","sourceStr","parseMultiEsdtTransferData","transactions","contractCallDataIndex","receiver","encodedTxCount","rest","txCount","itemIndex","txIndex","transaction","type","index","encodedNonce","isDifferentFromTxCount","hasInvalidNoOfAdSigns","adSignOccurences","tx","hasAdStart","scCallData","console","checkAddress","Boolean","addressIsValid","destinationAddress","isValidBach","canTransformToPublicKey","noData","tokenId","amount","decodeData","nonceIndex","amountIndex","parts","decodedParts","getTokenFromData","isTokenTransfer","nftTransfer","encodedToken","encodedAmount","collection","quantity","erdLabel","urlSearchParams","params","Object","nextUrlParams","builtCallbackUrl","urlParams","url","search","origin","pathname","buildUrlParams","parseTransactionAfterSigning","isLedger","TransactionVersion","TransactionOptions","parsedTransaction","signedTransactions","transactionsToSign","signTransactionsError","customTransactionInformationForSessionId","defaultCustomInformation","signWithoutSending","sessionInformation","redirectAfterSign","transactionsSlice","moveTransactionsToSignedState","sessionId","customTransactionInformation","clearSignedTransaction","clearTransactionToSign","updateSignedTransaction","updateSignedTransactions","updateSignedTransactionStatus","transactionHash","areTransactionsSuccessful","areTransactionsFailed","setTransactionsToSign","clearAllTransactionsToSign","clearAllSignedTransactions","setSignTransactionsError","parsedSignedTransactions","txTimestamp","expiration","isExpired","acc","defaultTransactionErrorMessage","defaultTransactionSuccessMessage","defaultTransactionProcessingMessage","defaultTransactionSubmittedMessage","signTransactionsSlice","setTransactionsDisplayInfo","transactionsDisplayInfo","successMessage","processingMessage","submittedMessage","transactionDuration","clearTransactionsInfoForSessionId","clearTransactionsInfo","modalsSlice","setTxSubmittedModal","setNotificationModal","clearTxSubmittedModal","clearNotificationModal","createDeepEqualSelector","createSelectorCreator","accountInfoSelector","addressSelector","accountSelector","accountBalanceSelector","accountNonceSelector","shardSelector","ledgerAccountSelector","isAccountLoadingSelector","loginInfoSelector","loginMethodSelector","isLoggedInSelector","walletConnectLoginSelector","ledgerLoginSelector","walletLoginSelector","whitelistedActions","throttledSetNewExpires","throttle","loginSessionMiddleware","next","appState","store","loginTimestamp","isLoggedIn","now","Date","networkConfig","loginInfo","modals","transactionsInfo","transactionsInfoPersistConfig","transactionsReducer","blacklist","persistReducer","rootReducer","combineReducers","localStorageReducers","migrations","persistConfig","whitelist","migrate","createMigrate","debug","configureStore","reducer","middleware","serializableCheck","ignoredActions","ignoredPaths","persistor","persistStore","networkConfigSelector","chainIDSelector","walletConnectBridgeAddressSelector","walletConnectDeepLinkSelector","networkSelector","apiNetworkSelector","egldLabelSelector","newTransaction","rawTransaction","dataPayload","TransactionPayload","value","Balance","sender","options","transactionsSelectors","signedTransactionsSelector","signTransactionsErrorSelector","selectTxByStatus","txBody","txStatusVerifier","pendingSignedTransactionsSelector","successfulTransactionsSelector","completedTransactionsSelector","failedTransactionsSelector","timedOutTransactionsSelector","transactionsToSignSelector","transactionStatusSelector","transactionSessionId","defaultTransactionInfo","transactionsInfoSelectors","transactionDisplayInfoSelector","Number","modalsSliceSelector","notificationModalSelector","getIsLoggedIn","providerType","isWalletProvider","needsCallbackUrl","onRedirect","switchTrue","object","defaultValue","obj","result","cur","getAccountProviderType","getChainID","getNetworkConfig","getEgldLabel","getIsProviderEqualTo","comparedProviderType","getAddress","loggedIn","resolve","proxyProvider","initializeProxyProvider","initializationNetworkConfig","timeout","getProxyProvider","proxy","getAccount","getAccountFromProxyProvider","setNonce","getLatestNonce","currentAccountNonce","isNaN","accountAddress","setNewAccount","accountData","initialized","isAddressOfMetachain","metachainPrefix","pubKeyPrefix","pubKey","zeroAddress","getShardOfAddress","numShards","maskHigh","parseInt","maskLow","lastByteOfPubKey","callbackRoute","signableMessage","signedMessage","encodeURIComponent","loginWithExternalProvider","extra","logarithmicRest","minp","maxp","minv","maxv","scale","position","stringIsInteger","positiveNumbersOnly","stringInteger","bNparsed","limit","stringIsFloat","wholes","number","esdtParts","nftParts","defaultResult","isEsdt","isNft","isEgld","getIdentifierType","identifier","pipe","previous","then","newValue","valueOf","BigNumber","ROUNDING_MODE","ROUND_FLOOR","denominate","input","configDenomination","configDecimals","showLastNonZeroDecimal","showIsLessThanDecimalsLabel","addCommas","token","bnBalance","integerPart","decimalPart","bNdecimalPart","decimalPlaces","shownDecimalsAreZero","formatted","formattedBalance","integerPartZero","numericPart","decimalSide","current","zeroPlaceholders","zeros","minAmount","nominate","customDenomination","createBalanceBuilder","TokenType","Fungible","placeholderData","from","to","calculateFeeLimit","minGasLimit","inputData","defaultGasPrice","validGasLimit","validGasPrice","parseFloat","bNfee","fee","getUsdValue","usd","sum","maximumFractionDigits","minimumFractionDigits","ESDTTransferTypes","isContract","isValid","extractedAddress","getAddressFromDataField","isExtractedAddressContractCall","isSelfESDTContract","isHexValidCharacters","isHexValidLength","restParts","isSelfTransaction","isCorrectESDTType","areDataPartsValid","parsedData","addressIndex","getAddressIndex","classnames","getGeneratedClasses","className","shouldRenderDefaultCss","defaultStyles","defaultClassNames","classNames","wrapperClassName","defaultContextValue","DappCoreContext","React","useDispatch","createDispatchHook","useSelector","createSelectorHook","useExtensionLogin","redirectAfterLogin","error","setError","useState","isLoading","setIsLoading","dispatch","initiateLogin","ExtensionProvider","isSuccessfullyInitialized","providerLoginData","signature","loginToken","extension","loginFailed","useWebWalletLogin","walletLoginData","loginData","failInitializeErrorText","defaultAddressesPerPage","useLedgerLogin","addressesPerPage","hwWalletP","startIndex","setStartIndex","accounts","setAccounts","setVersion","contractDataEnabled","setContractDataEnabled","selectedAddress","setSelectedAddress","showAddressList","setShowAddressList","loginType","ledger","onLoginFailed","loginUser","dispatchLoginActions","onConfirmSelectedAddress","hasContractDataEnabled","hwWalletProvider","fetchAccounts","ledgerData","onStartLogin","useEffect","onGoToPrevPage","onGoToNextPage","onSelectAddress","useUpdateEffect","effect","dependencies","isInitialMount","useRef","useWalletConnectLogin","logoutRoute","heartbeatInterval","wcUri","setWcUri","providerRef","hasWcUri","uriDeepLink","handleHeartbeat","interval","setInterval","clearInterval","generateWcUri","isProviderConnected","customMessage","method","handleOnLogout","handleOnLogin","hasSignature","loginActionData","walletconnect","heartbeatDisconnectInterval","logout","loginProvider","shouldGenerateWcUri","providerHandlers","onClientLogin","onClientLogout","newProvider","walletConnectUri","hasUri","wcUriWithToken","removeTransactionsToSign","removeSignedTransaction","removeAllSignedTransactions","removeAllTransactionsToSign","calcTotalFee","totalFee","signTransactions","networkConstants","accountBalance","storeChainId","transactionsPayload","Array","bNtotalFee","bNbalance","hasSufficientFunds","notificationPayload","iconClassName","title","description","hasValidChainId","signTransactionsPayload","ErrorCodesEnum","bNconfigGasLimit","bNgasPerDataByte","bNgasValue","bNgasLimit","calculateGasLimit","validatedReceiver","addr","transactionsChainId","completedTransactionsDelay","areComplexTransactions","txToSign","transformAndSignTransactions","useTrackTransactionStatus","transactionId","onSuccess","onFail","onCancelled","onTimedOut","onCompleted","transactionsBatch","isPending","isFailed","isTimedOut","isSuccessful","isCompleted","isCancelled","useGetPendingTransactions","pendingTransactions","pendingTransactionsArray","hasPendingTransactions","useGetFailedTransactions","failedTransactions","failedTransactionsArray","hasFailedTransactions","useGetSuccessfulTransactions","successfulTransactions","successfulTransactionsArray","hasSuccessfulTransactions","multiTxData","useParseMultiEsdtTransferData","parsedTransactionsByDataField","setParsedTransactions","allTransactions","setAllTransactions","multiTransactionData","allTxs","txData","multiTxs","newTx","trx","transactionIndex","idx","addTransactionDataToParsedInfo","extractTransactionESDTData","getTxInfoByDataField","useGetActiveTransactionsStatus","timedOutTransactions","completedTransactions","pending","timedOut","fail","success","completed","hasActiveTransactions","useGetCompletedTransactions","completedTransactionsArray","hasCompletedTransactions","ProviderInitializer","setLedgerData","initWalletLoginProvider","refreshChainID","initializeProvider","fetchAccount","setLedgerAccountInfo","getNetworkConfigFromProxyProvider","tryAuthenticateWalletUser","wallet","getInitializedHwWalletProvider","setLedgerProvider","ledgerConfig","setExtensionProvider","promises","response","Promise","hashes","responseData","withScResults","hash","previousStatus","txOnNetwork","invalidTransaction","results","hasStatusChanged","cleanApiAddress","configUrl","axios","fallbackConfig","config","getServerConfiguration","baseURL","useGetNetworkConfig","useGetNotification","notification","clearNotification","useGetTransactionDisplayInfo","toastId","useParseSignedTransactions","searchData","qs","signSessionId","history","document","useSignTransactions","savedCallback","hasTransactions","onAbort","clearSignInfo","isExtensionProvider","onCancel","isTxCancelled","signWithWallet","buildedCallbackUrl","signTransactionsWithProvider","redirectRoute","isCurrentRoute","shouldRedirectAfterSign","isProviderInitialized","hasSameTransactions","hasAllTransactionsSigned","shouldMoveTransactionsToSignedState","signedTransactionsArray","signed","cancelled","setTransactionNonces","latestNonce","proxyAccount","isSigningWithWebWallet","isSigningWithProvider","mappedTransactions","useGetSignedTransactions","hasSignedTransactions","swr","fetcher","useGetTokenDetails","tokenEndpoint","selectedToken","useSwr","tokenDenomination","tokenLabel","tokenAvatar","useGetAccountInfo","useGetLoginInfo","useGetAccountProvider","verifiedAddresses","useSignTransactionsWithDevice","verifyReceiverScam","currentStep","setCurrentStep","setSignedTransactions","currentTransaction","setCurrentTransaction","waitingForDevice","setWaitingForDevice","isLastTransaction","extractTransactionsInfo","dataField","transactionTokenInfo","notSender","verified","getScamAddressData","isTokenTransaction","receiverScamInfo","sign","signedTx","newSignedTx","newSignedTransactions","exising","reset","isFirst","existing","continueWithoutSigning","signTx","nextStep","onSignTransaction","onNext","onPrev","useSignTransactionsWithLedger","props","useGetSignTransactionsError","getPendingTransactions","timedOutHashes","manageFailedTransactions","resultWithError","returnMessage","manageTimedOutTransactions","retries","timeouts","serverTransaction","shouldRefreshBalance","retriesForThisHash","refreshAccount","getTransactionsByHash","serverTransactions","manageTransaction","useCheckTransactionStatus","checkTransactionStatus","pendingBatches","transactionBatch","checkBatch","getTimeout","debounce","useIdleTimer","minutes","onLogout","onIdle","useReactIdleTimer","AppInitializer","customNetworkConfig","children","environment","setInitialized","initializeNetwork","fetchConfigFromServer","customNetworkApiAddress","localConfig","fallbackApiAddress","serverConfig","apiConfig","initializeProviders","initializeApp","getAccountShard","TransactionSender","sendSignedTransactionsAsync","defaultSendSignedTxs","sendingRef","handleSendTransactions","sessionIds","skipSending","isSessionIdSigned","shouldSendCurrentSession","transactionsToSend","transactionObject","responseHashes","newStatus","newTransactions","submittedModalPayload","useTransactionsTracker","intervalRef","TransactionsTracker","CustomComponents","customComponents","transactionSender","transactionTracker","TxSender","TxTracker","DappProvider","context","loading","AuthenticatedRoutesWrapper","routes","unlockRoute","authenticatedRoutesRef","route","isOnAuthenticatedRoute","path","TransactionParameter","withClassNameWrapper","denominateInvalid","denominateValid","showLabel","denominatedValue","valueParts","hasNoDecimals","isNotZero","Denominate","DenominateWrapper","denominateProps","fontawesomeFreeSolidIcons","ReactFontawesome","ExplorerLink","page","text","href","target","icon","icons","faSearch","ExtensionLoginButton","buttonClassName","loginButtonText","onInitiateLogin","isFirefox","navigator","classes","wrapper","loginText","noExtensionButtonWrapper","noExtensionButtonContent","noExtensionButtonTitle","noExtensionButtonIcon","handleLogin","rel","faArrowRight","onClick","ModalContainer","noSpacer","onClose","ReactBootstrap","show","backdrop","onHide","animation","centered","size","faTimes","PageState","iconClass","dataTestId","iconBgClass","iconSize","generatedClasses","iconContainer","trimHash","keep","start","end","noBalance","AddressRow","setBalance","handleChange","checked","e","fetchBalance","getAccountBalance","onChange","role","htmlFor","ledgerWaitingText","AddressTable","cardBody","tableWrapper","tableContent","tableHeader","tableHeaderText","buttonsWrapper","arrowButton","confirmButton","faCircleNotch","disabled","faChevronLeft","faChevronRight","ConfirmAddress","noBorder","LedgerConnect","connectPageContent","wrapContentInsideModal","spinner","getContent","LedgerLoginButton","onModalOpens","onModalCloses","shouldRenderDefaultModalCss","hideButtonWhenModalOpens","showLoginModal","setShowLoginModal","shouldRenderButton","handleOpenModal","handleCloseModal","typedIcons","notificationTypesToIcons","defaultIcon","NotificationModal","showModal","onDone","Dot","color","ProgressSteps","totalSteps","dots","isCurrentStep","SignWithExtensionModal","handleClose","closeBtn","close","freeSolidIcons","faHourglass","Simple","Combined","small","getIdentifierWithoutNonce","tokenParts","src","isEgldTransfer","faDiamond","getDetails","symbol","label","getIcon","TokenDetails","Component","process","render","allOccurences","a","TransactionData","highlight","isScCall","output","encodedScCall","remainingDataFields","SignStep","transactionData","onCloseClick","signBtnLabel","denominatedAmount","scamReport","showProgressSteps","formGroup","formLabel","contentWrapper","tokenWrapper","tokenValue","scamReportIcon","tokenAmountLabel","tokenAmountValue","dataFormGroup","cancelButton","signButton","length","faExclamationTriangle","tokenlabel","SignWithDeviceModal","container","SignWithLedgerModal","SignWithWalletConnectModal","hasMultipleTransactions","CustomConfirmScreens","signError","signProps","SessionStorageKeysEnum","setToastsIdsToStorage","ids","getToastsIdsFromStorage","toastsIds","isCrossShardTransaction","receiverAddress","senderShard","senderAddress","receiverShard","IconState","half","Progress","progress","done","expiresIn","ref","removeTxFromSession","toastProgress","hasSessionStoredTx","saveToSession","getInitialData","totalSeconds","remaining","currentRemaining","percentRemaining","setPercentRemaining","maxPercent","perc","int","decrement","style","width","textArea","fallbackCopyTextToClipboard","CopyButton","copyResult","setCopyResut","handleCopyToClipboard","noSpaces","copyTextToClipboard","faCopy","faCheck","Trim","overflow","setOverflow","trimRef","hiddenTextRef","listener","useCallback","diff","addWindowResizeListener","TxDetails","statusTransactions","iconSuccess","iconFailed","trimContainer","iconPending","iconSuccessData","iconFailedData","iconPendingData","iconData","invalid","iconSrc","averageTxDurationMs","crossShardRounds","TransactionToast","withTxNonce","startTimeProgress","endTimeProgress","lifetimeAfterSuccess","shouldRender","setShouldRender","transactionDisplayInfo","accountShard","timedOutMessage","isSameShard","useMemo","prevTxIsSameShard","shardAdjustedDuration","toastFooter","details","toastContainer","toastHeader","closeButton","startTime","endTime","successToastData","hasCloseButton","pendingToastData","failToastData","timedOutToastData","toatsOptionsData","sent","toastDataState","handleDeleteToast","minWidth","successfulToastLifetime","setToastsIds","pendingTransactionsFromStore","signedTransactionsFromStore","pendingTransactionsToRender","signedTransactionsToRender","toast","mappedToastsList","currentTx","mapPendingSignedTransactions","newToasts","hasToast","fetchSessionStorageToasts","sessionStorageToastsIds","saveSessionStorageToasts","shouldSaveLocalToasts","UsdValue","platform","qrcode","lead","initLoginWithWalletConnect","shouldLoginUser","qrCodeSvg","setQrCodeSvg","isMobileDevice","card","qrCodeSvgContainer","leadText","mobileLoginButton","mobileLoginButtonIcon","generateQRCode","svg","content","root","dangerouslySetInnerHTML","__html","height","WalletConnectLoginButton","WebWalletLoginButton","UnlockPage","loginRoute","LedgerLoginButtonText","WalletConnectLoginButtonText","ExtensionLoginButtonText","WebWalletLoginButtonText","cardContainer","apiProvider","initializeApiProvider","getApiProvider","mnemonicWords","getMnemonicWords"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const ERROR_SIGNING= 'error when signing';\nexport const TRANSACTION_CANCELLED = 'Transaction cancelled';\nexport const ERROR_SIGNING_TX = 'error signing transaction';\nexport const PROVIDER_NOT_INTIALIZED = 'provider not intialized';\nexport const MISSING_PROVIDER_MESSAGE = 'You need a signer/valid signer to send a transaction,use either WalletProvider, LedgerProvider or WalletConnect';\n","import { EnvironmentsEnum, NetworkType } from 'types';\n\nexport const DEFAULT_MIN_GAS_LIMIT = 50_000;\n\nexport const configEndpoint = 'dapp/config';\n\nexport const fallbackNetworkConfigurations: Record<\n  keyof typeof EnvironmentsEnum,\n  NetworkType\n> = {\n  devnet: {\n    id: 'devnet',\n    chainId: 'D',\n    name: 'Devnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://devnet-wallet.elrond.com',\n    apiAddress: 'https://devnet-api.elrond.com',\n    explorerAddress: 'http://devnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  testnet: {\n    id: 'testnet',\n    chainId: 'T',\n    name: 'Testnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://testnet-wallet.elrond.com',\n    apiAddress: 'https://testnet-api.elrond.com',\n    explorerAddress: 'http://testnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  mainnet: {\n    id: 'mainnet',\n    chainId: '1',\n    name: 'Mainnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://wallet.elrond.com',\n    apiAddress: 'https://api.elrond.com',\n    explorerAddress: 'https://explorer.elrond.com',\n    apiTimeout: '4000'\n  }\n};\n","const ledgerErrorCodes = {\n  0x9000: {\n    code: 'codeSuccess',\n    message: 'Success'\n  },\n  0x6985: {\n    code: 'ERR_USER_DENIED',\n    message: 'Rejected by user'\n  },\n  0x6d00: {\n    code: 'ERR_UNKNOWN_INSTRUCTION',\n    message: 'Unknown instruction'\n  },\n  0x6e00: {\n    code: 'ERR_WRONG_CLA',\n    message: 'Wrong CLA'\n  },\n  0x6e01: {\n    code: 'ERR_INVALID_ARGUMENTS',\n    message: 'Invalid arguments'\n  },\n  0x6e02: {\n    code: 'ERR_INVALID_MESSAGE',\n    message: 'Invalid message'\n  },\n  0x6e03: {\n    code: 'ERR_INVALID_P1',\n    message: 'Invalid P1'\n  },\n  0x6e04: {\n    code: 'ERR_MESSAGE_TOO_LONG',\n    message: 'Message too long'\n  },\n  0x6e05: {\n    code: 'ERR_RECEIVER_TOO_LONG',\n    message: 'Receiver too long'\n  },\n  0x6e06: {\n    code: 'ERR_AMOUNT_TOO_LONG',\n    message: 'Amount too long'\n  },\n  0x6e07: {\n    code: 'ERR_CONTRACT_DATA_DISABLED',\n    message: 'Contract data disabled in app options'\n  },\n  0x6e08: {\n    code: 'ERR_MESSAGE_INCOMPLETE',\n    message: 'Message incomplete'\n  },\n  0x6e10: {\n    code: 'ERR_SIGNATURE_FAILED',\n    message: 'Signature failed'\n  },\n  0x6e09: {\n    code: 'ERR_WRONG_TX_VERSION',\n    message: 'Wrong TX version'\n  },\n  0x6e0a: {\n    code: 'ERR_NONCE_TOO_LONG',\n    message: 'Nonce too long'\n  },\n  0x6e0b: {\n    code: 'ERR_INVALID_AMOUNT',\n    message: 'Invalid amount'\n  },\n  0x6e0c: {\n    code: 'ERR_INVALID_FEE',\n    message: 'Invalid fee'\n  },\n  0x6e0d: {\n    code: 'ERR_PRETTY_FAILED',\n    message: 'Pretty failed'\n  },\n  0x6e0e: {\n    code: 'ERR_DATA_TOO_LONG',\n    message: 'Data too long'\n  },\n  0x6e0f: {\n    code: 'ERR_WRONG_TX_OPTIONS',\n    message: 'Invalid transaction options'\n  },\n  0x6e11: {\n    code: 'ERR_SIGN_TX_DEPRECATED',\n    message:\n      'Regular transaction signing is deprecated in this version. Use hash signing.'\n  }\n};\n\nexport default ledgerErrorCodes;\n","export * as errorsMessages from './errorsMessages';\nexport * as networkConstants from './network';\nexport * as ledgerErrorCodes from './ledgerErrorCodes';\n\nexport const gasPriceModifier = '0.01';\nexport const gasPerDataByte = '1500';\nexport const gasLimit = '50000';\nexport const gasPrice = 1_000_000_000;\nexport const denomination = 18;\nexport const decimals = 4;\nexport const version = 1;\n\nexport const ledgerContractDataEnabledValue = 1;\n\nexport const dappInitRoute = '/dapp/init';\nexport const walletSignSession = 'signSession';\n","export enum TransactionServerStatusesEnum {\n  'pending' = 'pending',\n  'fail' = 'fail',\n  'invalid' = 'invalid',\n  'success' = 'success',\n  'executed' = 'executed',\n  'completed' = 'completed'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  'signed' = 'signed',\n  'cancelled' = 'cancelled',\n  'success' = 'success',\n  'sent' = 'sent',\n  'fail' = 'fail',\n  'timedOut' = 'timedOut'\n}\n\nexport enum LoginMethodsEnum {\n  ledger = 'ledger',\n  walletconnect = 'walletconnect',\n  wallet = 'wallet',\n  extension = 'extension',\n  extra = 'extra',\n  none = ''\n}\n\nexport enum NotificationTypesEnum {\n  warning = 'warning',\n  error = 'error',\n  success = 'success'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n","import {\n  ExtensionProvider,\n  HWProvider,\n  IDappProvider,\n  IHWElrondApp,\n  SignableMessage,\n  Transaction,\n  WalletConnectProvider,\n  WalletProvider\n} from '@elrondnetwork/erdjs';\nimport { ledgerContractDataEnabledValue } from 'constants/index';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport const DAPP_INIT_ROUTE = '/dapp/init';\n\nexport const getProviderType = (\n  provider?: IDappProvider | null\n): LoginMethodsEnum => {\n  switch (provider?.constructor) {\n    case WalletProvider:\n      return LoginMethodsEnum.wallet;\n    case WalletConnectProvider:\n      return LoginMethodsEnum.walletconnect;\n    case HWProvider:\n      return LoginMethodsEnum.ledger;\n    case ExtensionProvider:\n      return LoginMethodsEnum.extension;\n    case EmptyProvider:\n      return LoginMethodsEnum.none;\n    default:\n      return LoginMethodsEnum.extra;\n  }\n};\n\nexport const newWalletProvider = (walletAddress: string) =>\n  new WalletProvider(`${walletAddress}${DAPP_INIT_ROUTE}`);\n\nexport const getLedgerConfiguration = async (\n  initializedHwWalletP: HWProvider\n) => {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWElrondApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === ledgerContractDataEnabledValue;\n  return { version, dataEnabled };\n};\n\nconst notInitializedError = (caller: string) => {\n  return `Unable to perform ${caller}, Provider not initialized`;\n};\n\nexport class EmptyProvider implements IDappProvider {\n  async init() {\n    return false;\n  }\n  login(options?: { callbackUrl?: string; token?: string }): Promise<string> {\n    throw new Error(notInitializedError(`login with options: ${options}`));\n  }\n  async logout(options?: { callbackUrl?: string }): Promise<boolean> {\n    throw new Error(notInitializedError(`logout with options: ${options}`));\n  }\n  async getAddress(): Promise<string> {\n    throw new Error(notInitializedError('getAddress'));\n  }\n  isInitialized(): boolean {\n    return false;\n  }\n  async isConnected(): Promise<boolean> {\n    return false;\n  }\n  async sendTransaction(\n    transaction: Transaction,\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction> {\n    throw new Error(\n      notInitializedError(\n        `sendTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n  async signTransaction(\n    transaction: Transaction,\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction> {\n    throw new Error(\n      notInitializedError(\n        `signTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n  async signTransactions(\n    transactions: Transaction[],\n    options?: { callbackUrl?: string }\n  ): Promise<Transaction[]> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with transactions: ${transactions} options: ${options}`\n      )\n    );\n  }\n  async signMessage(message: SignableMessage): Promise<SignableMessage> {\n    throw new Error(notInitializedError(`signTransactions with ${message}`));\n  }\n}\n\nexport const emptyProvider = new EmptyProvider();\n","import { IDappProvider } from '@elrondnetwork/erdjs';\nimport { emptyProvider } from './utils';\n\nlet accountProvider: IDappProvider = emptyProvider;\n\nlet externalProvider: IDappProvider | null = null;\n\nexport function setAccountProvider(provider: IDappProvider) {\n  accountProvider = provider;\n}\n\nexport function setExternalProvider(provider: IDappProvider) {\n  externalProvider = provider;\n}\n\nexport function setExternalProviderAsAccountProvider() {\n  if (externalProvider != null) {\n    accountProvider = externalProvider;\n  }\n}\n\nexport function getAccountProvider() {\n  return accountProvider || emptyProvider;\n}\n\nexport function getExternalProvider() {\n  return externalProvider;\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport interface LoginActionPayloadType {\n  address: string;\n  loginMethod: LoginMethodsEnum;\n}\n\nexport const logoutAction = createAction('logout');\n\nexport const loginAction = createAction(\n  'login',\n  (payload: LoginActionPayloadType) => ({ payload })\n);\n","import moment from 'moment';\n\nexport const localStorageKeys = {\n  loginExpiresAt: 'dapp-core-login-expires-at'\n} as const;\n\ntype LocalValueType = keyof typeof localStorageKeys;\ntype LocalKeyType = typeof localStorageKeys[LocalValueType];\n\ntype ExpiresType = number | false;\n\nconst hasLocalStorage = typeof localStorage !== 'undefined';\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: LocalKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: LocalKeyType): any => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  const item = localStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    localStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: LocalKeyType) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.removeItem(String(key));\n};\n","let moment: any = {};\ntry {\n  moment = require('moment');\n} catch (err) {}\n\nexport default moment;\n","import moment from 'optionalPackages/moment';\n\nexport type SessionKeyType = 'address' | 'shard' | 'toasts' | 'toastProgress';\ntype ExpiresType = number | false;\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: SessionKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  sessionStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: SessionKeyType): any => {\n  const item = sessionStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: SessionKeyType) =>\n  sessionStorage.removeItem(String(key));\n\nexport const clear = () => sessionStorage.clear();\n\nexport const storage = {\n  setItem,\n  getItem,\n  removeItem,\n  clear\n};\n\nexport default storage;\n","import * as local from './local';\nimport * as session from './session';\n\nexport const storage = { session, local };\n\nexport default storage;\n","import storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nexport function getNewLoginExpiresTimestamp() {\n  return new Date().setHours(new Date().getHours() + 24);\n}\n\nexport function setLoginExpiresAt(expiresAt: number) {\n  storage.local.setItem({\n    key: localStorageKeys.loginExpiresAt,\n    data: expiresAt,\n    expires: expiresAt\n  });\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { setLoginExpiresAt, getNewLoginExpiresTimestamp } from 'storage/local';\nimport { TokenLoginType } from 'types';\nimport { LoginMethodsEnum } from 'types/enums';\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface WalletConnectLoginType {\n  loginType: string;\n  callbackRoute: string;\n  logoutRoute: string;\n}\n\nexport interface LedgerLoginType {\n  index: number;\n  loginType: string;\n}\n\nexport interface LoginInfoType {\n  data: any;\n  expires: number;\n}\n\nexport interface LoginInfoStateType {\n  loginMethod: LoginMethodsEnum;\n  walletConnectLogin: WalletConnectLoginType | null;\n  ledgerLogin: LedgerLoginType | null;\n  tokenLogin: TokenLoginType | null;\n  walletLogin: LoginInfoType | null;\n  extensionLogin: LoginInfoType | null;\n}\n\nconst initialState: LoginInfoStateType = {\n  loginMethod: LoginMethodsEnum.none,\n  walletConnectLogin: null,\n  ledgerLogin: null,\n  tokenLogin: null,\n  walletLogin: null,\n  extensionLogin: null\n};\n\nexport const loginInfoSlice = createSlice({\n  name: 'loginInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setLoginMethod: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginMethodsEnum>\n    ) => {\n      state.loginMethod = action.payload;\n    },\n    setTokenLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<TokenLoginType>\n    ) => {\n      state.tokenLogin = action.payload;\n    },\n    setTokenLoginSignature: (\n      state: LoginInfoStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state?.tokenLogin != null) {\n        state.tokenLogin.signature = action.payload;\n      }\n    },\n    setWalletLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginInfoType | null>\n    ) => {\n      state.walletLogin = action.payload;\n    },\n    setWalletConnectLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<WalletConnectLoginType | null>\n    ) => {\n      state.walletConnectLogin = action.payload;\n    },\n    setLedgerLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LedgerLoginType | null>\n    ) => {\n      state.ledgerLogin = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: LoginInfoStateType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        state.loginMethod = action.payload.loginMethod;\n        setLoginExpiresAt(getNewLoginExpiresTimestamp());\n      }\n    );\n  }\n});\n\nexport const {\n  setLoginMethod,\n  setWalletConnectLogin,\n  setLedgerLogin,\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletLogin\n} = loginInfoSlice.actions;\n\nexport default loginInfoSlice.reducer;\n","export function optionalRedirect(\n  callbackUrl?: string,\n  shouldRedirect?: boolean\n) {\n  if (shouldRedirect && callbackUrl != null) {\n    setTimeout(() => {\n      if (!window.location.pathname.includes(callbackUrl)) {\n        window.location.href = callbackUrl;\n      }\n    }, 200);\n  }\n}\n","export function getBridgeAddressFromNetwork(\n  walletConnectBridgeAddresses: string[]\n) {\n  return walletConnectBridgeAddresses[\n    Math.floor(Math.random() * walletConnectBridgeAddresses.length)\n  ];\n}\n","import ledgerErrorCodes from 'constants/ledgerErrorCodes';\n\nconst ledgerAppErrorText = 'Check if Elrond app is open on Ledger';\nconst notConnectedCode = 0x6e01;\n\nexport function getLedgerErrorCodes(err?: any) {\n  let errorMessage: string | null = null;\n  debugger;\n  if (err?.statusCode in ledgerErrorCodes) {\n    const statusCode: keyof typeof ledgerErrorCodes = err?.statusCode;\n    const { message } = ledgerErrorCodes[statusCode];\n    errorMessage =\n      statusCode === notConnectedCode ? ledgerAppErrorText : message;\n  }\n  return {\n    errorMessage,\n    defaultErrorMessage: ledgerAppErrorText\n  };\n}\n\nexport default getLedgerErrorCodes;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport omit from 'lodash.omit';\nimport {\n  AccountInfoSliceNetworkType,\n  BaseNetworkType,\n  NetworkType\n} from 'types';\nimport { getBridgeAddressFromNetwork } from 'utils/internal';\n\nexport const defaultNetwork: AccountInfoSliceNetworkType = {\n  id: 'not-configured',\n  chainId: '',\n  name: 'NOT CONFIGURED',\n  egldLabel: '',\n  egldDenomination: '18',\n  decimals: '4',\n  gasPerDataByte: '1500',\n  walletConnectDeepLink: '',\n  walletConnectBridgeAddress: '',\n  walletAddress: '',\n\n  apiAddress: '',\n  explorerAddress: '',\n  apiTimeout: '4000'\n};\n\nexport interface NetworkConfigStateType {\n  network: AccountInfoSliceNetworkType;\n  chainID: string;\n}\n\nconst initialState: NetworkConfigStateType = {\n  network: defaultNetwork,\n  chainID: '-1'\n};\n\nexport const networkConfigSlice = createSlice({\n  name: 'appConfig',\n  initialState: initialState,\n  reducers: {\n    initializeNetworkConfig: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<NetworkType>\n    ) => {\n      const walletConnectBridgeAddress = getBridgeAddressFromNetwork(\n        action.payload.walletConnectBridgeAddresses\n      );\n      const network: BaseNetworkType = omit(\n        action.payload,\n        'walletConnectBridgeAddresses'\n      );\n      state.network = {\n        ...state.network,\n        ...network,\n        walletConnectBridgeAddress\n      };\n    },\n    setChainID: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<string>\n    ) => {\n      state.chainID = action.payload;\n    }\n  }\n});\n\nexport const {\n  initializeNetworkConfig,\n  setChainID\n} = networkConfigSlice.actions;\n\nexport default networkConfigSlice.reducer;\n","import { Address } from '@elrondnetwork/erdjs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface AccountType {\n  address: string;\n  balance: string;\n  nonce: number;\n  code?: string;\n  username?: string;\n}\nexport interface LedgerAccountType {\n  index: number;\n  address: string;\n  hasContractDataEnabled: boolean;\n  version: string;\n}\n\nexport interface UpdateLedgerAccountPayloadType {\n  index: number;\n  address: string;\n}\n\nexport interface AccountInfoSliceType {\n  address: string;\n  shard?: number;\n  account: AccountType;\n  publicKey: string;\n  ledgerAccount: LedgerAccountType | null;\n  walletConnectAccount: string | null;\n  isAccountLoading: boolean;\n  accountLoadingError: string | null;\n}\n\nexport const emptyAccount: AccountType = {\n  balance: '...',\n  address: '',\n  nonce: 0\n};\n\nconst initialState: AccountInfoSliceType = {\n  address: '',\n  account: emptyAccount,\n  ledgerAccount: null,\n  publicKey: '',\n  walletConnectAccount: null,\n  isAccountLoading: true,\n  accountLoadingError: null\n};\n\nexport const accountInfoSlice = createSlice({\n  name: 'accountInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setAddress: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string>\n    ) => {\n      const address = action.payload;\n      state.address = address;\n      state.publicKey = new Address(address).hex();\n    },\n    setAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<AccountType>\n    ) => {\n      state.account = action.payload;\n      state.isAccountLoading = false;\n      state.accountLoadingError = null;\n    },\n    setAccountNonce: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.account.nonce = action.payload;\n    },\n    setAccountShard: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.shard = action.payload;\n    },\n    setLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<LedgerAccountType | null>\n    ) => {\n      state.ledgerAccount = action.payload;\n    },\n    updateLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<UpdateLedgerAccountPayloadType>\n    ) => {\n      if (state.ledgerAccount != null) {\n        state.ledgerAccount.index = action.payload.index;\n        state.ledgerAccount.address = action.payload.address;\n      }\n    },\n    setWalletConnectAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.walletConnectAccount = action.payload;\n    },\n    setIsAccountLoading: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.isAccountLoading = action.payload;\n      state.accountLoadingError = null;\n    },\n    setAccountLoadingError: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.accountLoadingError = action.payload;\n      state.isAccountLoading = false;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      storage.local.removeItem(localStorageKeys.loginExpiresAt);\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: AccountInfoSliceType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        const { address } = action.payload;\n        state.address = address;\n        state.publicKey = new Address(address).hex();\n      }\n    );\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.account) {\n        return;\n      }\n\n      const { account: accountInfo } = action.payload;\n      const { address, shard, account, publicKey } = accountInfo;\n      state.address = address;\n      state.shard = shard;\n      state.account = account;\n      state.publicKey = publicKey;\n    });\n  }\n});\n\nexport const {\n  setAccount,\n  setAddress,\n  setAccountNonce,\n  setAccountShard,\n  setLedgerAccount,\n  updateLedgerAccount,\n  setWalletConnectAccount,\n  setIsAccountLoading,\n  setAccountLoadingError\n} = accountInfoSlice.actions;\n\nexport default accountInfoSlice.reducer;\n","import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const completedServerTransactionsStates = [\n  TransactionServerStatusesEnum.completed\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport function getIsTransactionCompleted(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return completedServerTransactionsStates.includes(\n    status as TransactionServerStatusesEnum\n  );\n}\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n","import React from 'react';\nimport { Address, Transaction } from '@elrondnetwork/erdjs';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from './enums';\n\nexport interface TransactionsToSignType {\n  transactions: RawTransactionType[];\n  callbackRoute?: string;\n  sessionId: string;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsBodyType {\n  transactions?: SignedTransactionType[];\n  status?: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsType {\n  [sessionId: string]: SignedTransactionsBodyType;\n}\n\nexport interface TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n}\n\nexport interface RawTransactionType {\n  signature?: string;\n  value: string;\n  receiver: string;\n  gasPrice: number;\n  gasLimit: number;\n  sender: string;\n  nonce: number;\n  data: string;\n  chainID: string;\n  version?: number;\n  options?: number;\n}\n\nexport interface SignedTransactionType extends RawTransactionType {\n  hash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface TxDataTokenType {\n  tokenId: string;\n  amount: string;\n  receiver: string;\n  type?: MultiEsdtTxType['type'] | '';\n  nonce?: string;\n  multiTxData?: string;\n}\n\nexport type TxsDataTokensType = Record<string, TxDataTokenType> | undefined;\n\ninterface MultiEsdtType {\n  type:\n    | TransactionTypesEnum.esdtTransaction\n    | TransactionTypesEnum.nftTransaction;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\ninterface MultiEsdtScCallType {\n  type: TransactionTypesEnum.scCall;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\nexport type MultiEsdtTxType = MultiEsdtType | MultiEsdtScCallType;\n\nexport type MultiSignTxType = {\n  multiTxData?: string;\n  transactionIndex: number;\n  transaction: Transaction;\n};\n\nexport interface TokenOptionType {\n  name: string;\n  identifier: string;\n  balance: string;\n  decimals: number;\n  collection?: string;\n  avatar?: string;\n}\n\nexport interface SimpleTransactionType {\n  value: string;\n  receiver: string;\n  data?: string;\n  gasPrice?: number;\n  gasLimit?: number;\n  chainID?: string;\n  version?: number;\n  options?: number;\n}\n\nexport interface TransactionsDisplayInfoType {\n  errorMessage?: string;\n  successMessage?: string;\n  processingMessage?: string;\n  submittedMessage?: string;\n  transactionDuration?: number;\n}\n\nexport interface SendSimpleTransactionPropsType {\n  transactions: SimpleTransactionType[];\n  minGasLimit?: number;\n}\n\nexport interface SendTransactionsPropsType {\n  transactions:\n    | Transaction\n    | SimpleTransactionType\n    | (Transaction | SimpleTransactionType)[];\n  redirectAfterSign?: boolean;\n  signWithoutSending: boolean;\n  completedTransactionsDelay?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  minGasLimit?: number;\n  sessionInformation?: any;\n}\n\nexport interface SignTransactionsPropsType {\n  transactions: Transaction[] | Transaction;\n  minGasLimit?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport interface ActiveLedgerTransactionType {\n  transaction: Transaction;\n  transactionTokenInfo: TxDataTokenType;\n  isTokenTransaction: boolean;\n  dataField: string;\n  receiverScamInfo: string | null;\n}\n\nexport interface SmartContractResult {\n  hash: string;\n  timestamp: number;\n  nonce: number;\n  gasLimit: number;\n  gasPrice: number;\n  value: string;\n  sender: string;\n  receiver: string;\n  data: string;\n  prevTxHash: string;\n  originalTxHash: string;\n  callType: string;\n  miniBlockHash: string;\n  returnMessage: string;\n}\n\nexport interface SignModalPropsType {\n  handleClose: () => void;\n  error: string | null;\n  callbackRoute?: string;\n  transactions: Transaction[];\n  className?: string;\n  verifyReceiverScam?: boolean;\n  title?: React.ReactNode;\n}\n\nexport interface CustomTransactionInformation {\n  redirectAfterSign: boolean;\n  sessionInformation: any;\n  completedTransactionsDelay?: number;\n  signWithoutSending: boolean;\n}\n","const isUtf8 = (str: string) => {\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 127) return false;\n  }\n  return true;\n};\n\nexport function decodePart(part: string) {\n  let decodedPart = part;\n\n  try {\n    const hexPart = Buffer.from(part, 'hex').toString().trim();\n\n    if (isUtf8(hexPart) && hexPart.length > 1) {\n      decodedPart = hexPart;\n    }\n  } catch (error) {}\n\n  return decodedPart;\n}\n\nexport default decodePart;\n","export function isStringBase64(string: string) {\n  try {\n    return Buffer.from(string, 'base64').toString() === atob(string);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport function encodeToBase64(string: string) {\n  return btoa(string);\n}\n\nexport function decodeBase64(string: string) {\n  return atob(string);\n}\n","export const getAllStringOccurrences = (\n  sourceStr: string,\n  searchStr: string\n) => {\n  const startingIndices = [];\n\n  let indexOccurence = sourceStr.indexOf(searchStr, 0);\n\n  while (indexOccurence >= 0) {\n    startingIndices.push(indexOccurence);\n    indexOccurence = sourceStr.indexOf(searchStr, indexOccurence + 1);\n  }\n\n  return startingIndices;\n};\n","import BigNumber from 'bignumber.js';\nimport { MultiEsdtTxType, TransactionTypesEnum } from 'types/transactions';\nimport { decodePart } from 'utils/decoders';\nimport { getAllStringOccurrences } from '../getAllStringOccurrences';\n\n// TODO: add tests\nexport function parseMultiEsdtTransferData(data?: string) {\n  const transactions: MultiEsdtTxType[] = [];\n  let contractCallDataIndex = 0;\n  try {\n    if (\n      data?.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) &&\n      data?.includes('@')\n    ) {\n      const [, receiver, encodedTxCount, ...rest] = data?.split('@');\n      if (receiver) {\n        const txCount = new BigNumber(encodedTxCount, 16).toNumber();\n\n        let itemIndex = 0;\n        for (let txIndex = 0; txIndex < txCount; txIndex++) {\n          const transaction: MultiEsdtTxType = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver\n          };\n\n          for (let index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n              case 1: {\n                const encodedNonce =\n                  rest[itemIndex] && rest[itemIndex].length\n                    ? rest[itemIndex]\n                    : '';\n                if (encodedNonce) {\n                  transaction.nonce = encodedNonce;\n                } else {\n                  transaction.type = TransactionTypesEnum.esdtTransaction;\n                }\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              }\n              case 2:\n                transaction.amount = new BigNumber(\n                  rest[itemIndex],\n                  16\n                ).toString(10);\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              default:\n                break;\n            }\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n          transactions[txIndex] = transaction;\n        }\n\n        const isDifferentFromTxCount = transactions.length !== txCount;\n        const hasInvalidNoOfAdSigns = transactions.some((tx) => {\n          const adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n        const hasAdStart = transactions.some((tx) => tx.data.startsWith('@'));\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n        if (rest[contractCallDataIndex]) {\n          let scCallData = rest[contractCallDataIndex];\n          for (let i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n  return transactions;\n}\n\nexport default parseMultiEsdtTransferData;\n","import { Address } from '@elrondnetwork/erdjs';\n\nfunction canTransformToPublicKey(address: string) {\n  try {\n    const checkAddress = new Address(address);\n    return Boolean(checkAddress.bech32());\n  } catch {\n    return false;\n  }\n}\n\nexport function addressIsValid(destinationAddress: string) {\n  const isValidBach =\n    destinationAddress?.startsWith('erd') &&\n    destinationAddress.length === 62 &&\n    /^\\w+$/.test(destinationAddress);\n\n  return isValidBach && canTransformToPublicKey(destinationAddress);\n}\n\nexport default addressIsValid;\n","import { Address } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport addressIsValid from 'utils/account/addressIsValid';\nimport decodePart from 'utils/decoders/decodePart';\nimport { TransactionTypesEnum } from '../../types/transactions';\n\nconst noData = {\n  tokenId: '',\n  amount: ''\n};\n\nconst decodeData = (data: string) => {\n  const nonceIndex = 2;\n  const amountIndex = 3;\n  const parts = data.split('@');\n  const decodedParts = parts.map((part, i) =>\n    [nonceIndex, amountIndex].includes(i) ? part : decodePart(part)\n  );\n  return decodedParts;\n};\n\nexport function getTokenFromData(data?: string): {\n  tokenId: string;\n  amount: string;\n  collection?: string;\n  nonce?: string;\n  receiver?: string;\n} {\n  if (!data) {\n    return noData;\n  }\n\n  const isTokenTransfer = data.startsWith(TransactionTypesEnum.ESDTTransfer);\n  const nftTransfer =\n    data.startsWith(TransactionTypesEnum.ESDTNFTTransfer) && data.includes('@');\n\n  if (isTokenTransfer) {\n    const [, encodedToken, encodedAmount] = data.split('@');\n    try {\n      const tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n\n      if (!tokenId) {\n        return noData;\n      }\n\n      const amount = new BigNumber(\n        '0x' + encodedAmount.replace('0x', '')\n      ).toString(10);\n\n      return {\n        tokenId,\n        amount\n      };\n    } catch (e) {}\n  }\n\n  if (nftTransfer) {\n    try {\n      const [, /*ESDTNFTTransfer*/ collection, nonce, quantity, receiver] =\n        decodeData(data);\n      if (\n        [collection, nonce, quantity, receiver].every((el) => Boolean(el)) &&\n        addressIsValid(new Address(receiver).bech32())\n      ) {\n        return {\n          tokenId: `${collection}-${nonce}`,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection,\n          nonce,\n          receiver: new Address(receiver).bech32()\n        };\n      }\n    } catch (err) {}\n  }\n\n  return noData;\n}\nexport default getTokenFromData;\n","export function isTokenTransfer({\n  tokenId,\n  erdLabel\n}: {\n  tokenId: string | undefined;\n  erdLabel: string;\n}) {\n  return Boolean(tokenId && tokenId !== erdLabel);\n}\n\nexport default isTokenTransfer;\n","function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams as any);\n\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n\n  return { nextUrlParams, params };\n}\n\ninterface ReplyUrlType {\n  callbackUrl: string;\n  urlParams?: { [key: string]: string };\n}\n\nexport function builtCallbackUrl({\n  callbackUrl,\n  urlParams = {}\n}: ReplyUrlType) {\n  let url = callbackUrl;\n  if (Object.entries(urlParams).length > 0) {\n    const { search, origin, pathname } = new URL(callbackUrl);\n    const { nextUrlParams } = buildUrlParams(search, urlParams);\n    url = `${origin}${pathname}?${nextUrlParams}`;\n  }\n  return url;\n}\n\nexport default builtCallbackUrl;\n","import {\n  Transaction,\n  TransactionOptions,\n  TransactionVersion\n} from '@elrondnetwork/erdjs';\nimport { TransactionServerStatusesEnum } from 'types/enums';\n\nexport function parseTransactionAfterSigning(\n  transaction: Transaction,\n  isLedger = false\n) {\n  // TODO: REMOVE\n  //#region REMOVE when options is available in erdjs getTransactionsFromWalletUrl\n  if (isLedger) {\n    transaction.version = TransactionVersion.withTxHashSignVersion();\n    transaction.options = TransactionOptions.withTxHashSignOptions();\n  }\n  //#endregion\n  const parsedTransaction = transaction.toPlainObject();\n  parsedTransaction.hash = transaction.getHash().toString();\n  parsedTransaction.status = TransactionServerStatusesEnum.pending;\n  return parsedTransaction;\n}\n\nexport default parseTransactionAfterSigning;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport {\n  CustomTransactionInformation,\n  SignedTransactionsBodyType,\n  SignedTransactionsType,\n  SignedTransactionType,\n  TransactionsToSignType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionCompleted\n} from 'utils/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface UpdateSignedTransactionsPayloadType {\n  sessionId: string;\n  status: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  transactions?: SignedTransactionType[];\n}\n\nexport interface MoveTransactionsToSignedStatePayloadType\n  extends SignedTransactionsBodyType {\n  sessionId: string;\n}\n\nexport interface UpdateSignedTransactionStatusPayloadType {\n  sessionId: string;\n  transactionHash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n}\n\nexport interface TransactionsSliceStateType {\n  signedTransactions: SignedTransactionsType;\n  transactionsToSign: TransactionsToSignType | null;\n  signTransactionsError: string | null;\n  customTransactionInformationForSessionId: {\n    [sessionId: string]: CustomTransactionInformation;\n  };\n}\n\nconst initialState: TransactionsSliceStateType = {\n  signedTransactions: {},\n  transactionsToSign: null,\n  signTransactionsError: null,\n  customTransactionInformationForSessionId: {}\n};\n\nconst defaultCustomInformation: CustomTransactionInformation = {\n  signWithoutSending: false,\n  sessionInformation: null,\n  redirectAfterSign: false\n};\n\nexport const transactionsSlice = createSlice({\n  name: 'transactionsSlice',\n  initialState,\n  reducers: {\n    moveTransactionsToSignedState: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<MoveTransactionsToSignedStatePayloadType>\n    ) => {\n      const { sessionId, transactions, errorMessage, status } = action.payload;\n      const customTransactionInformation =\n        state.customTransactionInformationForSessionId?.[sessionId] ||\n        defaultCustomInformation;\n      state.signedTransactions[sessionId] = {\n        transactions,\n        status,\n        errorMessage,\n        customTransactionInformation\n      };\n      if (state?.transactionsToSign?.sessionId === sessionId) {\n        state.transactionsToSign = initialState.transactionsToSign;\n      }\n    },\n\n    clearSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state.signedTransactions[action.payload]) {\n        delete state.signedTransactions[action.payload];\n      }\n    },\n    clearTransactionToSign: (state: TransactionsSliceStateType) => {\n      if (state?.transactionsToSign) {\n        state.transactionsToSign = null;\n      }\n    },\n    updateSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<SignedTransactionsType>\n    ) => {\n      state.signedTransactions = {\n        ...state.signedTransactions,\n        ...action.payload\n      };\n    },\n    updateSignedTransactions: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionsPayloadType>\n    ) => {\n      const { sessionId, status, errorMessage, transactions } = action.payload;\n      const transaction = state.signedTransactions[sessionId];\n      if (transaction != null) {\n        state.signedTransactions[sessionId].status = status;\n        if (errorMessage != null) {\n          state.signedTransactions[sessionId].errorMessage = errorMessage;\n        }\n        if (transactions != null) {\n          state.signedTransactions[sessionId].transactions = transactions;\n        }\n      }\n    },\n    updateSignedTransactionStatus: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionStatusPayloadType>\n    ) => {\n      const {\n        sessionId,\n        status,\n        errorMessage,\n        transactionHash\n      } = action.payload;\n      const transactions = state.signedTransactions?.[sessionId]?.transactions;\n      if (transactions != null) {\n        state.signedTransactions[sessionId].transactions = transactions.map(\n          (transaction) => {\n            if (transaction.hash === transactionHash) {\n              return {\n                ...transaction,\n                status,\n                errorMessage\n              };\n            }\n            return transaction;\n          }\n        );\n        const areTransactionsSuccessful = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) => {\n          return getIsTransactionCompleted(transaction.status);\n        });\n\n        const areTransactionsFailed = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) =>\n          getIsTransactionFailed(transaction.status)\n        );\n        if (areTransactionsSuccessful) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.success;\n        }\n        if (areTransactionsFailed) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.fail;\n        }\n      }\n    },\n    setTransactionsToSign: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<TransactionsToSignType>\n    ) => {\n      state.transactionsToSign = action.payload;\n\n      const { sessionId, customTransactionInformation } = action.payload;\n      state.customTransactionInformationForSessionId[\n        sessionId\n      ] = customTransactionInformation;\n\n      state.signTransactionsError = null;\n    },\n    clearAllTransactionsToSign: (state) => {\n      state.transactionsToSign = initialState.transactionsToSign;\n      state.signTransactionsError = null;\n    },\n    clearAllSignedTransactions: (state) => {\n      state.signedTransactions = initialState.signedTransactions;\n    },\n    setSignTransactionsError: (state, action: PayloadAction<string | null>) => {\n      state.signTransactionsError = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.transactions) {\n        return;\n      }\n\n      const {\n        signedTransactions,\n        customTransactionInformationForSessionId\n      } = action.payload.transactions;\n      const parsedSignedTransactions = Object.entries(\n        signedTransactions\n      ).reduce((acc, [sessionId, transaction]) => {\n        const txTimestamp: any = new Date(sessionId);\n        const expiration: any = new Date();\n        expiration.setHours(expiration.getHours() + 5);\n        const isExpired = expiration - txTimestamp > 0;\n        if (!isExpired) {\n          acc[sessionId] = transaction;\n        }\n        return acc;\n      }, {} as { [key: string]: any });\n      if (customTransactionInformationForSessionId != null) {\n        state.customTransactionInformationForSessionId = customTransactionInformationForSessionId;\n      }\n      if (signedTransactions != null) {\n        state.signedTransactions = parsedSignedTransactions;\n      }\n    });\n  }\n});\n\nexport const {\n  updateSignedTransactionStatus,\n  updateSignedTransactions,\n  setTransactionsToSign,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions,\n  clearSignedTransaction,\n  clearTransactionToSign,\n  setSignTransactionsError,\n  moveTransactionsToSignedState\n} = transactionsSlice.actions;\n\nexport default transactionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TransactionsDisplayInfoType } from 'types/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface StateType {\n  [sessionId: string]: TransactionsDisplayInfoType;\n}\n\nexport interface SetTransactionsInfoPayloadType {\n  sessionId: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n}\n\nexport const defaultTransactionErrorMessage = 'Transaction failed';\nexport const defaultTransactionSuccessMessage = 'Transaction successful';\nexport const defaultTransactionProcessingMessage = 'Processing transaction';\nexport const defaultTransactionSubmittedMessage = 'Transaction submitted';\n\nconst initialState: StateType = {};\n\nexport const signTransactionsSlice = createSlice({\n  name: 'transactionsInfo',\n  initialState,\n  reducers: {\n    setTransactionsDisplayInfo(\n      state: StateType,\n      action: PayloadAction<SetTransactionsInfoPayloadType>\n    ) {\n      const { sessionId, transactionsDisplayInfo } = action.payload;\n      if (sessionId != null) {\n        state[sessionId] = {\n          errorMessage:\n            transactionsDisplayInfo?.errorMessage ||\n            defaultTransactionErrorMessage,\n          successMessage:\n            transactionsDisplayInfo?.successMessage ||\n            defaultTransactionSuccessMessage,\n          processingMessage:\n            transactionsDisplayInfo?.processingMessage ||\n            defaultTransactionProcessingMessage,\n          submittedMessage:\n            transactionsDisplayInfo?.submittedMessage ||\n            defaultTransactionSubmittedMessage,\n          transactionDuration: transactionsDisplayInfo?.transactionDuration\n        };\n      }\n    },\n    clearTransactionsInfoForSessionId(\n      state: StateType,\n      action: PayloadAction<string | undefined>\n    ) {\n      if (action.payload != null) {\n        delete state[action.payload];\n      }\n    },\n    clearTransactionsInfo: () => initialState\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  clearTransactionsInfo,\n  setTransactionsDisplayInfo,\n  clearTransactionsInfoForSessionId\n} = signTransactionsSlice.actions;\n\nexport default signTransactionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NotificationTypesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface TxSubmittedModal {\n  sessionId: string;\n  submittedMessage: string;\n}\n\nexport interface NotificationModal {\n  type: NotificationTypesEnum;\n  iconClassName: string;\n  title: string;\n  description: string;\n}\n\nexport interface ModalsSliceState {\n  txSubmittedModal?: TxSubmittedModal;\n  notificationModal?: NotificationModal;\n}\n\nconst initialState: ModalsSliceState = {};\n\nexport const modalsSlice = createSlice({\n  name: 'modalsSlice',\n  initialState,\n  reducers: {\n    setTxSubmittedModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<TxSubmittedModal>\n    ) => {\n      state.txSubmittedModal = action.payload;\n    },\n    setNotificationModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<NotificationModal>\n    ) => {\n      state.notificationModal = action.payload;\n    },\n    clearTxSubmittedModal: (state: ModalsSliceState) => {\n      state.txSubmittedModal = undefined;\n    },\n    clearNotificationModal: (state: ModalsSliceState) => {\n      state.notificationModal = undefined;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  setTxSubmittedModal,\n  setNotificationModal,\n  clearTxSubmittedModal,\n  clearNotificationModal\n} = modalsSlice.actions;\n\nexport default modalsSlice.reducer;\n","import isEqual from 'lodash.isequal';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\n\nexport const createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n);\n","import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const accountInfoSelector = (state: RootState) => state.account;\n\nexport const addressSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.address\n);\n\nexport const accountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.account\n);\n\nexport const accountBalanceSelector = createDeepEqualSelector(\n  accountSelector,\n  (account) => account.balance\n);\n\nexport const accountNonceSelector = createDeepEqualSelector(\n  accountSelector,\n  (state) => state?.nonce?.valueOf() || 0\n);\n\nexport const shardSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.shard\n);\n\nexport const ledgerAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.ledgerAccount\n);\n\nexport const walletConnectAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.walletConnectAccount\n);\n\nexport const isAccountLoadingSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.isAccountLoading\n);\n\nexport const isAccountLoadingErrorSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.accountLoadingError\n);\n","import { LoginMethodsEnum } from 'types/enums';\nimport { RootState } from '../store';\nimport { addressSelector } from './accountInfoSelectors';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const loginInfoSelector = (state: RootState) => state.loginInfo;\n\nexport const loginMethodSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.loginMethod\n);\n\nexport const isLoggedInSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  addressSelector,\n  (state, address) =>\n    state.loginMethod != LoginMethodsEnum.none && Boolean(address)\n);\n\nexport const walletConnectLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletConnectLogin\n);\n\nexport const ledgerLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.ledgerLogin\n);\n\nexport const walletLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletLogin\n);\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport throttle from 'lodash.throttle';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { logoutAction } from 'redux/commonActions';\nimport { isLoggedInSelector } from 'redux/selectors/loginInfoSelectors';\nimport { StoreType } from 'redux/store';\nimport { getNewLoginExpiresTimestamp, setLoginExpiresAt } from 'storage/local';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nconst whitelistedActions = ['logout'];\n\nconst throttledSetNewExpires = throttle(() => {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nexport const loginSessionMiddleware: any = (store: StoreType) => (\n  next: (action: PayloadAction) => void\n) => (action: PayloadAction) => {\n  if (whitelistedActions.includes(action.type)) {\n    return next(action);\n  }\n  const appState = store.getState();\n  const loginTimestamp = storage.local.getItem(localStorageKeys.loginExpiresAt);\n  const isLoggedIn = isLoggedInSelector(appState);\n  if (!isLoggedIn) {\n    return next(action);\n  }\n  if (loginTimestamp == null) {\n    return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n  }\n  const now = Date.now();\n  const isExpired = loginTimestamp - now < 0;\n  if (isExpired) {\n    return setTimeout(async () => {\n      const provider = getAccountProvider();\n      console.log('session expired');\n      store.dispatch(logoutAction());\n      try {\n        await provider?.logout({ callbackUrl: '/' });\n      } catch (err) {\n        console.error('error logging out', err);\n      }\n    }, 1000);\n  } else {\n    throttledSetNewExpires();\n  }\n  return next(action);\n};\n\nexport default loginSessionMiddleware;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\n\nimport account from './slices/accountInfoSlice';\nimport loginInfo from './slices/loginInfoSlice';\nimport modals from './slices/modalsSlice';\nimport networkConfig from './slices/networkConfigSlice';\nimport transactionsInfo from './slices/transactionsInfoSlice';\nimport transactions from './slices/transactionsSlice';\n\nconst reducers = {\n  account,\n  networkConfig,\n  loginInfo,\n  modals,\n  transactions,\n  transactionsInfo\n};\n\nif (typeof window !== 'undefined' && window.localStorage != null) {\n  //This allows for this library to be used on other platforms than web, like React Native\n  //without this condition, redux-persist 6+ will throw an error if persist storage fails\n  const sessionStorage = require('redux-persist/lib/storage/session').default;\n\n  //#region custom reducers\n  const transactionsInfoPersistConfig = {\n    key: 'dapp-core-transactionsInfo',\n    version: 1,\n    storage: sessionStorage\n  };\n  const transactionsReducer = {\n    key: 'dapp-core-transactions',\n    version: 1,\n    storage: sessionStorage,\n    blacklist: ['transactionsToSign']\n  };\n  reducers.transactions = persistReducer(\n    transactionsReducer,\n    transactions\n  ) as any;\n  reducers.transactionsInfo = persistReducer(\n    transactionsInfoPersistConfig,\n    transactionsInfo\n  ) as any;\n  //#endregion\n}\n\nconst rootReducer = combineReducers(reducers);\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { Reducer } from 'redux';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  createMigrate\n} from 'redux-persist';\n\nimport { defaultNetwork } from 'redux/slices';\nimport loginSessionMiddleware from './middlewares/loginSessionMiddleware';\nimport rootReducer from './reducers';\n\nlet localStorageReducers: Partial<Reducer> = rootReducer;\n\nconst migrations = {\n  2: (state: PestistedRootState) => {\n    return {\n      ...state,\n      networkConfig: defaultNetwork\n    };\n  }\n};\n\n//This allows for this library to be used on other platforms than web, like React Native\n//without this condition, redux-persist 6+ will throw an error if persist storage fails\nif (typeof window !== 'undefined' && window?.localStorage != null) {\n  const storage = require('redux-persist/lib/storage').default;\n  const persistConfig = {\n    key: 'dapp-core-store',\n    version: 2,\n    storage,\n    whitelist: ['account', 'loginInfo', 'toasts', 'modals', 'networkConfig'],\n    migrate: createMigrate(migrations, { debug: false })\n  };\n  localStorageReducers = persistReducer(persistConfig, rootReducer);\n}\n\nexport const store = configureStore({\n  reducer: localStorageReducers,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          FLUSH,\n          REHYDRATE,\n          PAUSE,\n          PERSIST,\n          PURGE,\n          REGISTER,\n          'accountInfoSlice/setAccount',\n          'accountInfoSlice/setAccountNonce'\n        ],\n        ignoredPaths: ['payload.nonce', 'account.account.nonce']\n      }\n    }).concat(loginSessionMiddleware)\n});\n\nexport const persistor = persistStore(store);\n\nconst storeType = configureStore({ reducer: rootReducer });\ntype PestistedRootState = ReturnType<typeof store.getState>;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type StoreType = typeof storeType;\nexport type RootState = ReturnType<typeof storeType.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { ChainID } from '@elrondnetwork/erdjs';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const networkConfigSelector = (state: RootState) => state.networkConfig;\n\nexport const chainIDSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => new ChainID(state.chainID)\n);\n\nexport const walletConnectBridgeAddressSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectBridgeAddress\n);\n\nexport const walletConnectDeepLinkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectDeepLink\n);\n\nexport const networkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network\n);\n\nexport const apiNetworkSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.apiAddress\n);\n\nexport const explorerAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.explorerAddress\n);\n\nexport const egldLabelSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.egldLabel\n);\n","import {\n  Transaction,\n  GasLimit,\n  GasPrice,\n  Address,\n  TransactionPayload,\n  Balance,\n  ChainID,\n  Nonce,\n  TransactionOptions,\n  TransactionVersion\n} from '@elrondnetwork/erdjs';\nimport {\n  gasLimit as defaultGasLimit,\n  gasPrice,\n  version as defaultVersion\n} from 'constants/index';\nimport { RawTransactionType } from 'types/transactions';\nimport { isStringBase64 } from 'utils/decoders/base64Utils';\n\nexport function newTransaction(rawTransaction: RawTransactionType) {\n  const { data } = rawTransaction;\n  const dataPayload = isStringBase64(data)\n    ? TransactionPayload.fromEncoded(data)\n    : new TransactionPayload(data);\n  return new Transaction({\n    value: Balance.fromString(rawTransaction.value),\n    data: dataPayload,\n    nonce: new Nonce(rawTransaction.nonce),\n    receiver: new Address(rawTransaction.receiver),\n    sender: new Address(rawTransaction.sender),\n    gasLimit: new GasLimit(rawTransaction.gasLimit ?? defaultGasLimit),\n    gasPrice: new GasPrice(rawTransaction.gasPrice ?? gasPrice),\n    chainID: new ChainID(rawTransaction.chainID),\n    version: new TransactionVersion(rawTransaction.version ?? defaultVersion),\n    ...(rawTransaction.options\n      ? { options: new TransactionOptions(rawTransaction.options) }\n      : {})\n  });\n}\n\nexport default newTransaction;\n","import { Transaction } from '@elrondnetwork/erdjs';\nimport newTransaction from 'models/newTransaction';\nimport {\n  CustomTransactionInformation,\n  RawTransactionType,\n  SignedTransactionsType\n} from 'types/transactions';\nimport {\n  getIsTransactionCompleted,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport interface TransactionsToSignReturnType {\n  callbackRoute?: string;\n  sessionId: string;\n  transactions: Transaction[];\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport const transactionsSelectors = (state: RootState) => state.transactions;\n\nexport const signedTransactionsSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signedTransactions as SignedTransactionsType\n);\n\nexport const signTransactionsErrorSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signTransactionsError\n);\n\nconst selectTxByStatus = (txStatusVerifier: typeof getIsTransactionPending) => (\n  signedTransactions: SignedTransactionsType\n) =>\n  Object.entries(signedTransactions).reduce((acc, [sessionId, txBody]) => {\n    if (txStatusVerifier(txBody.status)) {\n      acc[sessionId] = txBody;\n    }\n    return acc;\n  }, {} as SignedTransactionsType);\n\nexport const pendingSignedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionPending)\n);\n\nexport const successfulTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionSuccessful)\n);\n\nexport const completedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionCompleted)\n);\n\nexport const failedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionFailed)\n);\n\nexport const timedOutTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionTimedOut)\n);\n\nexport const transactionsToSignSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state): TransactionsToSignReturnType | null => {\n    if (state?.transactionsToSign == null) {\n      return null;\n    }\n    return {\n      ...state.transactionsToSign,\n      transactions:\n        state?.transactionsToSign?.transactions.map((tx: RawTransactionType) =>\n          newTransaction(tx)\n        ) || []\n    };\n  }\n);\n\nexport const transactionStatusSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (\n    signedTransactions: SignedTransactionsType,\n    transactionSessionId: string | null\n  ) =>\n    transactionSessionId != null\n      ? signedTransactions?.[transactionSessionId] || {}\n      : {}\n);\n","import { createDeepEqualSelector } from 'redux/selectors/helpers';\nimport {\n  defaultTransactionErrorMessage,\n  defaultTransactionProcessingMessage,\n  defaultTransactionSuccessMessage\n} from 'redux/slices';\nimport { RootState } from '../store';\n\nconst defaultTransactionInfo = {\n  errorMessage: defaultTransactionErrorMessage,\n  successMessage: defaultTransactionSuccessMessage,\n  processingMessage: defaultTransactionProcessingMessage\n};\n\nexport const transactionsInfoSelectors = (state: RootState) =>\n  state.transactionsInfo;\n\nexport const transactionDisplayInfoSelector = createDeepEqualSelector(\n  transactionsInfoSelectors,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (transactionsDisplayInfo: any, transactionSessionId: string | null) =>\n    transactionSessionId != null\n      ? transactionsDisplayInfo?.[Number(transactionSessionId)] ||\n        defaultTransactionInfo\n      : defaultTransactionInfo\n);\n","import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const modalsSliceSelector = (state: RootState) => state.modals;\n\nexport const txSubmittedModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.txSubmittedModal\n);\n\nexport const notificationModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.notificationModal\n);\n","import { isLoggedInSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getIsLoggedIn() {\n  return isLoggedInSelector(store.getState());\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\nimport { logoutAction } from 'redux/commonActions';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\n\nexport async function logout(\n  callbackUrl?: string,\n  onRedirect?: (callbackUrl?: string) => void\n) {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const isLoggedIn = getIsLoggedIn();\n  if (!isLoggedIn || !provider) {\n    return;\n  }\n\n  store.dispatch(logoutAction());\n\n  try {\n    const isWalletProvider = providerType === LoginMethodsEnum.wallet;\n    const needsCallbackUrl = isWalletProvider && !callbackUrl;\n    const url = needsCallbackUrl ? window.location.origin : callbackUrl;\n\n    await provider.logout({ callbackUrl: url });\n    if (callbackUrl && providerType !== LoginMethodsEnum.wallet) {\n      if (typeof onRedirect === 'function') {\n        onRedirect(callbackUrl);\n      } else {\n        window.location.href = callbackUrl;\n      }\n    }\n  } catch (err) {\n    console.error('error logging out', err);\n  }\n}\n","export function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams: any = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams);\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n  return { nextUrlParams, params };\n}\n","interface SwitchTrueType {\n  default: any;\n  [key: string]: any;\n}\n\ntype ReturnKeys = 'true' | 'false';\n\nexport function switchTrue(object: SwitchTrueType) {\n  const { default: defaultValue, ...rest } = object;\n  const obj = { default: defaultValue, ...rest };\n  const result = Object.keys(obj).reduce((acc, cur) => {\n    return {\n      ...acc,\n      [cur === 'default' ? 'true' : cur]: (obj as any)[cur as ReturnKeys]\n    };\n  }, {} as Record<ReturnKeys, any>);\n  return result['true'];\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport function getAccountProviderType() {\n  const provider = getAccountProvider();\n  return getProviderType(provider);\n}\n","import { chainIDSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getChainID() {\n  return chainIDSelector(store.getState());\n}\n","import { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getNetworkConfig() {\n  return networkSelector(store.getState());\n}\n","import { egldLabelSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getEgldLabel() {\n  return egldLabelSelector(store.getState());\n}\n","import { getAccountProviderType } from './getAccountProviderType';\n\nexport function getIsProviderEqualTo(comparedProviderType: any) {\n  const providerType = getAccountProviderType();\n  return providerType === comparedProviderType;\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport {\n  addressSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getIsProviderEqualTo } from 'utils/network';\nimport { addressIsValid } from './addressIsValid';\n\nexport function getAddress(): Promise<string> {\n  const { search } = window.location;\n  const appState = store.getState();\n  const provider = getAccountProvider();\n  const address = addressSelector(appState);\n  const loggedIn = isLoggedInSelector(appState);\n  const walletLogin = walletLoginSelector(appState);\n\n  if (!provider) {\n    throw 'provider not initialized';\n  }\n\n  if (getIsProviderEqualTo(LoginMethodsEnum.ledger) && loggedIn) {\n    return new Promise((resolve) => {\n      resolve(address);\n    });\n  }\n\n  return !getIsProviderEqualTo(LoginMethodsEnum.none) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.wallet) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.extra)\n    ? // TODO: does not take into account ledger locked see link for details:\n      // https://github.com/ElrondNetwork/dapp/blob/d5c57695a10055f20d387ba064b6843606789ee9/src/helpers/accountMethods.tsx#L21\n      provider.getAddress()\n    : new Promise((resolve) => {\n        if (walletLogin != null) {\n          const urlSearchParams = new URLSearchParams(search);\n          const params = Object.fromEntries(urlSearchParams as any);\n          if (addressIsValid(params.address)) {\n            resolve(params.address);\n          }\n        }\n        if (loggedIn) {\n          resolve(address);\n        }\n        resolve('');\n      });\n}\n\nexport default getAddress;\n","import { ProxyProvider } from '@elrondnetwork/erdjs';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { NetworkType } from 'types';\n\nlet proxyProvider: ProxyProvider | null = null;\n\nexport function initializeProxyProvider(networkConfig?: NetworkType) {\n  const initializationNetworkConfig =\n    networkConfig || networkSelector(store.getState());\n  proxyProvider = new ProxyProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n  return proxyProvider;\n}\n\nexport function getProxyProvider(): ProxyProvider {\n  if (proxyProvider == null) {\n    return initializeProxyProvider();\n  } else {\n    return proxyProvider;\n  }\n}\n\nexport async function getAccountFromProxyProvider(address?: string) {\n  try {\n    const proxy = getProxyProvider();\n    return await proxy.getAccount(new Address(address));\n  } catch (err) {\n    return null;\n  }\n}\n\nexport async function getNetworkConfigFromProxyProvider() {\n  try {\n    return await getProxyProvider().getNetworkConfig();\n  } catch (err) {\n    console.error('error fetching network config');\n    return null;\n  }\n}\n","import { getAccountFromProxyProvider } from 'providers/proxyProvider';\n\nexport function getAccount(address?: string) {\n  return getAccountFromProxyProvider(address);\n}\n\nexport default getAccount;\n","import { setAccountNonce } from 'redux/slices';\nimport { store } from 'redux/store';\n\n// this is is needed to allow the users to set the nonce dynamically from outside the library\n// without getting access to store.dispatch function\nexport function setNonce(nonce: number) {\n  store.dispatch(setAccountNonce(nonce));\n}\n","import { AccountOnNetwork } from '@elrondnetwork/erdjs';\nimport { accountNonceSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport function getLatestNonce(account: AccountOnNetwork | null) {\n  const appState = store.getState();\n  const currentAccountNonce = accountNonceSelector(appState);\n  if (!account) {\n    return currentAccountNonce;\n  }\n  return currentAccountNonce && !isNaN(currentAccountNonce)\n    ? Math.max(currentAccountNonce, account.nonce.valueOf())\n    : account.nonce.valueOf();\n}\n\nexport default getLatestNonce;\n","import { accountSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { getAccount } from './getAccount';\n\nexport async function getAccountBalance(address?: string) {\n  let accountAddress = address;\n  if (accountAddress == null) {\n    const account = accountSelector(store.getState());\n    accountAddress = account.address;\n  }\n  const account = await getAccount(accountAddress);\n  if (account == null) {\n    throw 'Could not read account, user not logged in';\n  }\n  return account?.balance?.toString();\n}\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { setAccount } from 'redux/slices';\nimport { store } from 'redux/store';\nimport getAccount from './getAccount';\nimport getAddress from './getAddress';\nimport getLatestNonce from './getLatestNonce';\n\nconst setNewAccount = async () => {\n  try {\n    const address = await getAddress();\n    try {\n      const account = await getAccount(address);\n      if (account != null) {\n        const accountData = {\n          balance: account.balance.toString(),\n          address,\n          nonce: getLatestNonce(account)\n        };\n        store.dispatch(setAccount(accountData));\n        return accountData;\n      }\n    } catch (e) {\n      console.error('Failed getting account ', e);\n    }\n  } catch (e) {\n    console.error('Failed getting address ', e);\n  }\n  return null;\n};\n\nexport async function refreshAccount() {\n  const provider = getAccountProvider();\n  if (provider == null) {\n    throw 'Provider not initialized';\n  }\n  if (provider.isInitialized()) {\n    return setNewAccount();\n  } else {\n    try {\n      const initialized = await provider.init();\n      if (!initialized) {\n        return;\n      }\n      return setNewAccount();\n    } catch (e) {\n      console.error('Failed initializing provider ', e);\n    }\n  }\n  return undefined;\n}\n","const isAddressOfMetachain = (pubKey: Buffer) => {\n  // prettier-ignore\n  const metachainPrefix = Buffer.from([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ]);\n  const pubKeyPrefix = pubKey.slice(0, metachainPrefix.length);\n  if (pubKeyPrefix.equals(metachainPrefix)) {\n    return true;\n  }\n  const zeroAddress = Buffer.alloc(32).fill(0);\n  return pubKey.equals(zeroAddress);\n};\nexport const getShardOfAddress = (hexPubKey: any) => {\n  try {\n    const numShards = 3;\n    const maskHigh = parseInt('11', 2);\n    const maskLow = parseInt('01', 2);\n    const pubKey = Buffer.from(hexPubKey, 'hex');\n    const lastByteOfPubKey = pubKey[31];\n    if (isAddressOfMetachain(pubKey)) {\n      return 4294967295;\n    }\n    let shard = lastByteOfPubKey & maskHigh;\n    if (shard > numShards - 1) {\n      shard = lastByteOfPubKey & maskLow;\n    }\n    return shard;\n  } catch (err) {\n    return -1;\n  }\n};\n","import { SignableMessage, Address } from '@elrondnetwork/erdjs';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAddress } from 'utils/account/getAddress';\n\ninterface SignMessageType {\n  message: string;\n  callbackRoute?: string;\n}\n\nexport async function signMessage({ message, callbackRoute }: SignMessageType) {\n  const address = await getAddress();\n  const provider = getAccountProvider();\n\n  const callbackUrl = `${window.location.origin}${callbackRoute}`;\n  const signableMessage = new SignableMessage({\n    address: new Address(address),\n    message: Buffer.from(message, 'ascii')\n  });\n  const signedMessage = await provider.signMessage(signableMessage, {\n    callbackUrl: encodeURIComponent(callbackUrl)\n  });\n\n  return signedMessage;\n}\n\nexport default signMessage;\n","import { loginAction } from 'redux/commonActions';\nimport { store } from 'redux/store';\nimport { LoginMethodsEnum } from 'types';\n\nexport function loginWithExternalProvider(address: string) {\n  store.dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.extra }));\n}\n","export const logarithmicRest = (position: number) => {\n  const minp = 0;\n  const maxp = 10;\n\n  const minv = Math.log(0.005);\n  const maxv = Math.log(2);\n\n  const scale = (maxv - minv) / (maxp - minp);\n\n  return Math.exp(minv + scale * (position - minp));\n};\n","import BigNumber from 'bignumber.js';\n\nexport const stringIsInteger = (\n  integer: string,\n  positiveNumbersOnly = true\n) => {\n  const stringInteger = String(integer);\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n  const bNparsed = new BigNumber(stringInteger);\n  const limit = positiveNumbersOnly ? 0 : -1;\n  return (\n    bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit\n  );\n};\n","import BigNumber from 'bignumber.js';\n\nexport const stringIsFloat = (amount: string) => {\n  // tslint:disable-next-line\n  let [wholes, decimals] = amount.split('.');\n  if (decimals) {\n    while (decimals.charAt(decimals.length - 1) === '0') {\n      decimals = decimals.slice(0, -1);\n    }\n  }\n  const number = decimals ? [wholes, decimals].join('.') : wholes;\n  const bNparsed = new BigNumber(number);\n  return bNparsed.toString(10) === number && bNparsed.comparedTo(0) >= 0;\n};\n","const esdtParts = 2;\nconst nftParts = 3;\n\nconst defaultResult = {\n  isEsdt: false,\n  isNft: false,\n  isEgld: false\n};\n\nexport function getIdentifierType(identifier?: string): {\n  isEsdt: boolean;\n  isNft: boolean;\n  isEgld: boolean;\n} {\n  const parts = identifier?.split('-').length;\n\n  if (parts === esdtParts) {\n    return {\n      ...defaultResult,\n      isEsdt: true\n    };\n  }\n  if (parts === nftParts) {\n    return {\n      ...defaultResult,\n      isNft: true\n    };\n  }\n  return {\n    ...defaultResult,\n    isEgld: true\n  };\n}\nexport default getIdentifierType;\n","export function pipe<ValueType>(previous: ValueType) {\n  return {\n    if: function (condition: boolean) {\n      if (condition) {\n        return {\n          then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n            // if a callback is passed, callback is executed with previous value\n            newValue instanceof Function\n              ? pipe(newValue(previous))\n              : pipe(newValue)\n        };\n      } else {\n        return {\n          then: () => pipe(previous)\n        };\n      }\n    },\n\n    then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n      newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue),\n\n    valueOf: function () {\n      return previous;\n    }\n  };\n}\nexport default pipe;\n","import { Balance, Token } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  denomination as configDenomination,\n  decimals as configDecimals\n} from 'constants/index';\nimport { stringIsInteger } from 'utils/validation';\nimport pipe from './pipe';\n\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\n\nexport function denominate({\n  input,\n  denomination = configDenomination,\n  decimals = configDecimals,\n  showLastNonZeroDecimal = true,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false\n}: {\n  input: string | Balance;\n  denomination?: number;\n  decimals?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}) {\n  const token = new Token({ decimals: denomination });\n\n  if (typeof input === 'string' && !stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  return (\n    pipe(input as string)\n      // denominate\n      .if(typeof input === 'string')\n      .then(() =>\n        new Balance(token, 0, new BigNumber(input as string)).toDenominated()\n      )\n\n      .if(input.constructor === Balance)\n      .then(() => (input as Balance).toDenominated())\n\n      // format\n      .then((current) => {\n        const bnBalance = new BigNumber(current);\n\n        if (bnBalance.isZero()) {\n          return '0';\n        }\n        const balance = bnBalance.toString(10);\n        const [integerPart, decimalPart] = balance.split('.');\n        const bNdecimalPart = new BigNumber(decimalPart || 0);\n\n        const decimalPlaces = pipe(0)\n          .if(Boolean(decimalPart && showLastNonZeroDecimal))\n          .then(() => Math.max(decimalPart.length, decimals))\n\n          .if(bNdecimalPart.isZero() && !showLastNonZeroDecimal)\n          .then(0)\n\n          .if(Boolean(decimalPart && !showLastNonZeroDecimal))\n          .then(() => Math.min(decimalPart.length, decimals))\n\n          .valueOf();\n\n        const shownDecimalsAreZero =\n          decimalPart &&\n          decimals >= 1 &&\n          decimals <= decimalPart.length &&\n          bNdecimalPart.isGreaterThan(0) &&\n          new BigNumber(decimalPart.substring(0, decimals)).isZero();\n\n        const formatted = bnBalance.toFormat(decimalPlaces);\n\n        const formattedBalance = pipe(balance)\n          .if(addCommas)\n          .then(formatted)\n\n          .if(Boolean(shownDecimalsAreZero))\n          .then((current) => {\n            const integerPartZero = new BigNumber(integerPart).isZero();\n            const [numericPart, decimalSide] = current.split('.');\n\n            const zeroPlaceholders = new Array(decimals - 1).fill(0);\n            const zeros = [...zeroPlaceholders, 0].join('');\n            const minAmount = [...zeroPlaceholders, 1].join(''); // 00..1\n\n            if (!integerPartZero) {\n              return `${numericPart}.${zeros}`;\n            }\n\n            if (showIsLessThanDecimalsLabel) {\n              return `<${numericPart}.${minAmount}`;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .if(Boolean(!shownDecimalsAreZero && decimalPart))\n          .then((current) => {\n            if (showLastNonZeroDecimal) {\n              return current;\n            }\n\n            const [numericPart] = current.split('.');\n            const decimalSide = decimalPart.substring(0, decimalPlaces);\n\n            if (!decimalSide) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .valueOf();\n\n        return formattedBalance;\n      })\n\n      .valueOf()\n  );\n}\nexport default denominate;\n","import {\n  createBalanceBuilder,\n  Token,\n  TokenType\n} from '@elrondnetwork/erdjs/out';\nimport { denomination as configDenomination } from 'constants/index';\n\nexport function nominate(input: string, customDenomination?: number) {\n  const balance = createBalanceBuilder(\n    new Token({\n      decimals: customDenomination || configDenomination,\n      type: TokenType.Fungible\n    })\n  );\n  return balance(input).toString();\n}\n\nexport default nominate;\n","import {\n  Transaction,\n  Nonce,\n  Balance,\n  GasPrice,\n  GasLimit,\n  TransactionPayload,\n  ChainID,\n  TransactionVersion,\n  Address,\n  NetworkConfig,\n  GasPriceModifier\n} from '@elrondnetwork/erdjs';\nimport { stringIsFloat, stringIsInteger } from 'utils/validation';\n\ninterface CalculateFeeLimitType {\n  gasLimit: string;\n  gasPrice: string;\n  data: string;\n  gasPerDataByte: string;\n  gasPriceModifier: string;\n  chainId: string;\n  minGasLimit?: string;\n  defaultGasPrice?: string;\n}\nconst placeholderData = {\n  from: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa',\n  to: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa'\n};\nexport function calculateFeeLimit({\n  minGasLimit = '50000',\n  gasLimit,\n  gasPrice,\n  data: inputData,\n  gasPerDataByte,\n  gasPriceModifier,\n  defaultGasPrice = '1000000000',\n  chainId\n}: CalculateFeeLimitType) {\n  const data = inputData || '';\n  const validGasLimit = stringIsInteger(gasLimit) ? gasLimit : minGasLimit;\n  const validGasPrice = stringIsFloat(gasPrice) ? gasPrice : defaultGasPrice;\n  const transaction = new Transaction({\n    nonce: new Nonce(0),\n    value: Balance.Zero(),\n    receiver: new Address(placeholderData.to),\n    gasPrice: new GasPrice(parseInt(validGasPrice)),\n    gasLimit: new GasLimit(parseInt(validGasLimit)),\n    data: new TransactionPayload(data.trim()),\n    chainID: new ChainID(chainId),\n    version: new TransactionVersion(1)\n  });\n\n  const networkConfig = new NetworkConfig();\n  networkConfig.MinGasLimit = new GasLimit(parseInt(minGasLimit));\n  networkConfig.GasPerDataByte = parseInt(gasPerDataByte);\n  networkConfig.GasPriceModifier = new GasPriceModifier(\n    parseFloat(gasPriceModifier)\n  );\n  try {\n    const bNfee = transaction.computeFee(networkConfig);\n    const fee = bNfee.toString(10);\n    return fee;\n  } catch (err) {\n    return '0';\n  }\n}\n","export const getUsdValue = ({\n  amount,\n  usd,\n  decimals = 2\n}: {\n  amount: string;\n  usd: number;\n  decimals?: number;\n}) => {\n  const sum = (parseFloat(amount) * usd).toFixed(decimals);\n  return parseFloat(sum).toLocaleString('en', {\n    maximumFractionDigits: decimals,\n    minimumFractionDigits: decimals\n  });\n};\n","import { Address, TransactionPayload } from '@elrondnetwork/erdjs';\nimport { TypesOfSmartContractCallsEnum } from 'types';\nimport { addressIsValid } from './account';\nimport { isStringBase64 } from './decoders';\n\nexport const ESDTTransferTypes = [\n  'ESDTNFTTransfer',\n  'ESDTNFTBurn',\n  'ESDTNFTAddQuantity',\n  'ESDTNFTCreate',\n  'MultiESDTNFTTransfer',\n  'ESDTTransfer',\n  'ESDTBurn',\n  'ESDTLocalMint',\n  'ESDTLocalBurn',\n  'ESDTWipe',\n  'ESDTFreeze'\n];\n\nexport function isContract(\n  receiver: string,\n  sender?: string,\n  data = ''\n): boolean {\n  const isValid = addressIsValid(receiver);\n\n  if (!isValid) {\n    return false;\n  }\n\n  const isContract = new Address(receiver).isContractAddress();\n\n  if (isContract) {\n    return true;\n  }\n\n  const extractedAddress = getAddressFromDataField({ receiver, data });\n\n  if (!extractedAddress) {\n    return false;\n  }\n\n  const isExtractedAddressContractCall = new Address(\n    extractedAddress\n  ).isContractAddress();\n\n  return (\n    isExtractedAddressContractCall || isSelfESDTContract(receiver, sender, data)\n  );\n}\n\nconst isHexValidCharacters = (str: string) => {\n  return str.toLowerCase().match(/[0-9a-f]/g);\n};\nconst isHexValidLength = (str: string) => {\n  return str.length % 2 === 0;\n};\n\nexport function isSelfESDTContract(\n  receiver: string,\n  sender?: string,\n  data?: string\n) {\n  const parts = data?.split('@');\n  if (parts == null) {\n    return false;\n  }\n  const [type, ...restParts] = parts;\n  const isSelfTransaction =\n    sender != null && receiver != null && receiver === sender;\n  const isCorrectESDTType = ESDTTransferTypes.includes(type);\n  const areDataPartsValid = restParts.every(\n    (part) => isHexValidCharacters(part) && isHexValidLength(part)\n  );\n  return isSelfTransaction && isCorrectESDTType && areDataPartsValid;\n}\n\nexport function getAddressFromDataField({\n  receiver,\n  data\n}: {\n  receiver: string;\n  data: string;\n}) {\n  try {\n    if (!data) {\n      return receiver;\n    }\n    const parsedData = isStringBase64(data)\n      ? TransactionPayload.fromEncoded(data).toString()\n      : data;\n\n    const addressIndex = getAddressIndex(parsedData);\n\n    const parts = parsedData.split('@');\n    return addressIndex > -1 ? parts[addressIndex] : receiver;\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n}\n\nfunction getAddressIndex(data: string) {\n  if (data.includes(TypesOfSmartContractCallsEnum.MultiESDTNFTTransfer)) {\n    return 1;\n  }\n  if (data.includes(TypesOfSmartContractCallsEnum.ESDTNFTTransfer)) {\n    return 4;\n  }\n  return -1;\n}\n\nexport default isContract;\n","let classnames: any = {};\ntry {\n  classnames = require('classnames');\n} catch (err) {}\n\nexport default classnames;\n","import classNames from 'optionalPackages/classnames';\n\nexport function getGeneratedClasses(\n  className: string,\n  shouldRenderDefaultCss: boolean,\n  defaultStyles: Record<string, string>\n) {\n  return Object.entries(defaultStyles).reduce(\n    (acc, [key, defaultClassNames]) => {\n      acc[key] = classNames?.(\n        `${className}_${key}`,\n        shouldRenderDefaultCss && (defaultClassNames as string)\n      );\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n}\n","export const wrapperClassName = 'dapp-core-ui-component';\nexport default wrapperClassName;\n","import React from 'react';\nimport {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook\n} from 'react-redux';\n\nconst defaultContextValue: any = null;\nexport const DappCoreContext = React.createContext(defaultContextValue);\n\nexport const useStore = createStoreHook(DappCoreContext);\nexport const useDispatch = createDispatchHook(DappCoreContext);\nexport const useSelector = createSelectorHook(DappCoreContext);\n","import { useState } from 'react';\nimport { ExtensionProvider } from '@elrondnetwork/erdjs';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector } from 'redux/selectors';\nimport { setTokenLogin } from 'redux/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseExtensionLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport type UseExtensionLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useExtensionLogin = ({\n  callbackRoute,\n  token,\n  redirectAfterLogin = false\n}: UseExtensionLoginPropsType): UseExtensionLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n\n  async function initiateLogin() {\n    setIsLoading(true);\n    const provider: ExtensionProvider = ExtensionProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n      if (signature) {\n        dispatch(\n          setTokenLogin({\n            loginToken: String(token),\n            signature\n          })\n        );\n      }\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.extension })\n      );\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (error) {\n      console.error('error loging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n","import { useState } from 'react';\nimport { newWalletProvider } from 'providers/utils';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, networkSelector } from 'redux/selectors';\nimport { setWalletLogin } from 'redux/slices';\nimport { store } from 'redux/store';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseWebWalletLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n}\n\nexport type UseWebWalletLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useWebWalletLogin = ({\n  callbackRoute,\n  token\n}: UseWebWalletLoginPropsType): UseWebWalletLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  async function initiateLogin() {\n    try {\n      setIsLoading(true);\n      const appState = store.getState();\n      const network = networkSelector(appState);\n      const provider = newWalletProvider(network.walletAddress);\n\n      const now = new Date();\n      const expires: number = now.setMinutes(now.getMinutes() + 3) / 1000;\n      const walletLoginData = {\n        data: {},\n        expires: expires\n      };\n\n      store.dispatch(setWalletLogin(walletLoginData));\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const loginData = {\n        callbackUrl: callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(loginData);\n    } catch (error) {\n      console.error(error);\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = error != null;\n\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n\nexport default useWebWalletLogin;\n","import { useEffect, useState } from 'react';\nimport { HWProvider } from '@elrondnetwork/erdjs';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { getProxyProvider } from 'providers/proxyProvider';\nimport { getLedgerConfiguration } from 'providers/utils';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, ledgerAccountSelector } from 'redux/selectors';\nimport {\n  updateLedgerAccount,\n  setLedgerLogin,\n  setTokenLogin,\n  setLedgerAccount\n} from 'redux/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getLedgerErrorCodes, optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\nconst failInitializeErrorText =\n  'Could not initialise ledger app, make sure Elrond app is open';\n\nconst defaultAddressesPerPage = 10;\n\nexport interface UseLedgerLoginPropsType {\n  callbackRoute: string;\n  addressesPerPage?: number;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  version: string;\n  contractDataEnabled: boolean;\n\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport function useLedgerLogin({\n  callbackRoute,\n  token,\n  addressesPerPage = defaultAddressesPerPage,\n  redirectAfterLogin = false\n}: UseLedgerLoginPropsType): LedgerLoginHookReturnType {\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const proxy = getProxyProvider();\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hwWalletP = new HWProvider(proxy);\n  const [startIndex, setStartIndex] = useState(0);\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [version, setVersion] = useState('');\n  const [contractDataEnabled, setContractDataEnabled] = useState(false);\n  const [\n    selectedAddress,\n    setSelectedAddress\n  ] = useState<SelectedAddress | null>(null);\n\n  const [showAddressList, setShowAddressList] = useState(false);\n\n  function dispatchLoginActions({\n    provider,\n    address,\n    index,\n    signature\n  }: {\n    provider: HWProvider;\n    address: string;\n    index: number;\n    signature?: string;\n  }) {\n    setAccountProvider(provider);\n\n    dispatch(setLedgerLogin({ index, loginType: LoginMethodsEnum.ledger }));\n\n    if (signature) {\n      dispatch(\n        setTokenLogin({\n          loginToken: String(token),\n          signature\n        })\n      );\n    }\n    dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.ledger }));\n    optionalRedirect(callbackRoute, redirectAfterLogin);\n  }\n\n  const onLoginFailed = (err: any, customMessage?: string) => {\n    const { errorMessage } = getLedgerErrorCodes(err);\n\n    if (errorMessage) {\n      setError(errorMessage + customMessage);\n    }\n    setIsLoading(false);\n    console.warn(err);\n    dispatch(setLedgerAccount(null));\n  };\n\n  async function loginUser(hwWalletProvider: HWProvider) {\n    if (selectedAddress == null) {\n      return false;\n    }\n    const { index } = selectedAddress;\n\n    if (token) {\n      try {\n        const loginInfo = await hwWalletProvider.tokenLogin({\n          token: Buffer.from(`${token}{}`),\n          addressIndex: index\n        });\n        dispatchLoginActions({\n          address: loginInfo.address,\n          provider: hwWalletProvider,\n          index: index,\n          signature: loginInfo.signature.hex()\n        });\n      } catch (err) {\n        onLoginFailed(err, '. Update Elrond App to continue.');\n      }\n    } else {\n      try {\n        const address = await hwWalletProvider.login({ addressIndex: index });\n        dispatchLoginActions({\n          address,\n          provider: hwWalletProvider,\n          index\n        });\n      } catch (err) {\n        onLoginFailed(err);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async function onConfirmSelectedAddress() {\n    try {\n      setIsLoading(true);\n      if (selectedAddress == null) {\n        return false;\n      }\n      if (ledgerAccount) {\n        dispatch(updateLedgerAccount(selectedAddress));\n      } else {\n        dispatch(\n          setLedgerAccount({\n            ...selectedAddress,\n            version,\n            hasContractDataEnabled: contractDataEnabled\n          })\n        );\n      }\n\n      const hwWalletProvider = new HWProvider(proxy);\n      const initialized = await hwWalletProvider.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        return false;\n      }\n      setIsLoading(false);\n      await loginUser(hwWalletProvider);\n    } catch (err) {\n      const { errorMessage } = getLedgerErrorCodes(err);\n      if (errorMessage) {\n        setError(errorMessage);\n      }\n      console.warn(failInitializeErrorText, err);\n    } finally {\n      setIsLoading(false);\n    }\n    setShowAddressList(false);\n    return true;\n  }\n\n  async function fetchAccounts() {\n    try {\n      setIsLoading(true);\n      const initialized = await hwWalletP.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        setIsLoading(false);\n        return;\n      }\n      const accounts = await hwWalletP.getAccounts(\n        startIndex,\n        addressesPerPage\n      );\n      const ledgerData = await getLedgerConfiguration(hwWalletP);\n      setVersion(ledgerData.version);\n      setContractDataEnabled(ledgerData.dataEnabled);\n      setAccounts(accounts);\n      setIsLoading(false);\n    } catch (err) {\n      const { errorMessage, defaultErrorMessage } = getLedgerErrorCodes(err);\n      setError(errorMessage ?? defaultErrorMessage);\n      console.error('error', err);\n      setIsLoading(false);\n    }\n  }\n\n  async function onStartLogin() {\n    setError('');\n    try {\n      setIsLoading(true);\n      if (ledgerAccount != null) {\n        const hwWalletP = new HWProvider(proxy);\n        const initialized = await hwWalletP.init();\n        if (!initialized) {\n          console.warn(failInitializeErrorText);\n          return;\n        }\n        const address = await hwWalletP.login({\n          addressIndex: selectedAddress?.index\n        });\n        setAccountProvider(hwWalletP);\n        dispatch(\n          loginAction({ address, loginMethod: LoginMethodsEnum.ledger })\n        );\n        optionalRedirect(callbackRoute, redirectAfterLogin);\n      } else {\n        if (accounts?.length > 0) {\n          setShowAddressList(true);\n        } else {\n          await fetchAccounts();\n          setShowAddressList(true);\n        }\n      }\n    } catch (error) {\n      console.error('error ', error);\n      const { defaultErrorMessage } = getLedgerErrorCodes();\n      setError(defaultErrorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function onSelectAddress(newSelectedAddress: SelectedAddress | null) {\n    setSelectedAddress(newSelectedAddress);\n  }\n\n  function onGoToNextPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => current + 1);\n  }\n\n  function onGoToPrevPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => (current === 0 ? 0 : current - 1));\n  }\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [startIndex]);\n\n  const loginFailed = Boolean(error);\n\n  return [\n    onStartLogin,\n    {\n      loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed\n    },\n    {\n      accounts,\n      showAddressList,\n      startIndex,\n      selectedAddress,\n      version,\n      contractDataEnabled,\n\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress\n    }\n  ];\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useUpdateEffect(effect: any, dependencies: any[] = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { WalletConnectProvider } from '@elrondnetwork/erdjs';\n\nimport { useUpdateEffect } from 'hooks/useUpdateEffect';\nimport {\n  getAccountProvider,\n  setAccountProvider\n} from 'providers/accountProvider';\nimport { getProxyProvider } from 'providers/proxyProvider';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport {\n  isLoggedInSelector,\n  walletConnectBridgeAddressSelector,\n  walletConnectDeepLinkSelector\n} from 'redux/selectors';\nimport {\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletConnectLogin\n} from 'redux/slices';\n\nimport { LoginMethodsEnum } from 'types/enums';\nimport { logout } from 'utils';\nimport { optionalRedirect } from 'utils/internal';\nimport Timeout = NodeJS.Timeout;\nimport { LoginHookGenericStateType } from '../types';\n\ninterface InitWalletConnectType {\n  callbackRoute: string;\n  logoutRoute: string;\n  token?: string;\n  shouldLoginUser?: boolean;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface WalletConnectLoginHookCustomStateType {\n  uriDeepLink: string | null;\n  walletConnectUri?: string;\n}\n\nexport type WalletConnectLoginHookReturnType = [\n  (loginProvider?: boolean) => void,\n  LoginHookGenericStateType,\n  WalletConnectLoginHookCustomStateType\n];\n\nexport const useWalletConnectLogin = ({\n  callbackRoute,\n  logoutRoute,\n  token,\n  redirectAfterLogin = false\n}: InitWalletConnectType): WalletConnectLoginHookReturnType => {\n  const dispatch = useDispatch();\n  const heartbeatInterval = 15000;\n\n  const [error, setError] = useState<string>('');\n  const [wcUri, setWcUri] = useState<string>('');\n\n  const proxy = getProxyProvider();\n\n  const provider = getAccountProvider();\n  const walletConnectBridgeAddress = useSelector(\n    walletConnectBridgeAddressSelector\n  );\n  const walletConnectDeepLink = useSelector(walletConnectDeepLinkSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const providerRef = useRef<any>(provider);\n\n  let heartbeatDisconnectInterval: Timeout;\n\n  const hasWcUri = Boolean(wcUri);\n  const isLoading = !hasWcUri;\n  const uriDeepLink = hasWcUri\n    ? `${walletConnectDeepLink}?wallet-connect=${encodeURIComponent(wcUri)}`\n    : null;\n\n  useEffect(() => {\n    handleHeartbeat();\n\n    const interval = setInterval(() => {\n      handleHeartbeat();\n    }, heartbeatInterval);\n\n    return () => clearInterval(interval);\n  }, [provider]);\n\n  useUpdateEffect(() => {\n    generateWcUri();\n  }, [token]);\n\n  useUpdateEffect(() => {\n    providerRef.current = provider;\n  }, [provider]);\n\n  async function handleHeartbeat() {\n    const isProviderConnected = Boolean(\n      providerRef.current?.walletConnector?.connected\n    );\n    if (!isProviderConnected) {\n      return;\n    }\n\n    const customMessage = {\n      method: 'heartbeat',\n      params: {}\n    };\n\n    try {\n      await providerRef.current.sendCustomMessage(customMessage);\n    } catch (error) {\n      console.error('Connection lost', error);\n      handleOnLogout();\n    }\n  }\n\n  async function handleOnLogin() {\n    try {\n      const provider = providerRef.current;\n      if (isLoggedIn) {\n        return;\n      }\n      if (provider == null) {\n        return;\n      }\n      const address = await provider.getAddress();\n      const signature = await provider.getSignature();\n      const hasSignature = Boolean(signature);\n      const loginActionData = {\n        address: address,\n        loginMethod: LoginMethodsEnum.walletconnect\n      };\n\n      const loginData = {\n        logoutRoute: logoutRoute,\n        loginType: 'walletConnect',\n        callbackRoute: callbackRoute\n      };\n\n      if (hasSignature) {\n        dispatch(setWalletConnectLogin(loginData));\n        dispatch(setTokenLoginSignature(signature));\n      } else {\n        dispatch(setWalletConnectLogin(loginData));\n      }\n      dispatch(loginAction(loginActionData));\n\n      provider.walletConnector.on('heartbeat', () => {\n        clearInterval(heartbeatDisconnectInterval);\n        heartbeatDisconnectInterval = setInterval(() => {\n          console.log('Maiar Wallet Connection Lost');\n          handleOnLogout();\n          clearInterval(heartbeatDisconnectInterval);\n        }, 150000);\n      });\n\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (err) {\n      setError('Invalid address');\n      console.error(err);\n    }\n  }\n\n  const handleOnLogout = () => {\n    logout(logoutRoute);\n  };\n\n  async function initiateLogin(loginProvider = true) {\n    const shouldGenerateWcUri = loginProvider && !wcUri;\n    if (\n      !walletConnectBridgeAddress ||\n      (providerRef?.current?.isInitialized?.() && !shouldGenerateWcUri)\n    ) {\n      return;\n    }\n\n    const providerHandlers = {\n      onClientLogin: handleOnLogin,\n      onClientLogout: handleOnLogout\n    };\n\n    const newProvider = new WalletConnectProvider(\n      proxy,\n      walletConnectBridgeAddress,\n      providerHandlers\n    );\n\n    await newProvider.init();\n    setAccountProvider(newProvider);\n    providerRef.current = newProvider;\n    if (loginProvider) {\n      generateWcUri();\n    }\n  }\n\n  async function generateWcUri() {\n    if (!walletConnectBridgeAddress) {\n      return;\n    }\n\n    const walletConnectUri:\n      | string\n      | undefined = await providerRef.current?.login();\n    const hasUri = Boolean(walletConnectUri);\n\n    if (!hasUri) {\n      return;\n    }\n\n    if (!token) {\n      setWcUri(walletConnectUri as string);\n      return;\n    }\n\n    const wcUriWithToken = `${walletConnectUri}&token=${token}`;\n\n    setWcUri(wcUriWithToken);\n    dispatch(setTokenLogin({ loginToken: token }));\n  }\n\n  const loginFailed = error != null;\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    },\n    { uriDeepLink, walletConnectUri: wcUri }\n  ];\n};\n\nexport default useWalletConnectLogin;\n","import {\n  clearSignedTransaction,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions\n} from 'redux/slices';\nimport { store } from 'redux/store';\n\nexport function removeTransactionsToSign(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\nexport function removeSignedTransaction(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\n\nexport function removeAllSignedTransactions() {\n  store.dispatch(clearAllSignedTransactions());\n}\n\nexport function removeAllTransactionsToSign() {\n  store.dispatch(clearAllTransactionsToSign());\n}\n","import { Transaction } from '@elrondnetwork/erdjs/out';\nimport BigNumber from 'bignumber.js';\nimport { gasPerDataByte, gasPriceModifier } from 'constants/index';\nimport { calculateFeeLimit } from 'utils/operations';\n\nexport function calcTotalFee(transactions: Transaction[], minGasLimit: number) {\n  let totalFee = new BigNumber(0);\n\n  transactions.forEach((tx) => {\n    const fee = calculateFeeLimit({\n      gasPerDataByte,\n      gasPriceModifier,\n      minGasLimit: String(minGasLimit),\n      gasLimit: tx\n        .getGasLimit()\n        .valueOf()\n        .toString(),\n      gasPrice: tx\n        .getGasPrice()\n        .valueOf()\n        .toString(),\n      data: tx.getData().toString(),\n      chainId: tx.getChainID().valueOf()\n    });\n    totalFee = totalFee.plus(new BigNumber(fee));\n  });\n\n  return totalFee;\n}\n","import BigNumber from 'bignumber.js';\nimport { networkConstants } from 'constants/index';\n\nimport { accountBalanceSelector, chainIDSelector } from 'redux/selectors';\nimport {\n  setTransactionsToSign,\n  setNotificationModal,\n  setTransactionsDisplayInfo\n} from 'redux/slices';\nimport { store } from 'redux/store';\nimport { NotificationTypesEnum, SignTransactionsPropsType } from 'types';\nimport { stringIsFloat } from 'utils';\nimport { SendTransactionReturnType } from './sendTransactions';\nimport { calcTotalFee } from './utils';\n\nexport function signTransactions({\n  transactions,\n  callbackRoute,\n  minGasLimit = networkConstants.DEFAULT_MIN_GAS_LIMIT,\n  customTransactionInformation,\n  transactionsDisplayInfo\n}: SignTransactionsPropsType): SendTransactionReturnType {\n  const appState = store.getState();\n  const sessionId = Date.now().toString();\n  const accountBalance = accountBalanceSelector(appState);\n  const storeChainId = chainIDSelector(appState);\n\n  const transactionsPayload = Array.isArray(transactions)\n    ? transactions\n    : [transactions];\n  const bNtotalFee = calcTotalFee(transactionsPayload, minGasLimit);\n  const bNbalance = new BigNumber(\n    stringIsFloat(accountBalance) ? accountBalance : '0'\n  );\n  const hasSufficientFunds = bNbalance.minus(bNtotalFee).isGreaterThan(0);\n\n  if (!hasSufficientFunds) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Insufficient EGLD funds',\n      description: 'Current EGLD balance cannot cover the transaction fees.'\n    };\n\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'insufficient funds', sessionId: null };\n  }\n\n  const hasValidChainId = transactionsPayload?.every(\n    (tx) => tx.getChainID().valueOf() === storeChainId.valueOf()\n  );\n  if (!hasValidChainId) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Network change detected',\n      description: 'The application tried to change the transaction network'\n    };\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'Invalid ChainID', sessionId: null };\n  }\n\n  const signTransactionsPayload = {\n    sessionId,\n    callbackRoute,\n    customTransactionInformation,\n    transactions: transactionsPayload.map((tx) => tx.toPlainObject())\n  };\n\n  store.dispatch(setTransactionsToSign(signTransactionsPayload));\n  store.dispatch(\n    setTransactionsDisplayInfo({ sessionId, transactionsDisplayInfo })\n  );\n  return { sessionId };\n}\n\nexport default signTransactions;\n","import { Address, Transaction } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  gasPrice as configGasPrice,\n  gasLimit as configGasLimit,\n  gasPerDataByte\n} from 'constants/index';\nimport newTransaction from 'models/newTransaction';\nimport { addressSelector, chainIDSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { SendSimpleTransactionPropsType } from 'types';\nimport { getAccount, getLatestNonce } from 'utils';\n\nenum ErrorCodesEnum {\n  'invalidReceiver' = 'Invalid Receiver address',\n  'unknownError' = 'Unknown Error. Please check the transactions and try again'\n}\n\n// TODO: replace with new erdjs function\nfunction calculateGasLimit(data?: string) {\n  const bNconfigGasLimit = new BigNumber(configGasLimit);\n  const bNgasPerDataByte = new BigNumber(gasPerDataByte);\n  const bNgasValue = data\n    ? bNgasPerDataByte.times(Buffer.from(data).length)\n    : 0;\n  const bNgasLimit = bNconfigGasLimit.plus(bNgasValue);\n  const gasLimit = bNgasLimit.toString(10);\n  return gasLimit;\n}\n\nexport async function transformAndSignTransactions({\n  transactions\n}: SendSimpleTransactionPropsType): Promise<Transaction[]> {\n  const address = addressSelector(store.getState());\n  const account = await getAccount(address);\n  const nonce = getLatestNonce(account);\n  return transactions.map((tx) => {\n    const {\n      value,\n      receiver,\n      data = '',\n      chainID,\n      version,\n      options,\n      gasPrice = configGasPrice,\n      gasLimit = calculateGasLimit(tx.data)\n    } = tx;\n    let validatedReceiver = receiver;\n\n    try {\n      const addr = new Address(receiver);\n      validatedReceiver = addr.hex();\n    } catch (err) {\n      throw ErrorCodesEnum.invalidReceiver;\n    }\n\n    const storeChainId = chainIDSelector(store.getState())\n      .valueOf()\n      .toString();\n    const transactionsChainId = chainID || storeChainId;\n    return newTransaction({\n      value,\n      receiver: validatedReceiver,\n      data,\n      gasPrice,\n      gasLimit: Number(gasLimit),\n      nonce: Number(nonce.valueOf().toString()),\n      sender: new Address(address).hex(),\n      chainID: transactionsChainId,\n      version,\n      options\n    });\n  });\n}\n\nexport default transformAndSignTransactions;\n","import { Transaction } from '@elrondnetwork/erdjs/out';\nimport { SendTransactionsPropsType, SimpleTransactionType } from 'types';\nimport { signTransactions } from './signTransactions';\nimport transformAndSignTransactions from './transformAndSignTransactions';\n\nexport interface SendTransactionReturnType {\n  error?: string;\n  sessionId: string | null;\n}\n\nexport async function sendTransactions({\n  transactions,\n  transactionsDisplayInfo,\n  redirectAfterSign = true,\n  callbackRoute = window.location.pathname,\n  signWithoutSending,\n  completedTransactionsDelay,\n  sessionInformation,\n  minGasLimit\n}: SendTransactionsPropsType): Promise<SendTransactionReturnType> {\n  try {\n    const transactionsPayload = Array.isArray(transactions)\n      ? transactions\n      : [transactions];\n\n    const areComplexTransactions = transactionsPayload.every(\n      (tx) => Object.getPrototypeOf(tx).toPlainObject != null\n    );\n    let txToSign = transactionsPayload;\n    if (!areComplexTransactions) {\n      txToSign = await transformAndSignTransactions({\n        transactions: transactionsPayload as SimpleTransactionType[],\n        minGasLimit\n      });\n    }\n\n    return signTransactions({\n      transactions: txToSign as Transaction[],\n      minGasLimit,\n      callbackRoute,\n      transactionsDisplayInfo,\n      customTransactionInformation: {\n        redirectAfterSign,\n        completedTransactionsDelay,\n        sessionInformation,\n        signWithoutSending\n      }\n    });\n  } catch (err) {\n    console.error('error signing transaction', err as any);\n    return { error: err as any, sessionId: null };\n  }\n}\n\nexport default sendTransactions;\n","import { useEffect } from 'react';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { transactionStatusSelector } from 'redux/selectors';\nimport { RootState } from 'redux/store';\nimport { TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  getIsTransactionCompleted,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils';\n\nexport interface UseTrackTransactionStatusArgsType {\n  transactionId: string | null;\n  onSuccess?: (transactionId: string | null) => void;\n  onFail?: (transactionId: string | null, errorMessage?: string) => void;\n  onTimedOut?: (transactionId: string | null) => void;\n  onCancelled?: (transactionId: string | null) => void;\n  onCompleted?: (transactionId: string | null) => void;\n}\n\nexport function useTrackTransactionStatus({\n  transactionId,\n  onSuccess,\n  onFail,\n  onCancelled,\n  onTimedOut,\n  onCompleted\n}: UseTrackTransactionStatusArgsType) {\n  const transactionsBatch = useSelector((state: RootState) =>\n    transactionStatusSelector(state, transactionId)\n  );\n\n  const { status, transactions, errorMessage } = transactionsBatch;\n\n  const isPending = getIsTransactionPending(status);\n  const isFailed = getIsTransactionFailed(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n  const isSuccessful = getIsTransactionSuccessful(status);\n  const isCompleted = getIsTransactionCompleted(status);\n\n  const isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n\n  useEffect(() => {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n  useEffect(() => {\n    if (isCompleted && onCompleted) {\n      onCompleted(transactionId);\n    }\n  }, [isCompleted]);\n\n  useEffect(() => {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n    }\n  }, [isFailed]);\n\n  useEffect(() => {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n    }\n  }, [isCancelled]);\n\n  useEffect(() => {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail?.(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return { errorMessage: 'No transaction to track' };\n  }\n\n  return {\n    isPending,\n    isSuccessful,\n    isFailed,\n    isCancelled,\n    isCompleted,\n    errorMessage,\n    status,\n    transactions\n  };\n}\n\nexport default useTrackTransactionStatus;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { pendingSignedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface UseGetPendingTransactionsReturnType {\n  pendingTransactions: SignedTransactionsType;\n  pendingTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasPendingTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetPendingTransactions(): UseGetPendingTransactionsReturnType {\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const pendingTransactionsArray: [\n    string,\n    SignedTransactionsBodyType\n  ][] = Object.entries(pendingTransactions);\n  const hasPendingTransactions = pendingTransactionsArray?.length > 0;\n  return {\n    pendingTransactions,\n    pendingTransactionsArray,\n    hasPendingTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { failedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetFailedTransactionsReturnType {\n  failedTransactions: SignedTransactionsType;\n  failedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasFailedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetFailedTransactions(): useGetFailedTransactionsReturnType {\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const failedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(failedTransactions);\n  const hasFailedTransactions = failedTransactionsArray?.length > 0;\n  return {\n    failedTransactions,\n    failedTransactionsArray,\n    hasFailedTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { successfulTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSuccessfulTransactionsReturnType {\n  successfulTransactions: SignedTransactionsType;\n  successfulTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSuccessfulTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetSuccessfulTransactions(): useGetSuccessfulTransactionsReturnType {\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const successfulTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(successfulTransactions);\n  const hasSuccessfulTransactions = successfulTransactionsArray?.length > 0;\n  return {\n    successfulTransactions,\n    successfulTransactionsArray,\n    hasSuccessfulTransactions\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport {\n  MultiSignTxType,\n  TxDataTokenType,\n  TxsDataTokensType\n} from 'types/transactions';\nimport { getTokenFromData } from 'utils';\nimport parseMultiEsdtTransferData from 'utils/transactions/parseMultiEsdtTransferData';\n\nconst defaultTransactionInfo: TxDataTokenType = {\n  tokenId: '',\n  amount: '',\n  type: '',\n  multiTxData: '',\n  receiver: ''\n};\n\ninterface UseParseMultiEsdtTransferDataPropsType {\n  transactions?: Transaction[];\n}\n\ninterface UseParseMultiEsdtTransferDataReturnType {\n  parsedTransactionsByDataField: TxsDataTokensType;\n  getTxInfoByDataField: (\n    data: string,\n    multiTransactionData?: string\n  ) => TxDataTokenType;\n  allTransactions: MultiSignTxType[];\n}\n\nexport function useParseMultiEsdtTransferData({\n  transactions\n}: UseParseMultiEsdtTransferDataPropsType): UseParseMultiEsdtTransferDataReturnType {\n  const [parsedTransactionsByDataField, setParsedTransactions] =\n    useState<TxsDataTokensType>({});\n  const [allTransactions, setAllTransactions] = useState<MultiSignTxType[]>([]);\n\n  function addTransactionDataToParsedInfo(\n    data: string,\n    txInfo: TxDataTokenType\n  ) {\n    setParsedTransactions((existing) => ({\n      ...existing,\n      [data]: txInfo\n    }));\n  }\n\n  function getTxInfoByDataField(\n    data: string,\n    multiTransactionData?: string\n  ): TxDataTokenType {\n    if (parsedTransactionsByDataField == null) {\n      return defaultTransactionInfo;\n    }\n\n    if (data in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[data];\n    }\n\n    if (\n      multiTransactionData != null &&\n      String(multiTransactionData) in parsedTransactionsByDataField\n    ) {\n      return parsedTransactionsByDataField[multiTransactionData];\n    }\n\n    return defaultTransactionInfo;\n  }\n\n  function extractTransactionESDTData() {\n    if (transactions && transactions.length > 0) {\n      const allTxs: MultiSignTxType[] = [];\n      transactions.forEach((transaction, transactionIndex) => {\n        const txData = transaction.getData().toString();\n        const multiTxs = parseMultiEsdtTransferData(txData);\n\n        if (multiTxs.length > 0) {\n          multiTxs.forEach((trx, idx) => {\n            const newTx: MultiSignTxType = {\n              transaction,\n              multiTxData: trx.data,\n              transactionIndex: idx\n            };\n            addTransactionDataToParsedInfo(trx.data, {\n              tokenId: trx.token ? trx.token : '',\n              amount: trx.amount ? trx.amount : '',\n              type: trx.type,\n              nonce: trx.nonce ? trx.nonce : '',\n              multiTxData: trx.data,\n              receiver: trx.receiver\n            });\n            allTxs.push(newTx);\n          });\n        } else {\n          const { tokenId, amount } = getTokenFromData(\n            transaction.getData().toString()\n          );\n\n          if (tokenId) {\n            addTransactionDataToParsedInfo(transaction.getData().toString(), {\n              tokenId,\n              amount,\n              receiver: transaction.getReceiver().bech32()\n            });\n          }\n          allTxs.push({ transaction, transactionIndex });\n        }\n      });\n      setAllTransactions(allTxs);\n    }\n  }\n\n  useEffect(() => {\n    extractTransactionESDTData();\n  }, [transactions]);\n\n  return {\n    parsedTransactionsByDataField,\n    getTxInfoByDataField,\n    allTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport {\n  completedTransactionsSelector,\n  failedTransactionsSelector,\n  pendingSignedTransactionsSelector,\n  signedTransactionsSelector,\n  successfulTransactionsSelector,\n  timedOutTransactionsSelector\n} from 'redux/selectors';\n\ninterface useGetActiveTransactionsStatusReturnType {\n  pending: boolean;\n  timedOut: boolean;\n  fail: boolean;\n  success: boolean;\n  completed: boolean;\n  hasActiveTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetActiveTransactionsStatus(): useGetActiveTransactionsStatusReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const completedTransactions = useSelector(completedTransactionsSelector);\n\n  const pending = Object.keys(pendingTransactions)?.length > 0;\n\n  const timedOut = !pending && Object.keys(timedOutTransactions)?.length > 0;\n\n  const fail =\n    !pending && !timedOut && Object.keys(failedTransactions)?.length > 0;\n\n  const success =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(successfulTransactions).length > 0;\n\n  const completed =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(completedTransactions).length > 0;\n  const hasActiveTransactions = Object.keys(signedTransactions).length > 0;\n  return {\n    pending,\n    timedOut,\n    fail,\n    success,\n    completed,\n    hasActiveTransactions\n  };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { completedTransactionsSelector } from 'redux/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetCompletedTransactionsReturnType {\n  completedTransactions: SignedTransactionsType;\n  completedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasCompletedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetCompletedTransactions(): useGetCompletedTransactionsReturnType {\n  const completedTransactions = useSelector(completedTransactionsSelector);\n  const completedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(completedTransactions);\n  const hasCompletedTransactions = completedTransactionsArray?.length > 0;\n  return {\n    completedTransactions,\n    completedTransactionsArray,\n    hasCompletedTransactions\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { HWProvider, ExtensionProvider } from '@elrondnetwork/erdjs';\nimport {\n  setExternalProviderAsAccountProvider,\n  setAccountProvider\n} from 'providers/accountProvider';\nimport {\n  getNetworkConfigFromProxyProvider,\n  getProxyProvider\n} from 'providers/proxyProvider';\nimport { getLedgerConfiguration, newWalletProvider } from 'providers/utils';\nimport { loginAction } from 'redux/commonActions';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport {\n  loginMethodSelector,\n  walletConnectLoginSelector,\n  networkSelector,\n  walletLoginSelector,\n  addressSelector,\n  ledgerAccountSelector,\n  ledgerLoginSelector,\n  isLoggedInSelector\n} from 'redux/selectors';\nimport {\n  setAccount,\n  setIsAccountLoading,\n  setAccountLoadingError,\n  setLedgerAccount,\n  setWalletLogin,\n  setChainID\n} from 'redux/slices';\nimport { useWalletConnectLogin } from 'services/login/useWalletConnectLogin';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getAddress, getAccount, getLatestNonce, logout } from 'utils';\n\nexport default function ProviderInitializer() {\n  const network = useSelector(networkSelector);\n  const walletConnectLogin = useSelector(walletConnectLoginSelector);\n  const loginMethod = useSelector(loginMethodSelector);\n  const walletLogin = useSelector(walletLoginSelector);\n  const address = useSelector(addressSelector);\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const ledgerLogin = useSelector(ledgerLoginSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const [ledgerData, setLedgerData] = useState<{\n    version: string;\n    dataEnabled: boolean;\n  }>();\n\n  const proxy = getProxyProvider();\n  const dispatch = useDispatch();\n\n  const { callbackRoute, logoutRoute } = walletConnectLogin\n    ? walletConnectLogin\n    : { callbackRoute: '', logoutRoute: '' };\n\n  const [initWalletLoginProvider] = useWalletConnectLogin({\n    callbackRoute,\n    logoutRoute\n  });\n\n  useEffect(() => {\n    refreshChainID();\n  }, [network]);\n\n  useEffect(() => {\n    initializeProvider();\n  }, [loginMethod]);\n\n  useEffect(() => {\n    fetchAccount();\n  }, [address, isLoggedIn]);\n\n  useEffect(() => {\n    // prevent balance double fetching by handling ledgerAccount data separately\n    setLedgerAccountInfo();\n  }, [ledgerAccount, isLoggedIn, ledgerData]);\n\n  function refreshChainID() {\n    getNetworkConfigFromProxyProvider()\n      .then((networkConfig) => {\n        if (networkConfig) {\n          dispatch(setChainID(networkConfig.ChainID.valueOf()));\n        }\n      })\n      .catch((e: any) => {\n        console.error('To do ', e);\n      });\n  }\n\n  function setLedgerAccountInfo() {\n    if (ledgerAccount == null && ledgerLogin != null && ledgerData) {\n      dispatch(\n        setLedgerAccount({\n          index: ledgerLogin.index,\n          address,\n          hasContractDataEnabled: ledgerData.dataEnabled,\n          version: ledgerData.version\n        })\n      );\n    }\n  }\n\n  async function fetchAccount() {\n    dispatch(setIsAccountLoading(true));\n    if (address && isLoggedIn) {\n      try {\n        const account = await getAccount(address);\n        if (account) {\n          dispatch(\n            setAccount({\n              balance: account.balance.toString(),\n              address,\n              nonce: account.nonce.valueOf()\n            })\n          );\n        }\n      } catch (e) {\n        dispatch(setAccountLoadingError('Failed getting account'));\n        console.error('Failed getting account ', e);\n      }\n    }\n    dispatch(setIsAccountLoading(false));\n  }\n\n  async function tryAuthenticateWalletUser() {\n    try {\n      if (walletLogin != null) {\n        const provider = newWalletProvider(network.walletAddress);\n        const address = await getAddress();\n        if (address) {\n          setAccountProvider(provider);\n          dispatch(\n            loginAction({ address, loginMethod: LoginMethodsEnum.wallet })\n          );\n          const account = await getAccount(address);\n          if (account) {\n            dispatch(\n              setAccount({\n                balance: account.balance.toString(),\n                address,\n                nonce: getLatestNonce(account)\n              })\n            );\n          }\n        }\n        dispatch(setWalletLogin(null));\n      }\n    } catch (e) {\n      console.error('Failed authenticating wallet user ', e);\n    }\n  }\n\n  async function getInitializedHwWalletProvider() {\n    const hwWalletP = new HWProvider(proxy);\n    let isInitialized = hwWalletP.isInitialized();\n    if (!isInitialized) {\n      isInitialized = await hwWalletP.init();\n    }\n    if (!isInitialized && isLoggedIn) {\n      console.warn('Could not initialise ledger app');\n      logout();\n      return;\n    }\n    if (ledgerLogin?.index != null) {\n      hwWalletP.addressIndex = ledgerLogin.index;\n    }\n    return hwWalletP;\n  }\n\n  async function setLedgerProvider() {\n    try {\n      const hwWalletP = await getInitializedHwWalletProvider();\n      if (!hwWalletP) {\n        return;\n      }\n      const ledgerConfig = await getLedgerConfiguration(hwWalletP);\n      setAccountProvider(hwWalletP);\n      setLedgerData(ledgerConfig);\n    } catch (err) {\n      console.error('Could not initialise ledger app', err);\n      logout();\n    }\n  }\n\n  async function setExtensionProvider() {\n    try {\n      const address = await getAddress();\n      const provider = ExtensionProvider.getInstance().setAddress(address);\n      const success = await provider.init();\n\n      if (success) {\n        setAccountProvider(provider);\n      } else {\n        console.error(\n          'Could not initialise extension, make sure Elrond wallet extension is installed.'\n        );\n      }\n    } catch (err) {\n      console.error('Unable to login to ExtensionProvider', err);\n    }\n  }\n\n  function initializeProvider() {\n    if (loginMethod == null) {\n      return;\n    }\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger: {\n        setLedgerProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.walletconnect: {\n        initWalletLoginProvider(false);\n        break;\n      }\n      case LoginMethodsEnum.wallet: {\n        const provider = newWalletProvider(network.walletAddress);\n        setAccountProvider(provider);\n        break;\n      }\n\n      case LoginMethodsEnum.extension: {\n        setExtensionProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.extra: {\n        setExternalProviderAsAccountProvider();\n        break;\n      }\n\n      case LoginMethodsEnum.none: {\n        tryAuthenticateWalletUser();\n        break;\n      }\n      default:\n        return;\n    }\n  }\n\n  return null;\n}\n","import { Transaction } from '@elrondnetwork/erdjs';\nimport axios from 'axios';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport type SendSignedTransactionsReturnType = string[];\n\nexport async function sendSignedTransactions(\n  signedTransactions: Transaction[]\n): Promise<SendSignedTransactionsReturnType> {\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n  const promises = signedTransactions.map((transaction) => {\n    return axios.post(\n      `${apiAddress}/transactions`,\n      transaction.toPlainObject(),\n      { timeout: parseInt(apiTimeout) }\n    );\n  });\n  const response = await Promise.all(promises);\n\n  return response.map(({ data }) => data.txHash);\n}\n","import axios from 'axios';\nimport { networkConfigSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { SmartContractResult, TransactionServerStatusesEnum } from 'types';\n\nexport type GetTransactionsByHashesReturnType = {\n  hash: string;\n  invalidTransaction: boolean;\n  status: TransactionServerStatusesEnum;\n  results: SmartContractResult[];\n  sender: string;\n  receiver: string;\n  data: string;\n  previousStatus: string;\n  hasStatusChanged: boolean;\n}[];\n\nexport type PendingTransactionsType = {\n  hash: string;\n  previousStatus: string;\n}[];\n\nexport async function getTransactionsByHashes(\n  pendingTransactions: PendingTransactionsType\n): Promise<GetTransactionsByHashesReturnType> {\n  const networkConfig = networkConfigSelector(store.getState());\n  const hashes = pendingTransactions.map((tx) => tx.hash);\n  const { data: responseData } = await axios.get(\n    `${networkConfig.network.apiAddress}/transactions`,\n    {\n      params: {\n        hashes: hashes.join(','),\n        withScResults: true\n      }\n    }\n  );\n  return pendingTransactions.map(({ hash, previousStatus }) => {\n    const txOnNetwork = responseData.find(\n      (txResponse: any) => txResponse?.txHash === hash\n    );\n\n    return {\n      hash,\n      data: txOnNetwork.data,\n      invalidTransaction: txOnNetwork == null,\n      status: txOnNetwork.status,\n      results: txOnNetwork.results,\n      sender: txOnNetwork.sender,\n      receiver: txOnNetwork?.receiver,\n      previousStatus,\n      hasStatusChanged: txOnNetwork.status !== previousStatus\n    };\n  });\n}\n","import axios from 'axios';\nimport { configEndpoint } from 'constants/network';\nimport { NetworkType } from 'types';\n\nexport async function getServerConfiguration(apiAddress: string) {\n  const cleanApiAddress = apiAddress.endsWith('/')\n    ? apiAddress.slice(0, -1)\n    : apiAddress;\n\n  const configUrl = `${cleanApiAddress}/${configEndpoint}`;\n\n  try {\n    const { data } = await axios.get<NetworkType>(configUrl);\n    if (data != null) {\n      return data;\n    }\n  } catch (err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n","import { fallbackNetworkConfigurations } from 'constants/network';\nimport { EnvironmentsEnum } from 'types';\nimport { getServerConfiguration } from './getServerConfiguration';\n\nexport async function getServerConfigurationForEnvironment(\n  environment: EnvironmentsEnum\n) {\n  const fallbackConfig = fallbackNetworkConfigurations[environment];\n  const config = await getServerConfiguration(fallbackConfig.apiAddress);\n\n  return config !== null ? config : fallbackConfig;\n}\n","import axios from 'axios';\nimport { networkConfigSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\n\nexport type ScamInfoType = {\n  scamInfo?: {\n    type: string;\n    info: string;\n  };\n  code: string;\n};\n\nexport async function getScamAddressData(addressToVerify: string) {\n  const {\n    network: { apiAddress, apiTimeout }\n  } = networkConfigSelector(store.getState());\n  const { data } = await axios.get<ScamInfoType>(\n    `/accounts/${addressToVerify}`,\n    {\n      baseURL: apiAddress,\n      timeout: Number(apiTimeout)\n    }\n  );\n\n  return data;\n}\n\nexport default getScamAddressData;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { networkConfigSelector } from 'redux/selectors';\n\nexport const useGetNetworkConfig = () => {\n  return useSelector(networkConfigSelector);\n};\n\nexport default useGetNetworkConfig;\n","import { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { notificationModalSelector } from 'redux/selectors';\nimport { clearNotificationModal } from 'redux/slices';\n\nexport function useGetNotification() {\n  const notification = useSelector(notificationModalSelector);\n  const dispatch = useDispatch();\n  const clearNotification = () => dispatch(clearNotificationModal());\n  return { notification, clearNotification };\n}\n","import { useSelector } from 'redux/DappProviderContext';\nimport { transactionDisplayInfoSelector } from 'redux/selectors';\nimport { RootState } from 'redux/store';\n\nexport function useGetTransactionDisplayInfo(toastId: string | null) {\n  return useSelector((state: RootState) =>\n    transactionDisplayInfoSelector(state, toastId)\n  );\n}\n","import React from 'react';\nimport { WalletProvider } from '@elrondnetwork/erdjs';\nimport qs from 'qs';\nimport { dappInitRoute, walletSignSession } from 'constants/index';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { networkSelector } from 'redux/selectors';\nimport { moveTransactionsToSignedState } from 'redux/slices';\nimport { TransactionBatchStatusesEnum } from 'types/enums';\nimport { parseTransactionAfterSigning } from 'utils';\n\nexport function useParseSignedTransactions() {\n  const { search } = window.location;\n  const network = useSelector(networkSelector);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (search != null) {\n      const searchData = qs.parse(search.replace('?', ''));\n\n      if (searchData && walletSignSession in searchData) {\n        const signSessionId: number = (searchData as any)[walletSignSession];\n        const signedTransactions = new WalletProvider(\n          `${network.walletAddress}${dappInitRoute}`\n        ).getTransactionsFromWalletUrl();\n        if (signedTransactions.length > 0) {\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId: signSessionId.toString(),\n              status: TransactionBatchStatusesEnum.signed,\n              transactions: signedTransactions.map((tx) =>\n                parseTransactionAfterSigning(tx)\n              )\n            })\n          );\n          history.pushState({}, document.title, '?');\n        }\n      }\n    }\n  }, [search]);\n}\n\nexport default useParseSignedTransactions;\n","import { useEffect, useRef, useState } from 'react';\nimport { ExtensionProvider, Nonce, Transaction } from '@elrondnetwork/erdjs';\n\nimport { errorsMessages, walletSignSession } from 'constants/index';\nimport { useParseSignedTransactions } from 'hooks/transactions/useParseSignedTransactions';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAccountFromProxyProvider } from 'providers/proxyProvider';\nimport { getProviderType } from 'providers/utils';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { addressSelector, transactionsToSignSelector } from 'redux/selectors';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  moveTransactionsToSignedState\n} from 'redux/slices';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  builtCallbackUrl,\n  getLatestNonce,\n  parseTransactionAfterSigning\n} from 'utils';\n\nexport const useSignTransactions = () => {\n  const dispatch = useDispatch();\n  const savedCallback = useRef('/');\n  const address = useSelector(addressSelector);\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const [error, setError] = useState<string | null>(null);\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const hasTransactions = Boolean(transactionsToSign?.transactions);\n\n  useParseSignedTransactions();\n\n  const onAbort = (sessionId?: string) => {\n    setError(null);\n    clearSignInfo(sessionId);\n  };\n\n  function clearSignInfo(sessionId?: string) {\n    const isExtensionProvider = provider instanceof ExtensionProvider;\n\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    if (!isExtensionProvider) {\n      return;\n    }\n\n    ExtensionProvider.getInstance()?.cancelAction?.();\n  }\n\n  const onCancel = (errorMessage: string, sessionId?: string) => {\n    const isTxCancelled = errorMessage !== errorsMessages.TRANSACTION_CANCELLED;\n\n    clearSignInfo(sessionId);\n\n    /*\n     * this is triggered by abort action,\n     * so no need to show error again\n     */\n    if (!isTxCancelled) {\n      return;\n    }\n\n    setError(errorMessage);\n  };\n\n  const signWithWallet = (\n    transactions: Array<Transaction>,\n    sessionId: string,\n    callbackRoute = ''\n  ) => {\n    const urlParams = { [walletSignSession]: sessionId };\n    const callbackUrl = `${window.location.origin}${callbackRoute}`;\n    const buildedCallbackUrl = builtCallbackUrl({ callbackUrl, urlParams });\n\n    provider.signTransactions(transactions, {\n      callbackUrl: encodeURIComponent(buildedCallbackUrl)\n    });\n  };\n\n  const signTransactionsWithProvider = async () => {\n    const {\n      sessionId,\n      transactions,\n      callbackRoute,\n      customTransactionInformation\n    } = transactionsToSign!;\n    const { redirectAfterSign } = customTransactionInformation;\n    const redirectRoute = callbackRoute || window.location.pathname;\n    const isCurrentRoute = window.location.pathname.includes(redirectRoute);\n    const shouldRedirectAfterSign = redirectAfterSign && !isCurrentRoute;\n\n    try {\n      const isProviderInitialized = await provider.init();\n\n      if (!isProviderInitialized) {\n        return;\n      }\n    } catch (error) {\n      const errorMessage =\n        ((error as unknown) as Error)?.message ||\n        (error as string) ||\n        errorsMessages.PROVIDER_NOT_INTIALIZED;\n      console.error(errorsMessages.PROVIDER_NOT_INTIALIZED, errorMessage);\n      onCancel(errorMessage);\n      return;\n    }\n\n    try {\n      const signedTransactions = await provider.signTransactions(transactions);\n      const hasSameTransactions =\n        Object.keys(signedTransactions).length === transactions.length;\n      const hasAllTransactionsSigned =\n        signedTransactions && hasSameTransactions;\n      const shouldMoveTransactionsToSignedState =\n        signedTransactions && hasAllTransactionsSigned;\n\n      if (!shouldMoveTransactionsToSignedState) {\n        return;\n      }\n\n      const signedTransactionsArray = Object.values(\n        signedTransactions\n      ).map((tx: any) => parseTransactionAfterSigning(tx));\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          transactions: signedTransactionsArray,\n          status: TransactionBatchStatusesEnum.signed\n        })\n      );\n\n      if (shouldRedirectAfterSign) {\n        window.location.href = redirectRoute;\n      }\n    } catch (err) {\n      const errorMessage =\n        ((error as unknown) as Error)?.message ||\n        (error as string) ||\n        errorsMessages.ERROR_SIGNING_TX;\n      console.error(errorsMessages.ERROR_SIGNING_TX, errorMessage);\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n      onCancel(errorMessage, sessionId);\n    }\n  };\n\n  const signTransactions = async () => {\n    if (!transactionsToSign) {\n      return;\n    }\n\n    const { sessionId, transactions, callbackRoute } = transactionsToSign;\n\n    if (!provider) {\n      console.error(errorsMessages.MISSING_PROVIDER_MESSAGE);\n      return;\n    }\n\n    /*\n     * if the transaction is cancelled\n     * the callback will go to undefined,\n     * we save the most recent one for a valid transaction\n     */\n    savedCallback.current = callbackRoute || window.location.pathname;\n\n    const setTransactionNonces = (\n      latestNonce: number,\n      transactions: Array<Transaction>\n    ): Array<Transaction> => {\n      return transactions.map((tx: Transaction, index: number) => {\n        tx.setNonce(new Nonce(latestNonce + index));\n\n        return tx;\n      });\n    };\n\n    try {\n      const proxyAccount = await getAccountFromProxyProvider(address);\n      if (proxyAccount == null) {\n        return;\n      }\n      const isSigningWithWebWallet = providerType === LoginMethodsEnum.wallet;\n\n      const isSigningWithProvider = ![\n        LoginMethodsEnum.wallet,\n        LoginMethodsEnum.ledger\n      ].includes(providerType);\n\n      const latestNonce = getLatestNonce(proxyAccount);\n      const mappedTransactions = setTransactionNonces(\n        latestNonce,\n        transactions\n      );\n\n      if (isSigningWithWebWallet) {\n        signWithWallet(mappedTransactions, sessionId, callbackRoute);\n      }\n      if (isSigningWithProvider) {\n        signTransactionsWithProvider();\n      }\n    } catch (err) {\n      const defaultErrorMessage = ((error as unknown) as Error)?.message;\n      const errorMessage = defaultErrorMessage || errorsMessages.ERROR_SIGNING;\n      onCancel(errorMessage, sessionId);\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n\n      console.error(errorMessage, err);\n    }\n  };\n\n  useEffect(() => {\n    signTransactions();\n  }, [transactionsToSign]);\n\n  return {\n    error,\n    onAbort,\n    hasTransactions,\n    callbackRoute: savedCallback.current,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions\n  };\n};\n\nexport default useSignTransactions;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { signedTransactionsSelector } from 'redux/selectors';\n\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSignedTransactionsReturnType {\n  signedTransactions: SignedTransactionsType;\n  signedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSignedTransactions: boolean;\n}\n\nexport function useGetSignedTransactions(): useGetSignedTransactionsReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const signedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(signedTransactions);\n  const hasSignedTransactions = signedTransactionsArray?.length > 0;\n  return {\n    signedTransactions,\n    signedTransactionsArray,\n    hasSignedTransactions\n  };\n}\n","let swr: any = {};\ntry {\n  swr = require('swr').default;\n} catch (err) {}\n\nexport default swr;\n","import axios from 'axios';\nimport useGetNetworkConfig from 'hooks/useGetNetworkConfig';\n\nimport useSwr from 'optionalPackages/swr';\nimport { getIdentifierType } from 'utils';\n\ninterface TokenOptionType {\n  tokenLabel: string;\n  tokenDenomination: number;\n  tokenAvatar: string;\n  error?: string;\n}\n\ninterface TokenInfoResponse {\n  identifier: string;\n  name: string;\n  ticker: string;\n  decimals: number;\n  assets: {\n    description: string;\n    status: string;\n    svgUrl: string;\n  };\n}\n\nconst fetcher = (url: string) =>\n  axios.get(url).then((response) => response.data);\n\nexport function useGetTokenDetails({\n  tokenId\n}: {\n  tokenId: string;\n}): TokenOptionType {\n  const { network } = useGetNetworkConfig();\n\n  const { isEsdt } = getIdentifierType(tokenId);\n  const tokenEndpoint = isEsdt ? 'tokens' : 'nfts';\n\n  const {\n    data: selectedToken,\n    error\n  }: { data?: TokenInfoResponse; error?: string } = useSwr(\n    Boolean(tokenId)\n      ? `${network.apiAddress}/${tokenEndpoint}/${tokenId}`\n      : null,\n    fetcher\n  );\n\n  if (!tokenId) {\n    return {\n      tokenDenomination: Number(network.egldDenomination),\n      tokenLabel: '',\n      tokenAvatar: ''\n    };\n  }\n\n  const tokenDenomination = selectedToken\n    ? selectedToken?.decimals\n    : Number(network.egldDenomination);\n  const tokenLabel = selectedToken ? selectedToken?.name : '';\n  const tokenAvatar = selectedToken ? `${selectedToken?.assets?.svgUrl}` : '';\n\n  return { tokenDenomination, tokenLabel, tokenAvatar, error };\n}\n\nexport default useGetTokenDetails;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { accountInfoSelector } from 'redux/selectors';\n\nexport const useGetAccountInfo = () => {\n  return useSelector(accountInfoSelector);\n};\n\nexport default useGetAccountInfo;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { isLoggedInSelector, loginInfoSelector } from 'redux/selectors';\n\nexport const useGetLoginInfo = () => {\n  const loginInfo = useSelector(loginInfoSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  return { ...loginInfo, isLoggedIn };\n};\n\nexport default useGetLoginInfo;\n","import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport const useGetAccountProvider = () => {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  return { provider, providerType };\n};\n\nexport default useGetAccountProvider;\n","import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { getScamAddressData } from 'apiCalls';\nimport { useGetAccountInfo } from 'hooks/account';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { egldLabelSelector, transactionsToSignSelector } from 'redux/selectors';\nimport {\n  clearAllTransactionsToSign,\n  moveTransactionsToSignedState,\n  setSignTransactionsError\n} from 'redux/slices/transactionsSlice';\nimport { useParseMultiEsdtTransferData } from 'services/transactions/hooks/useParseMultiEsdtTransferData';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport { getIsProviderEqualTo, isTokenTransfer } from 'utils';\nimport { parseTransactionAfterSigning } from 'utils';\nimport { getLedgerErrorCodes } from 'utils/internal';\n\nexport interface UseSignTransactionsWithDevicePropsType {\n  onCancel: () => void;\n  verifyReceiverScam?: boolean;\n}\n\ninterface VerifiedAddressesType {\n  [address: string]: { type: string; info: string };\n}\nlet verifiedAddresses: VerifiedAddressesType = {};\n\ntype DeviceSignedTransactions = Record<number, Transaction>;\n\nexport interface UseSignTransactionsWithDeviceReturnType {\n  allTransactions: MultiSignTxType[];\n  onSignTransaction: () => void;\n  onNext: () => void;\n  onPrev: () => void;\n  onAbort: () => void;\n  waitingForDevice: boolean;\n  isLastTransaction: boolean;\n  currentStep: number;\n  callbackRoute?: string;\n  signedTransactions?: DeviceSignedTransactions;\n  currentTransaction: ActiveLedgerTransactionType | null;\n}\n\nexport function useSignTransactionsWithDevice({\n  onCancel,\n  verifyReceiverScam = true\n}: UseSignTransactionsWithDevicePropsType): UseSignTransactionsWithDeviceReturnType {\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const {\n    account: { address }\n  } = useGetAccountInfo();\n\n  const {\n    sessionId,\n    transactions,\n    callbackRoute,\n    customTransactionInformation\n  } = transactionsToSign || {};\n  const [currentStep, setCurrentStep] = useState(0);\n  const [signedTransactions, setSignedTransactions] = useState<\n    DeviceSignedTransactions\n  >();\n  const {\n    getTxInfoByDataField,\n    allTransactions\n  } = useParseMultiEsdtTransferData({ transactions });\n  const [\n    currentTransaction,\n    setCurrentTransaction\n  ] = useState<ActiveLedgerTransactionType | null>(null);\n  const provider = getAccountProvider();\n  const egldLabel = useSelector(egldLabelSelector);\n  const [waitingForDevice, setWaitingForDevice] = useState(false);\n  const dispatch = useDispatch();\n  const isLedger = getIsProviderEqualTo(LoginMethodsEnum.ledger);\n\n  const isLastTransaction = currentStep === allTransactions.length - 1;\n\n  useEffect(() => {\n    extractTransactionsInfo();\n  }, [currentStep, allTransactions]);\n\n  async function extractTransactionsInfo() {\n    const tx = allTransactions[currentStep];\n    if (tx == null) {\n      return;\n    }\n    const { transaction, multiTxData } = tx;\n    const dataField = transaction.getData().toString();\n    const transactionTokenInfo = getTxInfoByDataField(\n      transaction.getData().toString(),\n      multiTxData\n    );\n    const { tokenId } = transactionTokenInfo;\n    const receiver = transaction.getReceiver().toString();\n    const notSender = address !== receiver;\n    const verified = receiver in verifiedAddresses;\n\n    if (notSender && !verified && verifyReceiverScam) {\n      const data = await getScamAddressData(receiver);\n      verifiedAddresses = {\n        ...verifiedAddresses,\n        ...(data.scamInfo ? { [receiver]: data.scamInfo } : {})\n      };\n    }\n\n    const isTokenTransaction = Boolean(\n      tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n    );\n\n    setCurrentTransaction({\n      transaction,\n      receiverScamInfo: verifiedAddresses[receiver]?.info || null,\n      transactionTokenInfo,\n      isTokenTransaction,\n      dataField\n    });\n  }\n\n  function reset() {\n    setCurrentStep(0);\n    setSignedTransactions(undefined);\n    setWaitingForDevice(false);\n  }\n\n  async function sign() {\n    try {\n      if (currentTransaction == null || sessionId == null) {\n        return;\n      }\n\n      setWaitingForDevice(isLedger);\n\n      const signedTx = await provider.signTransaction(\n        currentTransaction.transaction\n      );\n      const newSignedTx = { [currentStep]: signedTx };\n      const newSignedTransactions: any = signedTransactions\n        ? { ...signedTransactions, ...newSignedTx }\n        : newSignedTx;\n      setSignedTransactions(newSignedTransactions);\n      if (!isLastTransaction) {\n        setCurrentStep((exising) => exising + 1);\n        setWaitingForDevice(false);\n      } else if (newSignedTransactions) {\n        dispatch(\n          moveTransactionsToSignedState({\n            sessionId,\n            status: TransactionBatchStatusesEnum.signed,\n            transactions: Object.values(newSignedTransactions).map((tx) =>\n              parseTransactionAfterSigning(tx as Transaction, isLedger)\n            )\n          })\n        );\n\n        reset();\n        if (\n          callbackRoute != null &&\n          customTransactionInformation?.redirectAfterSign &&\n          !window.location.pathname.includes(callbackRoute)\n        ) {\n          window.location.href = callbackRoute;\n        }\n      }\n    } catch (err) {\n      console.error(err, 'sign error');\n      const { message } = err as any;\n      const errorMessage = isLedger\n        ? getLedgerErrorCodes(err).errorMessage\n        : null;\n\n      reset();\n      dispatch(setSignTransactionsError(errorMessage ?? message));\n    }\n  }\n\n  function signTx() {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n      const signature = currentTransaction.transaction.getSignature();\n      if (signature) {\n        if (!isLastTransaction) {\n          setCurrentStep((exising) => exising + 1);\n        }\n      } else {\n        // currently code doesn't reach here because getSignature throws error if none is found\n        sign();\n      }\n    } catch {\n      // the only way to check if tx has signature is with try catch\n      sign();\n    }\n  }\n\n  const isFirst = currentStep === 0;\n\n  function onAbort() {\n    if (isFirst) {\n      dispatch(clearAllTransactionsToSign());\n      onCancel();\n      if (\n        callbackRoute != null &&\n        customTransactionInformation?.redirectAfterSign\n      ) {\n        window.location.href = callbackRoute;\n      }\n    } else {\n      setCurrentStep((existing) => existing - 1);\n    }\n  }\n\n  const continueWithoutSigning =\n    currentTransaction?.transactionTokenInfo?.type &&\n    currentTransaction?.transactionTokenInfo?.multiTxData &&\n    !currentTransaction?.dataField.endsWith(\n      currentTransaction?.transactionTokenInfo?.multiTxData\n    );\n\n  function onSignTransaction() {\n    if (continueWithoutSigning) {\n      setCurrentStep((exising) => exising + 1);\n    } else {\n      signTx();\n    }\n  }\n\n  function onNext() {\n    setCurrentStep((current) => {\n      const nextStep = current + 1;\n      if (nextStep > allTransactions?.length) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  function onPrev() {\n    setCurrentStep((current) => {\n      const nextStep = current - 1;\n      if (nextStep < 0) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  return {\n    allTransactions,\n    onSignTransaction,\n    onNext,\n    onPrev,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    callbackRoute,\n    currentStep,\n    signedTransactions,\n    currentTransaction\n  };\n}\n\nexport default useSignTransactionsWithDevice;\n","import {\n  useSignTransactionsWithDevice,\n  UseSignTransactionsWithDevicePropsType,\n  UseSignTransactionsWithDeviceReturnType\n} from './useSignTransactionsWithDevice';\n\nexport function useSignTransactionsWithLedger(\n  props: UseSignTransactionsWithDevicePropsType\n): UseSignTransactionsWithDeviceReturnType {\n  return useSignTransactionsWithDevice(props);\n}\n\nexport default useSignTransactionsWithLedger;\n","import { useSelector } from 'redux/DappProviderContext';\nimport { signTransactionsErrorSelector } from 'redux/selectors';\n\nexport const useGetSignTransactionsError = () => {\n  return useSelector(signTransactionsErrorSelector);\n};\n\nexport default useGetSignTransactionsError;\n","import { SignedTransactionType } from 'types';\nimport { getIsTransactionPending } from 'utils';\n\ninterface PendingTxType {\n  hash: string;\n  previousStatus: string;\n}\n\nexport function getPendingTransactions(\n  transactions: SignedTransactionType[],\n  timedOutHashes: string[]\n): PendingTxType[] {\n  const pendingTransactions = transactions.reduce(\n    (acc: PendingTxType[], { status, hash }) => {\n      if (\n        hash != null &&\n        !timedOutHashes.includes(hash) &&\n        getIsTransactionPending(status)\n      ) {\n        acc.push({\n          hash,\n          previousStatus: status\n        });\n      }\n      return acc;\n    },\n    []\n  );\n  return pendingTransactions;\n}\n\nexport default getPendingTransactions;\n","import {\n  updateSignedTransactions,\n  updateSignedTransactionStatus\n} from 'redux/slices';\nimport { store } from 'redux/store';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport { SmartContractResult } from 'types/transactions';\n\nexport function manageFailedTransactions({\n  results,\n  hash,\n  sessionId\n}: {\n  results: SmartContractResult[];\n  hash: string;\n  sessionId: string;\n}) {\n  const resultWithError = results.find(\n    (scResult) => scResult?.returnMessage !== ''\n  );\n\n  store.dispatch(\n    updateSignedTransactionStatus({\n      transactionHash: hash,\n      sessionId,\n      status: TransactionServerStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage\n    })\n  );\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage\n    })\n  );\n}\n\nexport default manageFailedTransactions;\n","import { updateSignedTransactions } from 'redux/slices';\nimport { store } from 'redux/store';\nimport { TransactionBatchStatusesEnum } from 'types';\n\nexport function manageTimedOutTransactions(sessionId: string) {\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.timedOut\n    })\n  );\n}\n\nexport default manageTimedOutTransactions;\n","import {\n  getTransactionsByHashes as defaultGetTxByHash,\n  GetTransactionsByHashesReturnType\n} from 'apiCalls/transactions';\nimport { GetTransactionsByHashesType } from 'contexts/types';\nimport { updateSignedTransactionStatus } from 'redux/slices';\nimport { store } from 'redux/store';\nimport { TransactionServerStatusesEnum } from 'types/enums';\nimport {\n  CustomTransactionInformation,\n  SignedTransactionsBodyType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful\n} from 'utils';\nimport { refreshAccount } from 'utils/account';\nimport getPendingTransactions from './getPendingTransactions';\nimport manageFailedTransactions from './manageFailedTransactions';\nimport manageTimedOutTransactions from './manageTimedOutTransactions';\n\ninterface TransactionStatusTrackerPropsType {\n  sessionId: string;\n  transactionBatch: SignedTransactionsBodyType;\n  getTransactionsByHash?: GetTransactionsByHashesType;\n  shouldRefreshBalance?: boolean;\n}\n\ninterface RetriesType {\n  [hash: string]: number;\n}\n\nconst retries: RetriesType = {};\nconst timeouts: string[] = [];\n\ninterface ManageTransactionType {\n  serverTransaction: GetTransactionsByHashesReturnType[0];\n  sessionId: string;\n  customTransactionInformation?: CustomTransactionInformation;\n  shouldRefreshBalance?: boolean;\n}\n\nfunction manageTransaction({\n  serverTransaction,\n  sessionId,\n  customTransactionInformation,\n  shouldRefreshBalance\n}: ManageTransactionType) {\n  const {\n    hash,\n    status,\n    results,\n    invalidTransaction,\n    hasStatusChanged\n  } = serverTransaction;\n  try {\n    if (timeouts.includes(hash)) {\n      return;\n    }\n\n    const retriesForThisHash = retries[hash];\n    if (retriesForThisHash > 30) {\n      // consider transaction as stuck after 1 minute\n      manageTimedOutTransactions(sessionId);\n      return;\n    }\n\n    if (invalidTransaction || getIsTransactionPending(status)) {\n      retries[hash] = retries[hash] ? retries[hash] + 1 : 1;\n      return;\n    }\n    if (hasStatusChanged) {\n      if (\n        getIsTransactionSuccessful(status) &&\n        customTransactionInformation?.completedTransactionsDelay != null\n      ) {\n        //if the transaction is successful and the success status should be updated with a delay\n        //it will enter a timeout and then change the status\n        timeouts.push(hash);\n        setTimeout(\n          () =>\n            store.dispatch(\n              updateSignedTransactionStatus({\n                sessionId,\n                status: TransactionServerStatusesEnum.completed,\n                transactionHash: hash\n              })\n            ),\n          customTransactionInformation?.completedTransactionsDelay\n        );\n      } else {\n        //otherwise, it will just trigger the change of status\n        store.dispatch(\n          updateSignedTransactionStatus({\n            sessionId,\n            status,\n            transactionHash: hash\n          })\n        );\n      }\n    }\n\n    // if set to true will trigger a balance refresh after each iteration\n    if (!shouldRefreshBalance) {\n      refreshAccount();\n    }\n\n    if (getIsTransactionFailed(status)) {\n      manageFailedTransactions({ sessionId, hash, results });\n    }\n  } catch (error) {\n    console.error(error);\n    manageTimedOutTransactions(sessionId);\n  }\n}\n\nexport async function checkBatch({\n  sessionId,\n  transactionBatch: { transactions, customTransactionInformation },\n  getTransactionsByHash = defaultGetTxByHash,\n  shouldRefreshBalance\n}: TransactionStatusTrackerPropsType) {\n  try {\n    if (transactions == null) {\n      return;\n    }\n\n    const pendingTransactions = getPendingTransactions(transactions, timeouts);\n\n    const serverTransactions = await getTransactionsByHash(pendingTransactions);\n\n    for (const serverTransaction of serverTransactions) {\n      manageTransaction({\n        serverTransaction,\n        sessionId,\n        customTransactionInformation,\n        shouldRefreshBalance\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default checkBatch;\n","import { GetTransactionsByHashesType } from 'contexts/types';\nimport { useGetPendingTransactions } from 'services/transactions/hooks';\nimport { getIsTransactionPending, refreshAccount } from 'utils';\nimport checkBatch from './checkBatch';\n\nexport function useCheckTransactionStatus() {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  async function checkTransactionStatus(props: {\n    getTransactionsByHash?: GetTransactionsByHashesType;\n    shouldRefreshBalance?: boolean;\n  }) {\n    const pendingBatches = pendingTransactionsArray.filter(\n      ([sessionId, transactionBatch]) => {\n        const isPending =\n          sessionId != null && getIsTransactionPending(transactionBatch.status);\n        return isPending;\n      }\n    );\n    if (pendingBatches.length > 0) {\n      for (const [sessionId, transactionBatch] of pendingBatches) {\n        await checkBatch({\n          sessionId,\n          transactionBatch,\n          ...props\n        });\n      }\n    }\n    if (props.shouldRefreshBalance) {\n      refreshAccount();\n    }\n  }\n\n  return checkTransactionStatus;\n}\n\nexport default useCheckTransactionStatus;\n","import { useIdleTimer as useReactIdleTimer } from 'react-idle-timer';\nimport { getIsLoggedIn, logout as dappLogout } from 'utils';\n\nconst getTimeout = (minutes: number) => 1000 * 60 * minutes;\nconst debounce = 500;\n\ninterface IdleTimerType {\n  minutes?: number;\n  onLogout?: (props?: any) => void;\n}\n\nexport const useIdleTimer = ({ minutes = 10, onLogout }: IdleTimerType) => {\n  const isLoggedIn = getIsLoggedIn();\n  const logout = onLogout || dappLogout;\n  const timeout = getTimeout(minutes);\n\n  const onIdle = () => {\n    if (isLoggedIn) {\n      logout();\n    }\n  };\n\n  useReactIdleTimer({ timeout, onIdle, debounce });\n};\n\nexport default useIdleTimer;\n","import axios from 'axios';\nimport {\n  addressSelector,\n  apiNetworkSelector,\n  shardSelector\n} from 'redux/selectors';\n\nimport { setAccountShard } from 'redux/slices';\nimport { store } from 'redux/store';\n\nexport default async function getAccountShard() {\n  const appState = store.getState();\n  const apiAddress = apiNetworkSelector(appState);\n  const address = addressSelector(appState);\n  const shard = shardSelector(appState);\n\n  try {\n    if (shard == null && address) {\n      const { data: account } = await axios.get(\n        `${apiAddress}/accounts/${address}`\n      );\n      store.dispatch(setAccountShard(account.shard));\n      return account.shard;\n    } else {\n      return shard;\n    }\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { getServerConfiguration } from 'apiCalls';\nimport { fallbackNetworkConfigurations } from 'constants/network';\nimport { useGetAccountInfo } from 'hooks';\nimport { initializeProxyProvider } from 'providers/proxyProvider';\nimport { useDispatch } from 'redux/DappProviderContext';\nimport { initializeNetworkConfig } from 'redux/slices/networkConfigSlice';\nimport { CustomNetworkType, EnvironmentsEnum, NetworkType } from 'types';\nimport { logout } from 'utils';\nimport getAccountShard from 'utils/account/getAccountShard';\n\ninterface AppInitializerPropsType {\n  customNetworkConfig?: CustomNetworkType;\n  children: any;\n  environment: EnvironmentsEnum;\n}\n\nexport function AppInitializer({\n  customNetworkConfig = {},\n  children,\n  environment\n}: AppInitializerPropsType) {\n  const [initialized, setInitialized] = useState(false);\n  const account = useGetAccountInfo();\n  const { address, publicKey } = account;\n  const dispatch = useDispatch();\n\n  function initializeProviders(networkConfig: NetworkType) {\n    initializeProxyProvider(networkConfig);\n  }\n\n  async function initializeNetwork() {\n    const fetchConfigFromServer = !customNetworkConfig?.skipFetchFromServer;\n    const customNetworkApiAddress = customNetworkConfig?.apiAddress;\n    const fallbackConfig = fallbackNetworkConfigurations[environment] || {};\n\n    const localConfig = {\n      ...fallbackConfig,\n      ...customNetworkConfig\n    };\n\n    if (fetchConfigFromServer) {\n      const fallbackApiAddress = fallbackConfig?.apiAddress;\n\n      const serverConfig = await getServerConfiguration(\n        customNetworkApiAddress || fallbackApiAddress\n      );\n\n      if (serverConfig != null) {\n        const apiConfig = {\n          ...fallbackConfig,\n          ...serverConfig,\n          ...customNetworkConfig\n        };\n        dispatch(initializeNetworkConfig(apiConfig));\n        initializeProviders(apiConfig);\n        return;\n      }\n    }\n\n    dispatch(initializeNetworkConfig(localConfig));\n    initializeProviders(localConfig);\n  }\n\n  async function initializeApp() {\n    await initializeNetwork();\n    setInitialized(true);\n\n    getAccountShard();\n  }\n\n  useEffect(() => {\n    if (!address) {\n      return;\n    }\n\n    getAccountShard();\n  }, [address]);\n\n  useEffect(() => {\n    if (address) {\n      const pubKey = new Address(address).hex();\n      if (pubKey !== publicKey) {\n        logout();\n      }\n    }\n  }, [address, publicKey]);\n\n  useEffect(() => {\n    initializeApp();\n  }, [customNetworkConfig, environment]);\n\n  return initialized ? <>{children}</> : null;\n}\n\nexport default AppInitializer;\n","import React, { useRef } from 'react';\nimport { Address } from '@elrondnetwork/erdjs';\nimport { Signature } from '@elrondnetwork/erdjs/out/signature';\n\nimport { sendSignedTransactions as defaultSendSignedTxs } from 'apiCalls/transactions';\nimport { SendSignedTransactionsAsyncType } from 'contexts/types';\nimport newTransaction from 'models/newTransaction';\nimport { useDispatch, useSelector } from 'redux/DappProviderContext';\nimport { signedTransactionsSelector } from 'redux/selectors';\nimport { accountSelector } from 'redux/selectors';\nimport {\n  setTxSubmittedModal,\n  clearAllTransactionsToSign,\n  updateSignedTransactions\n} from 'redux/slices';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport { setNonce } from 'utils';\n\nexport interface TransactionSenderType {\n  sendSignedTransactionsAsync?: SendSignedTransactionsAsyncType;\n}\n\nexport const TransactionSender = ({\n  sendSignedTransactionsAsync = defaultSendSignedTxs\n}: TransactionSenderType) => {\n  const account = useSelector(accountSelector);\n  const signedTransactions = useSelector(signedTransactionsSelector);\n\n  const sendingRef = useRef(false);\n\n  const dispatch = useDispatch();\n\n  const clearSignInfo = () => {\n    dispatch(clearAllTransactionsToSign());\n    sendingRef.current = false;\n  };\n  async function handleSendTransactions() {\n    const sessionIds = Object.keys(signedTransactions);\n    for (const sessionId of sessionIds) {\n      const skipSending =\n        signedTransactions?.[sessionId]?.customTransactionInformation\n          ?.signWithoutSending;\n\n      if (!sessionId || skipSending) {\n        continue;\n      }\n\n      try {\n        const isSessionIdSigned =\n          signedTransactions[sessionId].status ===\n          TransactionBatchStatusesEnum.signed;\n        const shouldSendCurrentSession =\n          isSessionIdSigned && !sendingRef.current;\n        if (!shouldSendCurrentSession) {\n          continue;\n        }\n        const { transactions } = signedTransactions[sessionId];\n\n        if (!transactions) {\n          continue;\n        }\n        sendingRef.current = true;\n        const transactionsToSend = transactions.map((tx) => {\n          const address = new Address(tx.sender);\n          const transactionObject = newTransaction(tx);\n          const signature = new Signature(tx.signature);\n\n          transactionObject.applySignature(signature, address);\n          return transactionObject;\n        });\n        const responseHashes = await sendSignedTransactionsAsync(\n          transactionsToSend\n        );\n\n        const newStatus = TransactionServerStatusesEnum.pending;\n        const newTransactions = transactions.map((transaction) => {\n          if (responseHashes.includes(transaction.hash)) {\n            return { ...transaction, status: newStatus };\n          }\n\n          return transaction;\n        });\n\n        const submittedModalPayload = {\n          sessionId,\n          submittedMessage: 'submitted'\n        };\n\n        dispatch(setTxSubmittedModal(submittedModalPayload));\n        dispatch(\n          updateSignedTransactions({\n            sessionId,\n            status: TransactionBatchStatusesEnum.sent,\n            transactions: newTransactions\n          })\n        );\n        clearSignInfo();\n        setNonce(account.nonce + transactions.length);\n\n        history.pushState({}, document.title, '?');\n      } catch (error) {\n        console.error('Unable to send transactions', error);\n        dispatch(\n          updateSignedTransactions({\n            sessionId,\n            status: TransactionBatchStatusesEnum.fail,\n            errorMessage: (error as any).message\n          })\n        );\n        clearSignInfo();\n      } finally {\n        sendingRef.current = false;\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    handleSendTransactions();\n  }, [signedTransactions, account]);\n\n  return null;\n};\n\nexport default TransactionSender;\n","import { useEffect, useRef } from 'react';\nimport { getTransactionsByHashes as defaultGetTxByHash } from 'apiCalls/transactions';\nimport { GetTransactionsByHashesType } from 'contexts/types';\nimport { useCheckTransactionStatus } from 'hooks';\nimport { useGetPendingTransactions } from 'services/transactions';\nimport { getIsTransactionPending } from 'utils';\n\nexport interface TransactionsTrackerType {\n  getTransactionsByHash?: GetTransactionsByHashesType;\n}\n\nexport function useTransactionsTracker(props?: TransactionsTrackerType) {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  const getTransactionsByHash =\n    props?.getTransactionsByHash ?? defaultGetTxByHash;\n\n  const checkTransactionStatus = useCheckTransactionStatus();\n  const intervalRef = useRef<any>();\n\n  const pendingBatches = pendingTransactionsArray.filter(\n    ([sessionId, transactionBatch]) => {\n      const isPending =\n        sessionId != null && getIsTransactionPending(transactionBatch.status);\n      return isPending;\n    }\n  );\n\n  useEffect(() => {\n    if (pendingBatches.length > 0) {\n      intervalRef.current = setInterval(() => {\n        checkTransactionStatus({ getTransactionsByHash });\n      }, 2000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [pendingBatches]);\n}\n\nexport default useTransactionsTracker;\n","import useTransactionsTracker, {\n  TransactionsTrackerType\n} from './useTransactionsTracker';\n\nexport function TransactionsTracker({\n  getTransactionsByHash\n}: TransactionsTrackerType) {\n  useTransactionsTracker({ getTransactionsByHash });\n  return null;\n}\n\nexport default TransactionsTracker;\n","import React from 'react';\nimport TransactionSender, {\n  TransactionSenderType\n} from 'components/TransactionSender';\nimport TransactionsTracker from 'components/TransactionsTracker';\nimport { TransactionsTrackerType } from 'components/TransactionsTracker/useTransactionsTracker';\n\nexport interface CustomComponentsType {\n  transactionSender?: {\n    component: typeof TransactionSender;\n    props?: TransactionSenderType;\n  };\n  transactionTracker?: {\n    component: typeof TransactionsTracker;\n    props?: TransactionsTrackerType;\n  };\n}\n\nexport function CustomComponents({\n  customComponents\n}: {\n  customComponents?: CustomComponentsType;\n}) {\n  const transactionSender = customComponents?.transactionSender;\n  const transactionTracker = customComponents?.transactionTracker;\n\n  const TxSender = transactionSender?.component ?? TransactionSender;\n  const TxTracker = transactionTracker?.component ?? TransactionsTracker;\n\n  return (\n    <>\n      <TxSender {...transactionSender?.props} />\n      <TxTracker {...transactionTracker?.props} />\n    </>\n  );\n}\n","import React from 'react';\nimport { IDappProvider } from '@elrondnetwork/erdjs/out';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport ProviderInitializer from 'components/ProviderInitializer';\nimport {\n  GetTransactionsByHashesType,\n  SendSignedTransactionsAsyncType\n} from 'contexts/types';\nimport { setExternalProvider } from 'providers/accountProvider';\nimport { DappCoreContext } from 'redux/DappProviderContext';\nimport { CustomNetworkType, EnvironmentsEnum } from 'types';\nimport AppInitializer from 'wrappers/AppInitializer';\n\nimport { store, persistor } from '../store';\nimport { CustomComponents, CustomComponentsType } from './CustomComponents';\n\nexport interface DappProviderPropsType {\n  children: React.ReactChildren | React.ReactElement;\n  customNetworkConfig?: CustomNetworkType;\n  externalProvider?: IDappProvider;\n  environment: 'testnet' | 'mainnet' | 'devnet' | EnvironmentsEnum;\n  sendSignedTransactionsAsync?: SendSignedTransactionsAsyncType;\n  getTransactionsByHash?: GetTransactionsByHashesType;\n  customComponents?: CustomComponentsType;\n}\n\nexport const DappProvider = ({\n  children,\n  customNetworkConfig = {},\n  externalProvider,\n  environment,\n  customComponents\n}: DappProviderPropsType) => {\n  if (!environment) {\n    //throw if the user tries to initialize the app without a valid environment\n    throw new Error('missing environment flag');\n  }\n\n  if (externalProvider != null) {\n    setExternalProvider(externalProvider);\n  }\n\n  return (\n    <Provider context={DappCoreContext} store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <AppInitializer\n          environment={environment as EnvironmentsEnum}\n          customNetworkConfig={customNetworkConfig}\n        >\n          <ProviderInitializer />\n          <CustomComponents customComponents={customComponents} />\n          {children}\n        </AppInitializer>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React, { useRef } from 'react';\nimport { useSelector } from 'redux/DappProviderContext';\nimport {\n  isAccountLoadingSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'redux/selectors';\n\nimport { RouteType } from 'types';\n\nconst AuthenticatedRoutesWrapper = ({\n  children,\n  routes,\n  unlockRoute,\n  onRedirect\n}: {\n  children: React.ReactNode;\n  routes: RouteType[];\n  unlockRoute: string;\n  onRedirect?: (unlockRoute?: string) => void;\n}) => {\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  const isAccountLoading = useSelector(isAccountLoadingSelector);\n\n  const walletLogin = useSelector(walletLoginSelector);\n  const { pathname } = window.location;\n\n  const authenticatedRoutesRef = useRef(\n    routes.filter((route) => Boolean(route.authenticatedRoute))\n  );\n\n  const isOnAuthenticatedRoute = authenticatedRoutesRef.current.some(\n    ({ path }) => pathname === path\n  );\n\n  const shouldRedirect =\n    isOnAuthenticatedRoute && !isLoggedIn && walletLogin == null;\n\n  if (isAccountLoading || walletLogin) {\n    return null;\n  }\n\n  if (shouldRedirect) {\n    if (onRedirect) {\n      onRedirect(unlockRoute);\n    } else {\n      window.location.href = unlockRoute;\n    }\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\nexport default AuthenticatedRoutesWrapper;\n","import { Address } from '@elrondnetwork/erdjs';\n\nexport class TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n\n  constructor(\n    sender: Address,\n    receiver: Address,\n    functionName: string,\n    inputParameters: string[],\n    outputParameters: string[]\n  ) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.functionName = functionName;\n    this.inputParameters = inputParameters;\n    this.outputParameters = outputParameters;\n  }\n}\n","import React from 'react';\nimport { wrapperClassName } from 'utils';\n\nexport const withClassNameWrapper =\n  (Component: any) =>\n  ({ ...props }) =>\n    (\n      <span className={wrapperClassName}>\n        <Component {...props} />\n      </span>\n    );\n","import React from 'react';\nimport {\n  denomination as configDenomination,\n  decimals as configDecimals\n} from 'constants/index';\nimport { denominate, getEgldLabel, stringIsInteger } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nexport interface DenominateType {\n  value: string;\n  showLastNonZeroDecimal?: boolean;\n  showLabel?: boolean;\n  token?: string;\n  decimals?: number;\n  denomination?: number;\n  egldLabel?: string;\n  'data-testid'?: string;\n}\n\nconst denominateInvalid = (props: DenominateType) => {\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>...</span>\n    </span>\n  );\n};\n\nconst denominateValid = (props: DenominateType, erdLabel: string) => {\n  const { value, showLastNonZeroDecimal = false, showLabel = true } = props;\n  const decimals =\n    props.decimals !== undefined ? props.decimals : configDecimals;\n  const denomination =\n    props.denomination !== undefined ? props.denomination : configDenomination;\n\n  const denominatedValue = denominate({\n    input: value,\n    denomination,\n    decimals,\n    showLastNonZeroDecimal,\n    addCommas: true\n  });\n\n  const valueParts = denominatedValue.split('.');\n  const hasNoDecimals = valueParts.length === 1;\n  const isNotZero = denominatedValue !== '0';\n\n  if (decimals > 0 && hasNoDecimals && isNotZero) {\n    let zeros = '';\n\n    for (let i = 1; i <= decimals; i++) {\n      zeros = zeros + '0';\n    }\n\n    valueParts.push(zeros);\n  }\n\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>{valueParts[0]}</span>\n      {valueParts.length > 1 && (\n        <span className='decimals'>.{valueParts[1]}</span>\n      )}\n      {showLabel && (\n        <span className={`symbol ${props.token ? 'text-muted' : ''}`}>\n          &nbsp;{props.token ? props.token : erdLabel}\n        </span>\n      )}\n    </span>\n  );\n};\n\nconst Denominate = (props: DenominateType) => {\n  const { value } = props;\n\n  return !stringIsInteger(value)\n    ? denominateInvalid(props)\n    : denominateValid(props, props.egldLabel || '');\n};\n\nconst DenominateWrapper = (props: DenominateType) => {\n  const egldLabel = props.egldLabel || getEgldLabel();\n  const denominateProps = { ...props, egldLabel };\n  return <Denominate {...denominateProps} />;\n};\n\nexport default withClassNameWrapper(DenominateWrapper);\n","let fontawesomeFreeSolidIcons: any = {};\ntry {\n  fontawesomeFreeSolidIcons = require('@fortawesome/free-solid-svg-icons');\n} catch (err) {}\n\nexport default fontawesomeFreeSolidIcons;\n","let ReactFontawesome: any = {};\ntry {\n  ReactFontawesome = require('@fortawesome/react-fontawesome');\n} catch (err) {}\n\nexport default ReactFontawesome;\n","import React from 'react';\nimport { useGetNetworkConfig } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nconst ExplorerLink = ({\n  page,\n  text,\n  className\n}: {\n  page: string;\n  text?: any;\n  className?: string;\n}) => {\n  const {\n    network: { explorerAddress }\n  } = useGetNetworkConfig();\n  return (\n    <a\n      href={`${explorerAddress}${page}`}\n      {...{\n        target: '_blank'\n      }}\n      className={`link-style ${className}`}\n    >\n      {text ? (\n        <React.Fragment>{text}</React.Fragment>\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faSearch}\n          className='text-secondary'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default withClassNameWrapper(ExplorerLink);\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useExtensionLogin } from 'services';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { ExtensionLoginButtonPropsType } from './types';\n\nconst ExtensionLoginButton: (\n  props: ExtensionLoginButtonPropsType\n) => JSX.Element = ({\n  token,\n  className = 'extension-login',\n  children,\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Maiar DeFi Wallet',\n  redirectAfterLogin = false,\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useExtensionLogin({\n    callbackRoute,\n    token,\n    redirectAfterLogin\n  });\n\n  const isFirefox = navigator.userAgent.indexOf('Firefox') != -1;\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left',\n    noExtensionButtonWrapper: 'btn btn-unlock d-inline-block',\n    noExtensionButtonContent:\n      'd-flex justify-content-between align-items-center',\n    noExtensionButtonTitle: 'title',\n    noExtensionButtonIcon: ''\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return !window.elrondWallet ? (\n    <a\n      rel='noreferrer'\n      href={\n        isFirefox\n          ? 'https://addons.mozilla.org/en-US/firefox/addon/maiar-defi-wallet/'\n          : 'https://chrome.google.com/webstore/detail/dngmlblcodfobpdpecaadgfbcggfjfnm?authuser=0&hl=en'\n      }\n      target='_blank'\n      className={classes.noExtensionButtonWrapper}\n    >\n      {children || (\n        <div className={classes.noExtensionButtonContent}>\n          <div className={classes.noExtensionButtonTitle}>\n            Maiar DeFi Wallet\n          </div>\n          <ReactFontawesome.FontAwesomeIcon\n            className={classes.noExtensionButtonIcon}\n            icon={icons.faArrowRight}\n          />\n        </div>\n      )}\n    </a>\n  ) : (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default withClassNameWrapper(ExtensionLoginButton);\n","import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { wrapperClassName } from 'utils';\n\nconst ModalContainer = ({\n  children,\n  noSpacer,\n  className,\n  title,\n  onClose\n}: {\n  children: React.ReactNode;\n  noSpacer?: boolean;\n  className?: string;\n  title: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={onClose}\n      className={`modal-container ${\n        className ? className : ''\n      } ${wrapperClassName}`}\n      animation={false}\n      centered\n    >\n      <div className='modal-card card w-100'>\n        <div className='card-title h5 mb-0'>\n          <div className='d-flex justify-content-between align-items-center pt-spacer px-spacer mb-0'>\n            <div className={'px-3'}>{title}</div>\n            <button\n              type='button'\n              className='btn btn-light px-3 py-2'\n              onClick={onClose}\n            >\n              <ReactFontawesome.FontAwesomeIcon\n                size='lg'\n                icon={icons.faTimes}\n              />\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`modal-card-body text-center ${\n            noSpacer ? 'p-0' : 'p-spacer'\n          }`}\n        >\n          {children}\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default ModalContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { PageStateProps } from './types';\n\nexport const PageState = ({\n  icon,\n  title,\n  action,\n  iconClass,\n  dataTestId,\n  description,\n  iconBgClass,\n  iconSize = '5x',\n  className = 'page-state',\n  shouldRenderDefaultCss = true\n}: PageStateProps) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'state m-auto p-4 text-center',\n      iconContainer: classNames('icon-state mx-auto', {\n        [`${iconBgClass}`]: Boolean(iconBgClass)\n      }),\n      iconClass: classNames(iconClass != null && iconClass),\n      title: 'h4 my-4',\n      description: 'mb-3'\n    }\n  );\n\n  return (\n    <div className={generatedClasses.wrapper} data-testid={dataTestId}>\n      {icon && (\n        <span className={generatedClasses.iconContainer}>\n          <ReactFontawesome.FontAwesomeIcon\n            icon={icon}\n            className={generatedClasses.iconClass}\n            size={iconSize}\n          />\n        </span>\n      )}\n      {title && <p className={generatedClasses.title}>{title}</p>}\n      {description && (\n        <div className={generatedClasses.description}>{description}</div>\n      )}\n      {action && <React.Fragment>{action}</React.Fragment>}\n    </div>\n  );\n};\n\nexport default withClassNameWrapper(PageState);\n","import React from 'react';\n\nimport Denominate from 'UI/Denominate';\nimport { getAccountBalance } from 'utils';\n\ninterface AddressRowType {\n  selectedAddress?: string;\n  index: number;\n  address: string;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n}\n\n// TODO: why not use Trim component?\nconst trimHash = (hash: string, keep = 10) => {\n  const start = hash.substring(0, keep);\n  const end = hash.substring(hash.length - keep);\n  return `${start}...${end}`;\n};\n\nconst noBalance = '...';\n\nconst AddressRow = ({\n  address,\n  index,\n  selectedAddress,\n  onSelectAddress\n}: AddressRowType) => {\n  const [balance, setBalance] = React.useState(noBalance);\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    const { checked } = e.target as HTMLInputElement;\n    if (checked) {\n      onSelectAddress({ address, index });\n    }\n  };\n\n  const fetchBalance = async () => {\n    try {\n      const balance = await getAccountBalance(address);\n      setBalance(balance);\n    } catch (err) {\n      console.error('error fetching balance', err, balance);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  return (\n    <tr>\n      <td className='text-left'>\n        <div className='d-flex align-items-start text-left form-check'>\n          <input\n            type='radio'\n            id={`check_${index}`}\n            data-testid={`check_${index}`}\n            onChange={handleChange}\n            role='button'\n            checked={selectedAddress === address}\n            className='form-check-input mr-1'\n          />\n          <label\n            htmlFor={`check_${index}`}\n            role='button'\n            data-testid={`label_${index}`}\n            className='form-check-label text-nowrap trim-size-xl m-0'\n          >\n            <div className='d-flex align-items-center text-nowrap trim'>\n              <span>{trimHash(address)}</span>\n            </div>\n          </label>\n        </div>\n      </td>\n      <td className='text-left'>\n        <Denominate value={balance} />\n      </td>\n      <td className='text-left'>{index}</td>\n    </tr>\n  );\n};\n\nexport default AddressRow;\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\n\nimport AddressRow from './AddressRow';\n\nconst ledgerWaitingText = 'Waiting for device';\n\nconst addressesPerPage = 10;\n\ninterface AddressTablePropsType {\n  loading: boolean;\n  accounts: string[];\n  startIndex: number;\n  selectedAddress?: string;\n  className: string;\n  shouldRenderDefaultCss: boolean;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nconst AddressTable = ({\n  loading,\n  accounts,\n  startIndex,\n  selectedAddress,\n  onGoToPrevPage,\n  onGoToNextPage,\n  onConfirmSelectedAddress,\n  onSelectAddress,\n  shouldRenderDefaultCss = true,\n  className = 'ledger-address-table'\n}: AddressTablePropsType) => {\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'card my-4 text-center border-0',\n    cardBody: 'card-body p-4 mx-lg-4',\n    tableWrapper: 'table-responsive',\n    tableContent: 'table m-0 border-bottom',\n    tableHeader: 'py-2 text-semibold border-bottom',\n    tableHeaderText: 'text-left border-0',\n    buttonsWrapper: 'd-flex justify-content-center pager mt-2',\n    arrowButton: 'btn btn-link mx-2',\n    confirmButton: 'btn btn-primary px-4 mt-4'\n  });\n  switch (true) {\n    case loading:\n      return (\n        <PageState\n          className={className}\n          icon={icons.faCircleNotch}\n          iconClass='fa-spin text-primary'\n          title={ledgerWaitingText}\n        />\n      );\n    default:\n      return (\n        <React.Fragment>\n          <div className='m-auto'>\n            <div className={classes.wrapper}>\n              <div className={classes.cardBody}>\n                <div\n                  className={classes.tableWrapper}\n                  data-testid='ledgerAddresses'\n                >\n                  <table className={classes.tableContent}>\n                    <thead className={classes.tableHeader}>\n                      <tr>\n                        <th className={classes.tableHeaderText}>Address</th>\n                        <th className={classes.tableHeaderText}>Balance</th>\n                        <th className={classes.tableHeaderText}>#</th>\n                      </tr>\n                    </thead>\n                    <tbody data-testid='addressesTable'>\n                      {accounts.map((address, index) => {\n                        const key = index + startIndex * addressesPerPage;\n                        return (\n                          <AddressRow\n                            key={key}\n                            address={address}\n                            index={key}\n                            selectedAddress={selectedAddress}\n                            onSelectAddress={onSelectAddress}\n                          />\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n                <div className={classes.buttonsWrapper}>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToPrevPage}\n                    data-testid='prevBtn'\n                    disabled={startIndex === 0}\n                  >\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronLeft}\n                    />{' '}\n                    Prev\n                  </button>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToNextPage}\n                    data-testid='nextBtn'\n                  >\n                    Next{' '}\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronRight}\n                    />\n                  </button>\n                </div>\n                <button\n                  className={classes.confirmButton}\n                  disabled={selectedAddress === ''}\n                  onClick={onConfirmSelectedAddress}\n                  data-testid='confirmBtn'\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n  }\n};\n\nexport default AddressTable;\n","import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nconst ConfirmAddress = ({\n  token,\n  noBorder\n}: {\n  token?: string;\n  noBorder?: boolean;\n}) => {\n  const { ledgerAccount } = useGetAccountInfo();\n  return (\n    <div className='m-auto'>\n      <div className={`card my-4 text-center ${noBorder ? 'border-0' : ''}`}>\n        <div className='card-body p-4 mx-lg-4'>\n          <h4 className='mb-4'>Confirm Ledger Address</h4>\n          <p>For security, please confirm that your address: </p>\n          <p className='lead border rounded p-2'>\n            {ledgerAccount ? ledgerAccount.address : ''}\n          </p>\n          {token && (\n            <React.Fragment>\n              <p>and Auth Token</p>\n              <p className='lead border rounded p-2'>{`${token}{}`}</p>\n            </React.Fragment>\n          )}\n          <p className='m-0'>\n            {token\n              ? 'are the one shown on your Ledger device screen now.'\n              : 'is the one shown on your Ledger device screen now.'}\n          </p>\n\n          <p>Select Approve on your device to confirm.</p>\n          <p>\n            Or, if it does not match, close this page and{' '}\n            <a\n              href='https://help.elrond.com/en/'\n              {...{\n                target: '_blank'\n              }}\n            >\n              contact support\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmAddress;\n","import React from 'react';\nimport { ReactComponent as LedgerLogo } from '../assets/ledger-nano.svg';\n\nconst LedgerConnect = ({\n  onClick,\n  error,\n  connectPageContent\n}: {\n  onClick: () => void;\n  error: string;\n  connectPageContent?: React.ReactNode;\n}) => {\n  return (\n    <div className='m-auto login-container'>\n      <div className='card my-4 text-center border-0'>\n        <div className='card-body p-4 mx-lg-4'>\n          {connectPageContent ? (\n            <React.Fragment>{connectPageContent}</React.Fragment>\n          ) : (\n            <React.Fragment>\n              <LedgerLogo className='mb-4' />\n              <h4 className='mb-4'>Connect Ledger</h4>\n              <p className='lead mb-4'>\n                Unlock your device &amp; open the Elrond App.\n              </p>\n            </React.Fragment>\n          )}\n\n          <div>\n            {error && (\n              <p className='text-danger d-flex justify-content-center align-items-center'>\n                {error}\n              </p>\n            )}\n            <button\n              className='btn btn-primary px-4'\n              onClick={onClick}\n              data-testid='connectBtn'\n            >\n              Connect Ledger\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LedgerConnect;\n","import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport { useLedgerLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\n\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport AddressTable from './AddressTable';\nimport ConfirmAddress from './ConfirmAddress';\nimport LedgerConnect from './LedgerConnect';\n\nconst ledgerWaitingText = 'Waiting for device';\n\ninterface LedgerLoginContainerPropsType {\n  callbackRoute: string;\n  className?: string;\n  shouldRenderDefaultCss?: boolean;\n  wrapContentInsideModal?: boolean;\n  redirectAfterLogin?: boolean;\n  token?: string;\n  onClose?: () => void;\n}\n\nfunction LedgerLoginContainer({\n  callbackRoute,\n  className = 'login-modal-content',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  onClose,\n  token\n}: LedgerLoginContainerPropsType) {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    { spinner: 'fa-spin text-primary' }\n  );\n  const { ledgerAccount } = useGetAccountInfo();\n  const [\n    onStartLogin,\n    { error, isLoading },\n    {\n      showAddressList,\n      accounts,\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress,\n      startIndex,\n      selectedAddress\n    }\n  ] = useLedgerLogin({ callbackRoute, token, redirectAfterLogin });\n\n  function getContent() {\n    if (isLoading) {\n      return (\n        <PageState\n          icon={icons.faCircleNotch}\n          iconClass={generatedClasses.spinner}\n          title={ledgerWaitingText}\n        />\n      );\n    }\n    if (ledgerAccount != null && !error) {\n      return <ConfirmAddress token={token} />;\n    }\n\n    if (showAddressList && !error) {\n      return (\n        <AddressTable\n          accounts={accounts}\n          loading={isLoading}\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultCss}\n          onGoToNextPage={onGoToNextPage}\n          onGoToPrevPage={onGoToPrevPage}\n          onSelectAddress={onSelectAddress}\n          startIndex={startIndex}\n          selectedAddress={selectedAddress?.address}\n          onConfirmSelectedAddress={onConfirmSelectedAddress}\n        />\n      );\n    }\n\n    return <LedgerConnect onClick={onStartLogin} error={error} />;\n  }\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with ledger'}\n      className={className}\n      onClose={onClose}\n    >\n      {getContent()}\n    </ModalContainer>\n  ) : (\n    getContent()\n  );\n}\n\nexport default withClassNameWrapper(LedgerLoginContainer);\n","import React from 'react';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport LedgerLoginContainer from '../LoginModal';\nimport { LedgerLoginButtonPropsType } from './types';\n\nconst LedgerLoginButton: (props: LedgerLoginButtonPropsType) => JSX.Element = ({\n  token,\n  callbackRoute,\n  children,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Ledger',\n  buttonClassName,\n  className = 'ledger-login',\n  redirectAfterLogin = false,\n  wrapContentInsideModal = true,\n  shouldRenderDefaultCss = true,\n  shouldRenderDefaultModalCss = true,\n  hideButtonWhenModalOpens = false\n}) => {\n  const [showLoginModal, setShowLoginModal] = React.useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  function handleOpenModal() {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  }\n\n  function handleCloseModal() {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  }\n  \n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n\n  return (\n    <span className={wrapperClassName}>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <LedgerLoginContainer\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultModalCss}\n          callbackRoute={callbackRoute}\n          token={token}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(LedgerLoginButton);\n","import React from 'react';\n\nimport { useGetNotification } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { NotificationTypesEnum } from 'types';\n\nimport { wrapperClassName } from 'utils';\nimport PageState from '../PageState';\n\nconst typedIcons: any = icons;\n\nconst notificationTypesToIcons = {\n  [NotificationTypesEnum.warning]: typedIcons.faExclamationTriangle\n};\nconst defaultIcon = typedIcons.faExclamationTriangle;\n\nexport function NotificationModal() {\n  const { notification, clearNotification } = useGetNotification();\n\n  const showModal = Boolean(notification);\n  const onDone = () => {\n    clearNotification();\n  };\n\n  const type = notification?.type as NotificationTypesEnum.warning;\n\n  const icon = notification\n    ? notificationTypesToIcons[type] || defaultIcon\n    : null;\n\n  return notification ? (\n    <ReactBootstrap.Modal\n      show={showModal}\n      backdrop={true}\n      onHide={notification}\n      className={`modal-container ${wrapperClassName}`}\n      animation={false}\n      centered\n    >\n      <div className='card w-100 notification-modal'>\n        <PageState\n          icon={icon}\n          iconClass={notification.iconClassName}\n          iconBgClass='p-4 rounded-bg-circle'\n          iconSize='3x'\n          title={notification.title}\n          description={notification.description}\n          action={\n            <button className='btn btn-primary' onClick={onDone}>\n              Done\n            </button>\n          }\n        />\n      </div>\n    </ReactBootstrap.Modal>\n  ) : null;\n}\n\nexport default NotificationModal;\n","import React from 'react';\n\nconst Dot = ({\n  color,\n  'data-testid': dataTestId\n}: {\n  color: string;\n  'data-testid'?: string;\n}) => {\n  return <span className={`dot ${color}`} data-testid={dataTestId} />;\n};\nexport default Dot;\n","import React from 'react';\nimport Dot from './Dot';\n\ninterface ProgressStepsType {\n  totalSteps: number;\n  currentStep: number;\n  className?: string;\n}\n\nconst ProgressSteps = ({\n  totalSteps,\n  currentStep,\n  className\n}: ProgressStepsType) => {\n  const dots = [];\n\n  for (let i = 1; i <= totalSteps; i += 1) {\n    const isCurrentStep = currentStep === i;\n    const color =\n      isCurrentStep || i < currentStep ? 'bg-primary' : 'bg-secondary';\n\n    dots.push(\n      <Dot\n        data-testid={`step${i}${isCurrentStep ? 'active' : ''}`}\n        key={i}\n        color={color}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={`progress-steps d-flex justify-content-center ${className}`}\n    >\n      <div className='steps d-flex justify-content-center align-items-center position-relative'>\n        <hr className='position-absolute w-100 m-0' />\n        {dots}\n      </div>\n    </div>\n  );\n};\nexport default ProgressSteps;\n","import React from 'react';\nimport classNames from 'optionalPackages/classnames';\nimport freeSolidIcons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\n\nconst SignWithExtensionModal = ({\n  handleClose,\n  error,\n  callbackRoute,\n  transactions,\n  className = 'extension-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container extension',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n  const description = error\n    ? error\n    : transactions && transactions.length > 1\n    ? 'Check your Elrond Wallet Extension to sign the transactions'\n    : 'Check your Elrond Wallet Extension to sign the transaction';\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      window.location.href = callbackRoute;\n    }\n  };\n\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={handleClose}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? freeSolidIcons.faTimes : freeSolidIcons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar DeFi Wallet'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithExtensionModal;\n","import * as React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\n\nexport const Simple = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol'>{children}</div>\n);\n\nexport const Combined = ({\n  small,\n  children\n}: {\n  small: boolean | undefined;\n  children: React.ReactNode;\n}) => (\n  <div className={`token-symbol-combined ${small ? 'small' : ''}`}>\n    {children}\n  </div>\n);\n\nexport const Wrapped = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-wrapped'>\n    <div className='wrapped rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faDollarSign} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nexport const Pool = ({\n  first,\n  second\n}: {\n  first: React.ReactNode;\n  second: React.ReactNode;\n}) => (\n  <div className='token-symbol-pool'>\n    <div className='pool rounded-circle shadow'>\n      {first}\n      <div className='pool-icon'>{second}</div>\n    </div>\n  </div>\n);\n\nexport const Locked = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-locked'>\n    <div className='locked rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faLock} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getEgldLabel, wrapperClassName } from 'utils';\nimport { ReactComponent as EgldIcon } from '../../assets/icons/EGLD.svg';\nimport { Simple, Combined } from './TokenSymbol';\n\nconst getIdentifierWithoutNonce = (identifier: string) => {\n  const tokenParts = identifier.split('-');\n  return identifier.includes('-')\n    ? `${tokenParts[0]}-${tokenParts[1]}`\n    : identifier;\n};\n\ntype TokenIconProps = {\n  token: string;\n  combined?: boolean | undefined;\n  small?: boolean | undefined;\n  tokenAvatar?: string;\n};\ntype TokenIconType = TokenIconProps & {\n  symbol: string;\n  label: string;\n  icon: React.ReactNode;\n};\n\nfunction getIcon(isEgldTransfer: boolean, tokenAvatar?: string) {\n  if (tokenAvatar) {\n    return <img className='token-symbol-custom-token' src={tokenAvatar} />;\n  }\n  return isEgldTransfer ? (\n    <EgldIcon />\n  ) : (\n    <ReactFontawesome.FontAwesomeIcon icon={icons.faDiamond} />\n  );\n}\n\nconst getDetails = (token: string, tokenAvatar?: string): TokenIconType => {\n  const egldLabel = getEgldLabel();\n  const isEgldTransfer = token === egldLabel;\n\n  return {\n    token,\n    symbol: token ? token.split('-')[0] : '',\n    label: token,\n    // eslint-disable-next-line react/display-name\n    icon: () => getIcon(isEgldTransfer, tokenAvatar)\n  };\n};\n\nexport default class TokenDetails extends React.Component {\n  static Token = (props: TokenIconProps) => (\n    <React.Fragment>{props.token}</React.Fragment>\n  );\n  static Symbol = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .symbol\n      }\n    </React.Fragment>\n  );\n  static Label = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .label\n      }\n    </React.Fragment>\n  );\n  static Icon = (props: TokenIconProps) => {\n    const Component: any =\n      process.env.NODE_ENV !== 'test'\n        ? getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n            .icon\n        : () => null;\n\n    return (\n      <span className={wrapperClassName}>\n        {props.combined ? (\n          <Combined small={props.small}>\n            <Component />\n          </Combined>\n        ) : (\n          <Simple>\n            <Component />\n          </Simple>\n        )}\n      </span>\n    );\n  };\n  render() {\n    return null;\n  }\n}\n","import * as React from 'react';\nimport { decodePart } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nconst allOccurences = (sourceStr: string, searchStr: string) =>\n  [...sourceStr.matchAll(new RegExp(searchStr, 'gi'))].map((a) => a.index);\n\nconst TransactionData = ({\n  data,\n  highlight,\n  isScCall\n}: {\n  data: string;\n  highlight?: string;\n  isScCall?: boolean;\n}) => {\n  let output = <React.Fragment>{data}</React.Fragment>;\n\n  const [encodedScCall, ...remainingDataFields] =\n    highlight && isScCall ? highlight.split('@') : [];\n\n  if (data && highlight && allOccurences(data, highlight).length === 1) {\n    switch (true) {\n      case data.startsWith(highlight): {\n        const [, rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            {highlight}\n            <span className='text-muted'>{rest}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n      case data.endsWith(highlight): {\n        const [rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{rest}</span>\n            {highlight}\n          </React.Fragment>\n        );\n        break;\n      }\n\n      default: {\n        const [start, end] = data.split(highlight);\n\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{start}</span>\n            <span className={'highlighted'}>{highlight}</span>\n            <span className='text-muted'>{end}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {encodedScCall && (\n        <div className='form-group mb-0 data-field mw-100'>\n          <span className='form-label text-secondary d-block'>SC Call</span>\n\n          <div\n            data-testid='confirmScCall'\n            className='textarea sc-call form-control cursor-text mt-1 text-break-all'\n          >\n            {[decodePart(encodedScCall), ...remainingDataFields].join('@')}\n          </div>\n        </div>\n      )}\n      <div className='form-group mb-0 data-field mw-100'>\n        <span className='form-label text-secondary d-block'>Data</span>\n\n        <div\n          data-testid='confirmData'\n          className='textarea form-control cursor-text mt-1 text-break-all'\n        >\n          {data ? output : 'N/A'}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(TransactionData);\n","import React from 'react';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { useGetNetworkConfig } from 'hooks';\nimport useGetTokenDetails from 'hooks/transactions/useGetTokenDetails';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport PageState from 'UI/PageState';\nimport ProgressSteps from 'UI/ProgressSteps';\nimport TokenDetails from 'UI/TokenDetails';\nimport TransactionData from 'UI/TransactionData';\nimport {\n  denominate,\n  getEgldLabel,\n  getGeneratedClasses,\n  isTokenTransfer\n} from 'utils';\n\nexport interface SignStepType {\n  onSignTransaction: () => void;\n  onPrev: () => void;\n  handleClose: () => void;\n  waitingForDevice: boolean;\n  error: string | null;\n  callbackRoute?: string;\n  title?: React.ReactNode;\n  currentStep: number;\n  currentTransaction: ActiveLedgerTransactionType | null;\n  allTransactions: MultiSignTxType[];\n  isLastTransaction: boolean;\n  className: string;\n}\n\nconst SignStep = ({\n  onSignTransaction,\n  handleClose,\n  onPrev,\n  title,\n  waitingForDevice,\n  currentTransaction,\n  error,\n  allTransactions,\n  isLastTransaction,\n  currentStep,\n  className\n}: SignStepType) => {\n  const egldLabel = getEgldLabel();\n\n  if (!currentTransaction) {\n    return null;\n  }\n\n  const transactionData = currentTransaction.transaction.getData().toString();\n  const { network } = useGetNetworkConfig();\n\n  const {\n    tokenId,\n    amount,\n    type,\n    multiTxData,\n    receiver\n  } = currentTransaction.transactionTokenInfo;\n\n  const isTokenTransaction = Boolean(\n    tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n  );\n\n  const isFirst = currentStep === 0;\n\n  const onCloseClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isFirst) {\n      handleClose();\n    } else {\n      onPrev();\n    }\n  };\n\n  const continueWithoutSigning =\n    type && multiTxData && !transactionData.endsWith(multiTxData);\n\n  let signBtnLabel = 'Sign & Continue';\n  signBtnLabel = waitingForDevice ? 'Check your Ledger' : signBtnLabel;\n  signBtnLabel =\n    isLastTransaction && !waitingForDevice ? 'Sign & Submit' : signBtnLabel;\n  signBtnLabel = continueWithoutSigning ? 'Continue' : signBtnLabel;\n\n  const { tokenDenomination, tokenAvatar } = useGetTokenDetails({\n    tokenId: currentTransaction.transactionTokenInfo.tokenId\n  });\n\n  const denominatedAmount = denominate({\n    input: isTokenTransaction\n      ? amount\n      : currentTransaction.transaction.getValue().toString(),\n    denomination: isTokenTransaction\n      ? tokenDenomination\n      : Number(network.egldDenomination),\n    decimals: Number(network.decimals),\n    showLastNonZeroDecimal: false,\n    addCommas: true\n  });\n\n  const scamReport = currentTransaction.receiverScamInfo;\n  const showProgressSteps = allTransactions.length > 1;\n\n  const classes = getGeneratedClasses(className, true, {\n    formGroup: 'form-group text-left',\n    formLabel: 'form-label text-secondary',\n    icon: 'text-white',\n    contentWrapper:\n      'd-flex flex-column justify-content-start flex-md-row justify-content-md-between mb-3',\n    tokenWrapper: 'mb-3 mb-md-0 d-flex flex-column align-items-start',\n    tokenLabel: 'text-secondary text-left',\n    tokenValue: 'd-flex align-items-center mt-1',\n    scamReport: 'text-warning',\n    scamReportIcon: 'text-warning mr-1',\n    tokenAmountLabel: 'text-secondary text-left',\n    tokenAmountValue: 'd-flex align-items-center',\n    dataFormGroup: 'form-group text-left',\n    errorMessage:\n      'text-danger d-flex justify-content-center align-items-center',\n    buttonsWrapper: 'd-flex align-items-center justify-content-end mt-spacer',\n    cancelButton: 'btn btn-dark text-white flex-even mr-2',\n    signButton: `btn ${\n      scamReport ? 'btn-warning' : 'btn-primary'\n    } flex-even ml-2`\n  });\n\n  return (\n    <PageState\n      icon={error ? icons.faTimes : icons.faHourglass}\n      iconClass={classes.icon}\n      iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n      iconSize='3x'\n      className={className}\n      title={title || 'Confirm on Ledger'}\n      description={\n        <React.Fragment>\n          {currentTransaction.transaction && (\n            <React.Fragment>\n              {showProgressSteps && (\n                <ProgressSteps\n                  totalSteps={allTransactions.length}\n                  currentStep={currentStep + 1} // currentStep starts at 0\n                  className='mb-4'\n                />\n              )}\n\n              <div className={classes.formGroup} data-testid='transactionTitle'>\n                <div className={classes.formLabel}>To: </div>\n                {multiTxData\n                  ? new Address(receiver).bech32()\n                  : currentTransaction.transaction.getReceiver().toString()}\n                {scamReport && (\n                  <div className={classes.scamReport}>\n                    <span>\n                      <ReactFontawesome.FontAwesomeIcon\n                        icon={icons.faExclamationTriangle}\n                        className={classes.scamReportIcon}\n                      />\n                      <small>{scamReport}</small>\n                    </span>\n                  </div>\n                )}\n              </div>\n\n              <div className={classes.contentWrapper}>\n                <div className={classes.tokenWrapper}>\n                  <div className={classes.tokenlabel}>Token</div>\n                  <div className={classes.tokenValue}>\n                    <TokenDetails.Icon\n                      tokenAvatar={tokenAvatar}\n                      token={tokenId || egldLabel}\n                    />\n                    <div className='mr-1'></div>\n                    <TokenDetails.Label token={tokenId || egldLabel} />\n                  </div>\n                </div>\n                <div>\n                  <div className={classes.tokenAmountLabel}>Amount</div>\n                  <div className={classes.tokenAmountValue}>\n                    <div className='mr-1'>{denominatedAmount}</div>\n                    <TokenDetails.Symbol token={tokenId || egldLabel} />\n                  </div>\n                </div>\n              </div>\n\n              <div className={classes.dataFormGroup}>\n                {currentTransaction.transaction.getData() && (\n                  <TransactionData\n                    {...{\n                      data: currentTransaction.transaction.getData().toString(),\n                      highlight: multiTxData,\n                      isScCall: !tokenId\n                    }}\n                  />\n                )}\n              </div>\n              {error && <p className={classes.errorMessage}>{error}</p>}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      }\n      action={\n        <div className={classes.buttonsWrapper}>\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={onCloseClick}\n            className={classes.cancelButton}\n          >\n            {isFirst ? 'Cancel' : 'Back'}\n          </button>\n\n          <button\n            type='button'\n            className={classes.signButton}\n            id='signBtn'\n            data-testid='signBtn'\n            onClick={onSignTransaction}\n            disabled={waitingForDevice}\n          >\n            {signBtnLabel}\n          </button>\n        </div>\n      }\n    />\n  );\n};\n\nexport default SignStep;\n","import React from 'react';\nimport { useSignTransactionsWithDevice } from 'hooks';\nimport classNames from 'optionalPackages/classnames';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport SignStep from './SignStep';\n\nconst SignWithDeviceModal = ({\n  handleClose,\n  error,\n  className = 'device-modal',\n  verifyReceiverScam = true,\n  title = 'Confirm transaction'\n}: SignModalPropsType) => {\n  const {\n    onSignTransaction,\n    onNext,\n    onPrev,\n    allTransactions,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    currentStep,\n    callbackRoute,\n    currentTransaction\n  } = useSignTransactionsWithDevice({\n    onCancel: handleClose,\n    verifyReceiverScam\n  });\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    container: 'card container',\n    cardBody: 'card-body'\n  });\n  return (\n    <ReactBootstrap.Modal\n      show={currentTransaction != null}\n      backdrop='static'\n      onHide={handleClose}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <div className={classes.container}>\n        <div className={classes.cardBody}>\n          <SignStep\n            {...{\n              onSignTransaction,\n              onNext,\n              onPrev,\n              allTransactions,\n              waitingForDevice,\n              isLastTransaction,\n              currentStep,\n              callbackRoute,\n              currentTransaction,\n              handleClose: onAbort,\n              className,\n              error,\n              title\n            }}\n          />\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithDeviceModal;\n","import React from 'react';\nimport { SignModalPropsType } from 'types';\nimport SignWithDeviceModal from '../SignWithDeviceModal';\n\nconst SignWithLedgerModal = (props: SignModalPropsType) => {\n  return (\n    <SignWithDeviceModal\n      {...props}\n      title={props.title || 'Confirm on Ledger'}\n      className={props.className || 'ledger-modal'}\n    />\n  );\n};\n\nexport default SignWithLedgerModal;\n","import React from 'react';\n\nimport classNames from 'optionalPackages/classnames';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\n\nexport const SignWithWalletConnectModal = ({\n  error,\n  handleClose,\n  callbackRoute,\n  transactions,\n  className = 'wallet-connect-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n\n  const hasMultipleTransactions = transactions && transactions?.length > 1;\n  const description = error\n    ? error\n    : `Check your phone to sign the transaction${\n        hasMultipleTransactions ? 's' : ''\n      }`;\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      window.location.href = callbackRoute;\n    }\n  };\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={close}\n      className={classNames(classes.wrapper, wrapperClassName)}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? icons.faTimes : icons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithWalletConnectModal;\n","import React from 'react';\n\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { useGetLoginInfo } from 'hooks';\nimport {\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactions\n} from 'hooks';\nimport { LoginMethodsEnum } from 'types';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport SignWithExtensionModal from './SignWithExtensionModal';\nimport SignWithLedgerModal from './SignWithLedgerModal';\nimport SignWithWalletConnectModal from './SignWithWalletConnectModal';\n\ninterface SignPropsType {\n  handleClose: () => void;\n  error: string | null;\n  sessionId?: string;\n  transactions: Transaction[];\n  providerType: LoginMethodsEnum;\n  callbackRoute: string;\n  className?: string;\n  verifyReceiverScam?: boolean;\n}\n\ninterface CustomConfirmScreensType {\n  Ledger: (signProps: SignPropsType) => JSX.Element;\n  Extension: (signProps: SignPropsType) => JSX.Element;\n  WalletConnect: (signProps: SignPropsType) => JSX.Element;\n  Extra: (signProps: SignPropsType) => JSX.Element;\n}\n\ninterface SignTransactionsPropsType {\n  className?: string;\n  CustomConfirmScreens?: CustomConfirmScreensType;\n  verifyReceiverScam?: SignPropsType['verifyReceiverScam'];\n}\n\nfunction SignTransactionsModals({\n  className,\n  CustomConfirmScreens,\n  verifyReceiverScam = true\n}: SignTransactionsPropsType) {\n  const {\n    callbackRoute,\n    transactions,\n    error,\n    sessionId,\n    onAbort,\n    hasTransactions\n  } = useSignTransactions();\n\n  const { providerType } = useGetAccountProvider();\n  const signTransactionsError = useGetSignTransactionsError();\n  const { loginMethod } = useGetLoginInfo();\n\n  const handleClose = () => {\n    onAbort(sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    error: signError,\n    sessionId,\n    transactions: transactions!,\n    providerType,\n    callbackRoute,\n    className,\n    verifyReceiverScam\n  };\n\n  if (signError || hasTransactions) {\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger:\n        return CustomConfirmScreens?.Ledger ? (\n          <CustomConfirmScreens.Ledger {...signProps} />\n        ) : (\n          <SignWithLedgerModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.walletconnect:\n        return CustomConfirmScreens?.WalletConnect ? (\n          <CustomConfirmScreens.WalletConnect {...signProps} />\n        ) : (\n          <SignWithWalletConnectModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extension:\n        return CustomConfirmScreens?.Extension ? (\n          <CustomConfirmScreens.Extension {...signProps} />\n        ) : (\n          <SignWithExtensionModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extra:\n        return CustomConfirmScreens?.Extra ? (\n          <CustomConfirmScreens.Extra {...signProps} />\n        ) : null;\n\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\nexport default withClassNameWrapper(SignTransactionsModals);\n","enum SessionStorageKeysEnum {\n  'toasts' = 'toasts'\n}\n\nexport function setToastsIdsToStorage(ids: string[]) {\n  return sessionStorage.setItem(\n    SessionStorageKeysEnum.toasts,\n    JSON.stringify(ids)\n  );\n}\n\nexport function getToastsIdsFromStorage() {\n  const toastsIds = sessionStorage.getItem(SessionStorageKeysEnum.toasts);\n  return toastsIds != null ? JSON.parse(toastsIds) : [];\n}\n","import { Address } from '@elrondnetwork/erdjs/out';\nimport { getShardOfAddress } from 'utils';\n\ninterface IsCrossShardTransactionPropsType {\n  receiverAddress: string;\n  senderShard?: number;\n  senderAddress?: string;\n}\nexport function isCrossShardTransaction({\n  receiverAddress,\n  senderShard,\n  senderAddress\n}: IsCrossShardTransactionPropsType) {\n  try {\n    const receiver = new Address(receiverAddress);\n    const receiverShard = getShardOfAddress(receiver.pubkey());\n    if (senderShard == null && senderAddress != null) {\n      const sender = new Address(senderAddress);\n      return getShardOfAddress(sender) === receiverShard;\n    }\n    return receiverShard === senderShard;\n  } catch (err) {\n    return false;\n  }\n}\n","import React from 'react';\nimport classnames from 'optionalPackages/classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst IconState = ({\n  icon,\n  iconSize = '3x',\n  className = 'icon-state',\n  shouldRenderDefaultCss = true\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: classnames('icon-state mx-auto', className, {\n        half: iconSize === '2x'\n      }),\n      icon: classnames('text-white', className)\n    }\n  );\n\n  return (\n    <span className={generatedClasses.wrapper}>\n      <ReactFontawesome.FontAwesomeIcon\n        icon={icon}\n        size={iconSize}\n        className={generatedClasses.icon}\n      />\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(IconState);\n","import React from 'react';\nimport moment from 'optionalPackages/moment';\nimport { logarithmicRest } from 'utils';\nimport storage from 'utils/storage';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './type';\n\nconst Progress = ({\n  id,\n  children,\n  progress,\n  done,\n  expiresIn = 10 * 60\n}: Props) => {\n  const ref = React.useRef(null);\n  const intervalRef = React.useRef<any>();\n  const removeTxFromSession = () => {\n    const toastProgress = storage.session.getItem('toastProgress');\n    const hasSessionStoredTx = Boolean(toastProgress?.[id]);\n\n    if (!hasSessionStoredTx) {\n      return;\n    }\n\n    const expires = moment().add(expiresIn, 'seconds').unix();\n\n    delete toastProgress[id];\n\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires\n    });\n  };\n\n  const saveToSession = ({ value }: { value: number }) => {\n    const toastProgress = storage.session.getItem('toastProgress') || {};\n    toastProgress[id] = value;\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires: moment().add(expiresIn, 'seconds').unix()\n    });\n  };\n\n  const getInitialData = () => {\n    const totalSeconds = progress ? progress.endTime - progress.startTime : 0;\n    const toastProgress = storage.session.getItem('toastProgress');\n    const remaining = progress\n      ? ((progress.endTime - moment().unix()) * 100) / totalSeconds\n      : 0;\n\n    const currentRemaining =\n      toastProgress && id in toastProgress ? toastProgress[id] : remaining;\n    return { currentRemaining, totalSeconds };\n  };\n\n  const { totalSeconds, currentRemaining } = getInitialData();\n\n  const [percentRemaining, setPercentRemaining] =\n    React.useState<number>(currentRemaining);\n\n  React.useEffect(() => {\n    if (progress) {\n      const maxPercent = 90;\n      const perc = totalSeconds / maxPercent;\n      const int = moment.duration(perc.toFixed(2), 's').asMilliseconds();\n\n      if (done) {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const value = existing - 1;\n              if (value <= 0) {\n                clearInterval(intervalRef.current);\n                removeTxFromSession();\n                return 0;\n              } else {\n                saveToSession({ value });\n                return value;\n              }\n            });\n          }\n        }, 5);\n      } else {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const decrement =\n                existing > 100 - maxPercent ? 1 : logarithmicRest(existing);\n              const value = existing - decrement;\n              saveToSession({ value });\n              return value;\n            });\n          }\n        }, int);\n      }\n\n      return () => {\n        clearInterval(intervalRef.current);\n      };\n    }\n    return;\n  }, [progress, done]);\n  return progress ? (\n    <div className='progress position-relative' ref={ref}>\n      <div\n        className='progress-bar'\n        role='progressbar'\n        style={{ width: `${percentRemaining}%` }}\n        aria-valuenow={percentRemaining}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <div className='content-height'>{children}</div>\n      </div>\n      <div className='d-flex position-absolute w-100'>{children}</div>\n    </div>\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(Progress);\n","function fallbackCopyTextToClipboard(text: string) {\n  let success = false;\n\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n    success = true;\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n\n  return success;\n}\n\nexport default async function copyTextToClipboard(text: string) {\n  let success = false;\n\n  if (!navigator.clipboard) {\n    success = fallbackCopyTextToClipboard(text);\n  } else {\n    success = await navigator.clipboard.writeText(text).then(\n      function done() {\n        return true;\n      },\n      function error(err) {\n        console.error('Async: Could not copy text: ', err);\n        return false;\n      }\n    );\n  }\n\n  return success;\n}\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport copyTextToClipboard from './helpers/copyToClipboard';\n\ninterface CopyButtonType {\n  text: string;\n  className?: string;\n}\n\nconst CopyButton = ({ text, className = '' }: CopyButtonType) => {\n  const [copyResult, setCopyResut] = React.useState({\n    default: true,\n    success: false\n  });\n\n  const handleCopyToClipboard = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const noSpaces = text ? text.trim() : text;\n    setCopyResut({\n      default: false,\n      success: await copyTextToClipboard(noSpaces)\n    });\n\n    setTimeout(() => {\n      setCopyResut({\n        default: true,\n        success: false\n      });\n    }, 1000);\n  };\n\n  return (\n    <a\n      href='/#'\n      onClick={handleCopyToClipboard}\n      className={`side-action text-secondary ${className}`}\n    >\n      {copyResult.default || !copyResult.success ? (\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faCopy} />\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faCheck}\n          className='text-primary-highlight'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default withClassNameWrapper(CopyButton);\n","import React from 'react';\nimport { useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\ninterface TrimType {\n  text: string;\n  dataTestId?: string;\n}\n\nconst Trim = ({ text, dataTestId = '' }: TrimType) => {\n  const [overflow, setOverflow] = React.useState(false);\n  const trimRef = React.useRef(document.createElement('span'));\n  const hiddenTextRef = React.useRef(document.createElement('span'));\n\n  const listener = useCallback(\n    debounce(() => {\n      if (trimRef.current && hiddenTextRef.current) {\n        const diff =\n          hiddenTextRef.current.offsetWidth - trimRef.current.offsetWidth;\n        setOverflow(diff > 1);\n      }\n    }, 300),\n    []\n  );\n\n  const addWindowResizeListener = () => {\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  };\n\n  React.useEffect(addWindowResizeListener);\n\n  React.useEffect(() => {\n    listener();\n  }, []);\n\n  return (\n    <span\n      ref={trimRef}\n      className={`trim ${overflow ? 'overflow' : ''}`}\n      data-testid={dataTestId}\n    >\n      <span ref={hiddenTextRef} className='hidden-text-ref'>\n        {text}\n      </span>\n\n      {overflow ? (\n        <React.Fragment>\n          <span className='left'>\n            <span>\n              {String(text).substring(0, Math.floor(text.length / 2))}\n            </span>\n          </span>\n          <span className='ellipsis'>...</span>\n          <span className='right'>\n            <span>{String(text).substring(Math.ceil(text.length / 2))}</span>\n          </span>\n        </React.Fragment>\n      ) : (\n        <span>{text}</span>\n      )}\n    </span>\n  );\n};\n\nexport default withClassNameWrapper(Trim);\n","import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport CopyButton from 'UI/CopyButton';\nimport ExplorerLink from 'UI/ExplorerLink';\nimport Trim from 'UI/Trim';\nimport { getGeneratedClasses, isServerTransactionPending } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst TxDetails = ({\n  title,\n  transactions,\n  className = 'tx-details',\n  isTimedOut = false,\n  shouldRenderDefaultCss = true\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      title: 'mb-0',\n      statusTransactions: 'mb-2 mt-1',\n      iconSuccess: 'mr-1 text-secondary',\n      iconFailed: 'mr-1 text-secondary',\n      trimContainer: 'text-nowrap trim-fs-sm mr-3',\n      iconPending: 'mr-1 text-secondary fa-spin slow-spin',\n      item: 'tx-description d-flex justify-content-start align-items-center'\n    }\n  );\n\n  const iconSuccessData = {\n    icon: icons.faCheck,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconFailedData = {\n    icon: icons.faTimes,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconPendingData = {\n    icon: icons.faCircleNotch,\n    classNames: generatedClasses.iconPending\n  };\n\n  const iconData: Record<string, typeof iconPendingData> = {\n    pending: iconPendingData,\n    success: iconSuccessData,\n    completed: iconSuccessData,\n    fail: iconFailedData,\n    invalid: iconFailedData,\n    timedOut: iconFailedData\n  };\n  return (\n    <React.Fragment>\n      {title && <div className={generatedClasses.title}>{title}</div>}\n      <div className={generatedClasses.statusTransactions}>\n        {\n          transactions.filter((tx) => !isServerTransactionPending(tx.status))\n            .length\n        }{' '}\n        / {transactions.length} transactions processed\n      </div>\n      {transactions.map(({ hash, status }) => {\n        const iconSrc = iconData[status];\n        return (\n          <div className={generatedClasses.item} key={hash}>\n            {!isTimedOut && iconSrc != null && (\n              <ReactFontawesome.FontAwesomeIcon\n                icon={iconSrc.icon}\n                className={iconSrc.classNames}\n              />\n            )}\n            <span\n              className={generatedClasses.trimContainer}\n              style={{ width: '10rem' }}\n            >\n              <Trim text={hash} />\n            </span>\n            <CopyButton text={hash} />\n            {!isServerTransactionPending(status) && (\n              <ExplorerLink page={`/transactions/${hash}`} className='ml-2' />\n            )}\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default withClassNameWrapper(TxDetails);\n","import React, { useMemo, useRef, useState } from 'react';\n\nimport { useGetTransactionDisplayInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport moment from 'optionalPackages/moment';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useSelector } from 'redux/DappProviderContext';\nimport { shardSelector } from 'redux/selectors';\nimport { isCrossShardTransaction } from 'services/transactions/isCrossShardTransaction';\nimport { SignedTransactionType } from 'types';\nimport IconState from 'UI/IconState';\nimport Progress from 'UI/Progress';\nimport TxDetails from 'UI/TxDetails';\nimport {\n  getAddressFromDataField,\n  getGeneratedClasses,\n  getIsTransactionPending,\n  getIsTransactionTimedOut\n} from 'utils';\n\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { TransactionToastPropsType } from './types';\n\nconst averageTxDurationMs = 6000;\nconst crossShardRounds = 5;\n\nconst TransactionToast = ({\n  toastId,\n  title = '',\n  shouldRenderDefaultCss = true,\n  className = 'transaction-toast',\n  withTxNonce = false,\n  transactions,\n  status,\n  onClose,\n  startTimeProgress,\n  endTimeProgress,\n  lifetimeAfterSuccess\n}: TransactionToastPropsType) => {\n  const ref = useRef(null);\n  const [shouldRender, setShouldRender] = useState(true);\n  const transactionDisplayInfo = useGetTransactionDisplayInfo(toastId);\n  const accountShard = useSelector(shardSelector);\n\n  const {\n    errorMessage = 'Transaction failed',\n    timedOutMessage = 'Transaction timed out',\n    successMessage = 'Transaction successful',\n    processingMessage = 'Processing transaction'\n  } = transactionDisplayInfo;\n\n  const isSameShard = useMemo(\n    () =>\n      transactions!.reduce(\n        (\n          prevTxIsSameShard: boolean,\n          { receiver, data }: SignedTransactionType\n        ) => {\n          const receiverAddress = getAddressFromDataField({\n            receiver,\n            data\n          });\n          if (receiverAddress == null) {\n            return prevTxIsSameShard;\n          }\n          return (\n            prevTxIsSameShard &&\n            isCrossShardTransaction({\n              receiverAddress,\n              senderShard: accountShard\n            })\n          );\n        },\n        true\n      ),\n    [transactions, accountShard]\n  );\n\n  const shardAdjustedDuration = isSameShard\n    ? averageTxDurationMs\n    : crossShardRounds * averageTxDurationMs;\n\n  const transactionDuration =\n    transactionDisplayInfo?.transactionDuration || shardAdjustedDuration;\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      toastFooter: 'mb-0 text-break',\n      details: 'media-body flex-grow-1',\n      toastContainer: 'w-100 media p-2',\n      wrapper: 'toast-visible clickable',\n      toastHeader: 'd-flex justify-content-between mb-1',\n      iconContainer: 'align-self-center ml-2 mr-2 pr-1',\n      title: 'm-0 font-weight-normal text-nowrap text-truncate',\n      closeButton: 'close d-flex side-action align-items-center mx-2 outline-0'\n    }\n  );\n\n  const [startTime, endTime] = useMemo(() => {\n    const startTime = startTimeProgress || moment().unix();\n    const endTime =\n      endTimeProgress ||\n      moment().add(Number(transactionDuration), 'milliseconds').unix();\n    return [startTime, endTime];\n  }, []);\n\n  const progress = { startTime, endTime };\n\n  const successToastData = {\n    id: toastId,\n    icon: icons.faCheck,\n    expires: 30000,\n    hasCloseButton: true,\n    title: successMessage,\n    iconClassName: 'bg-success'\n  };\n\n  const pendingToastData = {\n    id: toastId,\n    expires: false,\n    icon: icons.faHourglass,\n    hasCloseButton: false,\n    title: processingMessage,\n    iconClassName: 'bg-warning'\n  };\n\n  const failToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: errorMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-danger'\n  };\n\n  const timedOutToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: timedOutMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-warning'\n  };\n\n  const isPending = getIsTransactionPending(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n\n  const toatsOptionsData = {\n    signed: pendingToastData,\n    sent: pendingToastData,\n    pending: pendingToastData,\n    success: successToastData,\n    completed: successToastData,\n    cancelled: failToastData,\n    fail: failToastData,\n    timedOut: timedOutToastData\n  };\n\n  const toastDataState = toatsOptionsData[status!];\n\n  const handleDeleteToast = () => {\n    setShouldRender(false);\n    onClose?.(toastId);\n  };\n\n  if (!shouldRender || transactions == null) {\n    return null;\n  }\n\n  return (\n    <ReactBootstrap.Toast\n      ref={ref}\n      className={generatedClasses.wrapper}\n      key={toastId}\n    >\n      <Progress\n        key={toastId}\n        id={toastId}\n        progress={progress}\n        expiresIn={lifetimeAfterSuccess}\n        done={!isPending || isTimedOut}\n      >\n        <div className={generatedClasses.toastContainer}>\n          <div className={generatedClasses.iconContainer}>\n            <IconState\n              iconSize='2x'\n              icon={toastDataState.icon}\n              className={toastDataState.iconClassName}\n            />\n            {withTxNonce &&\n              transactions.map((tx: any) => (\n                <p key={tx.nonce.valueOf()}>{tx.nonce.valueOf()}</p>\n              ))}\n          </div>\n          <div className={generatedClasses.details} style={{ minWidth: 0 }}>\n            <div className={generatedClasses.toastHeader}>\n              <h5 className={generatedClasses.title}>{toastDataState.title}</h5>\n              {!isPending && (\n                <button\n                  type='button'\n                  className={generatedClasses.closeButton}\n                  onClick={handleDeleteToast}\n                >\n                  <ReactFontawesome.FontAwesomeIcon\n                    icon={icons.faTimes}\n                    size='xs'\n                  />\n                </button>\n              )}\n            </div>\n            <div className={generatedClasses.toastFooter}>\n              <TxDetails\n                transactions={transactions}\n                title={title}\n                isTimedOut={isTimedOut}\n              />\n            </div>\n          </div>\n        </div>\n      </Progress>\n    </ReactBootstrap.Toast>\n  );\n};\n\nexport default withClassNameWrapper(TransactionToast);\n","import React, { useEffect, useState } from 'react';\nimport { useGetSignedTransactions } from 'hooks';\nimport { useGetPendingTransactions } from 'services';\nimport {\n  getToastsIdsFromStorage,\n  setToastsIdsToStorage\n} from 'storage/session';\nimport { SignedTransactionsBodyType } from 'types';\nimport TransactionToast from 'UI/TransactionToast';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\n\nimport { TransactionsToastListPropsType } from './types';\n\nfunction TransactionsToastList({\n  shouldRenderDefaultCss = true,\n  withTxNonce = false,\n  className = 'transactions-toast-list',\n  pendingTransactions,\n  signedTransactions,\n  successfulToastLifetime\n}: TransactionsToastListPropsType) {\n  const [toastsIds, setToastsIds] = useState<any>([]);\n\n  const pendingTransactionsFromStore =\n    useGetPendingTransactions().pendingTransactions;\n\n  const signedTransactionsFromStore =\n    useGetSignedTransactions().signedTransactions;\n\n  const pendingTransactionsToRender =\n    pendingTransactions || pendingTransactionsFromStore;\n\n  const signedTransactionsToRender =\n    signedTransactions || signedTransactionsFromStore;\n\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper:\n        'toast-messages d-flex flex-column align-items-center justify-content-sm-end',\n      toast: ''\n    }\n  );\n\n  const mappedToastsList = toastsIds?.map((toastId: string) => {\n    const currentTx: SignedTransactionsBodyType =\n      signedTransactionsToRender[toastId];\n    if (\n      currentTx == null ||\n      currentTx?.transactions == null ||\n      currentTx?.status == null\n    ) {\n      return null;\n    }\n\n    const { transactions, status } = currentTx;\n    return (\n      <TransactionToast\n        className={className}\n        key={toastId}\n        transactions={transactions}\n        status={status}\n        toastId={toastId}\n        withTxNonce={withTxNonce}\n        lifetimeAfterSuccess={successfulToastLifetime}\n      />\n    );\n  });\n\n  const mapPendingSignedTransactions = () => {\n    const newToasts = [...toastsIds];\n\n    for (const sessionId in pendingTransactionsToRender) {\n      const hasToast = toastsIds.includes(sessionId);\n\n      if (!hasToast) {\n        newToasts.push(sessionId);\n      }\n    }\n\n    setToastsIds(newToasts);\n  };\n\n  const fetchSessionStorageToasts = () => {\n    const sessionStorageToastsIds = getToastsIdsFromStorage();\n\n    if (sessionStorageToastsIds) {\n      const newToasts = [...toastsIds, ...sessionStorageToastsIds];\n      setToastsIds(newToasts);\n    }\n  };\n\n  const saveSessionStorageToasts = () => {\n    const shouldSaveLocalToasts = Boolean(toastsIds.length);\n    if (!shouldSaveLocalToasts) {\n      return;\n    }\n\n    setToastsIdsToStorage(toastsIds);\n  };\n\n  useEffect(() => {\n    fetchSessionStorageToasts();\n    return () => {\n      saveSessionStorageToasts();\n    };\n  }, []);\n\n  useEffect(() => {\n    mapPendingSignedTransactions();\n  }, [pendingTransactionsToRender]);\n\n  return <div className={generatedClasses.wrapper}>{mappedToastsList}</div>;\n}\n\nexport default withClassNameWrapper(TransactionsToastList);\n","import * as React from 'react';\nimport { getUsdValue } from 'utils/operations';\n\nconst UsdValue = (props: {\n  amount: string;\n  usd: number;\n  'data-testid'?: string;\n}) => {\n  const { amount, usd, ...dataTestId } = props;\n  const value = `≈ $${getUsdValue({ amount, usd })}`;\n  return (\n    <small className='form-text text-secondary mt-0' {...dataTestId}>\n      {`${amount}` === '0' ? '= $0' : value}\n    </small>\n  );\n};\n\nexport default UsdValue;\n","let platform: any = {};\ntry {\n  platform = require('platform');\n} catch (err) {}\n\nexport default platform;\n","let qrcode: any = {};\ntry {\n  qrcode = require('qrcode');\n} catch (err) {}\n\nexport default qrcode;\n","import React, { useEffect, useState } from 'react';\n\nimport platform from 'optionalPackages/platform';\nimport QRCode from 'optionalPackages/qrcode';\nimport { useWalletConnectLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { ReactComponent as Lighting } from '../WalletConnectLoginButton/lightning.svg';\nimport { LoginModalPropsType } from './types';\n\nfunction WalletConnectLoginContainer({\n  callbackRoute,\n  loginButtonText,\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  className = 'wallect-connect-login-modal',\n  lead = 'Scan the QR code using Maiar',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  token,\n  onClose\n}: LoginModalPropsType) {\n  const [\n    initLoginWithWalletConnect,\n    { error },\n    { uriDeepLink, walletConnectUri }\n  ] = useWalletConnectLogin({\n    logoutRoute,\n    callbackRoute,\n    token,\n    redirectAfterLogin,\n    shouldLoginUser: true\n  });\n  const [qrCodeSvg, setQrCodeSvg] = useState<string>('');\n  const isMobileDevice =\n    platform?.os?.family === 'iOS' || platform?.os?.family === 'Android';\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'btn btn-primary px-sm-4 m-1 mx-sm-3',\n      loginText: 'text-left',\n      container: 'm-auto login-container',\n      card: 'card my-3 text-center',\n      cardBody: 'card-body p-4 mx-lg-4',\n      qrCodeSvgContainer: 'mx-auto mb-3',\n      title: 'mb-3',\n      leadText: 'lead mb-0',\n      mobileLoginButton:\n        'btn btn-primary d-inline-flex align-items-center px-4 mt-4',\n      mobileLoginButtonIcon: 'mr-2',\n      errorMessage:\n        'text-danger d-flex justify-content-center align-items-center'\n    }\n  );\n\n  const generateQRCode = async () => {\n    if (!walletConnectUri) {\n      return;\n    }\n\n    const svg = await QRCode.toString(walletConnectUri, {\n      type: 'svg'\n    });\n\n    setQrCodeSvg(svg);\n  };\n\n  useEffect(() => {\n    generateQRCode();\n  }, [walletConnectUri]);\n\n  useEffect(() => {\n    initLoginWithWalletConnect();\n  }, []);\n\n  const content = (\n    <div className={generatedClasses.container}>\n      <div className={generatedClasses.root}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <div\n              className={generatedClasses.qrCodeSvgContainer}\n              dangerouslySetInnerHTML={{\n                __html: qrCodeSvg\n              }}\n              style={{\n                width: '15rem',\n                height: '15rem'\n              }}\n            />\n            <h4 className={generatedClasses.title}>{title}</h4>\n            {isMobileDevice ? (\n              <React.Fragment>\n                <p className={generatedClasses.leadText}>{loginButtonText}</p>\n                <a\n                  id='accessWalletBtn'\n                  data-testid='accessWalletBtn'\n                  className={generatedClasses.mobileLoginButton}\n                  href={uriDeepLink || undefined}\n                  rel='noopener noreferrer nofollow'\n                  target='_blank'\n                >\n                  <Lighting\n                    className={generatedClasses.mobileLoginButtonIcon}\n                    style={{\n                      width: '0.9rem',\n                      height: '0.9rem'\n                    }}\n                  />\n                  {title}\n                </a>\n              </React.Fragment>\n            ) : (\n              <p className={generatedClasses.leadText}>{lead}</p>\n            )}\n            <div>\n              {error && (\n                <p className={generatedClasses.errorMessage}>{error}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with Maiar'}\n      className={className}\n      onClose={onClose}\n    >\n      {content}\n    </ModalContainer>\n  ) : (\n    content\n  );\n}\n\nexport default withClassNameWrapper(WalletConnectLoginContainer);\n","import React, { Fragment, useState } from 'react';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport WalletConnectLoginContainer from '../WalletConnectLoginContainer';\nimport { WalletConnectLoginButtonPropsType } from './types';\n\nconst WalletConnectLoginButton = ({\n  children,\n  callbackRoute,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Maiar App',\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin = false,\n  buttonClassName,\n  className = 'wallect-connect-login',\n  lead = 'Scan the QR code using Maiar',\n  token,\n  hideButtonWhenModalOpens = false\n}: WalletConnectLoginButtonPropsType) => {\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  const handleOpenModal = () => {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  };\n\n  const handleCloseModal = () => {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  };\n\n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n  return (\n    <Fragment>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <WalletConnectLoginContainer\n          callbackRoute={callbackRoute}\n          loginButtonText={loginButtonText}\n          title={title}\n          token={token}\n          className={className}\n          logoutRoute={logoutRoute}\n          lead={lead}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default withClassNameWrapper(WalletConnectLoginButton);\n","import React from 'react';\nimport { useWebWalletLogin } from 'services';\nimport { getGeneratedClasses } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { WebWalletLoginButtonPropsType } from './types';\n\nconst WebWalletLoginButton: (\n  props: WebWalletLoginButtonPropsType\n) => JSX.Element = ({\n  children,\n  token,\n  className = 'web-wallet-login',\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Elrond Web Wallet',\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useWebWalletLogin({\n    callbackRoute,\n    token\n  });\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left'\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default withClassNameWrapper(WebWalletLoginButton);\n","import React from 'react';\nimport { useGetLoginInfo } from 'hooks';\nimport ExtensionLoginButton from 'UI/extension/LoginButton';\n\nimport LedgerLoginButton from 'UI/ledger/LoginButton';\nimport WalletConnectLoginButton from 'UI/walletConnect/WalletConnectLoginButton';\nimport WebWalletLoginButton from 'UI/webWallet/LoginButton';\nimport { getGeneratedClasses, wrapperClassName } from 'utils';\nimport { withClassNameWrapper } from 'wrappers/withClassNameWrapper';\nimport { Props } from './types';\n\nconst UnlockPage = ({\n  loginRoute,\n  title = 'Login',\n  className = 'unlock-page',\n  shouldRenderDefaultCss = true,\n  LedgerLoginButtonText = 'Ledger',\n  description = 'Pick a login method',\n  WalletConnectLoginButtonText = 'Maiar',\n  ExtensionLoginButtonText = 'Extension',\n  WebWalletLoginButtonText = 'Web wallet'\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `home d-flex flex-fill align-items-center ${wrapperClassName}`,\n      title: 'mb-4',\n      description: 'mb-4',\n      cardContainer: 'm-auto',\n      card: 'card my-4 text-center',\n      cardBody: 'card-body py-4 px-2 px-sm-2 mx-lg-4'\n    }\n  );\n  const { isLoggedIn } = useGetLoginInfo();\n\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      window.location.href = loginRoute;\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <div className={generatedClasses.wrapper}>\n      <div className={generatedClasses.cardContainer}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <h4 className={generatedClasses.title}>{title}</h4>\n            <p className={generatedClasses.description}>{description}</p>\n            <ExtensionLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={ExtensionLoginButtonText}\n            />\n            <WebWalletLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WebWalletLoginButtonText}\n            />\n            <LedgerLoginButton\n              loginButtonText={LedgerLoginButtonText}\n              callbackRoute={loginRoute}\n            />\n            <WalletConnectLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WalletConnectLoginButtonText}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withClassNameWrapper(UnlockPage);\n","import { ApiProvider } from '@elrondnetwork/erdjs';\nimport { networkSelector } from 'redux/selectors';\nimport { store } from 'redux/store';\nimport { NetworkType } from 'types';\n\nlet apiProvider: ApiProvider | null = null;\n\nexport function initializeApiProvider(networkConfig?: NetworkType) {\n  const initializationNetworkConfig =\n    networkConfig || networkSelector(store.getState());\n  apiProvider = new ApiProvider(initializationNetworkConfig.apiAddress, {\n    timeout: Number(initializationNetworkConfig.apiTimeout)\n  });\n\n  return apiProvider;\n}\n\nexport function getApiProvider(): ApiProvider {\n  if (apiProvider == null) {\n    return initializeApiProvider();\n  } else {\n    return apiProvider;\n  }\n}\n","const mnemonicWords = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n\nexport function getMnemonicWords() {\n  return mnemonicWords;\n}\n"]},"metadata":{},"sourceType":"module"}