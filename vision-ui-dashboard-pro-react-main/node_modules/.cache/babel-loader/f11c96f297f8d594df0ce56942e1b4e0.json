{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Query = exports.MaxUint64 = void 0;\n\nvar function_1 = require(\"./function\");\n\nvar balance_1 = require(\"../balance\");\n\nvar address_1 = require(\"../address\");\n\nvar utils_1 = require(\"../utils\");\n\nvar argSerializer_1 = require(\"./argSerializer\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nexports.MaxUint64 = new bignumber_js_1.default(\"18446744073709551615\");\n\nvar Query = /*#__PURE__*/function () {\n  function Query(init) {\n    _classCallCheck(this, Query);\n\n    this.caller = new address_1.Address();\n    this.address = new address_1.Address();\n    this.func = function_1.ContractFunction.none();\n    this.args = [];\n    this.value = balance_1.Balance.Zero();\n    Object.assign(this, init);\n    utils_1.guardValueIsSet(\"address\", this.address);\n    utils_1.guardValueIsSet(\"func\", this.func);\n    this.address.assertNotEmpty();\n    this.args = this.args || [];\n    this.caller = this.caller || new address_1.Address();\n    this.value = this.value || balance_1.Balance.Zero();\n  }\n\n  _createClass(Query, [{\n    key: \"toHttpRequest\",\n    value: function toHttpRequest() {\n      var request = {\n        \"scAddress\": this.address.bech32(),\n        \"funcName\": this.func.toString(),\n        \"args\": new argSerializer_1.ArgSerializer().valuesToStrings(this.args),\n        \"value\": this.value.toString()\n      };\n\n      if (!this.caller.isEmpty()) {\n        request[\"caller\"] = this.caller.bech32();\n      }\n\n      return request;\n    }\n  }]);\n\n  return Query;\n}();\n\nexports.Query = Query;","map":{"version":3,"sources":["../../src/smartcontracts/query.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,SAAA,GAAY,IAAI,cAAA,CAAA,OAAJ,CAAc,sBAAd,CAAZ;;IAEA,K;EAOT,eAAY,IAAZ,EAAiC;IAAA;;IAC7B,KAAK,MAAL,GAAc,IAAI,SAAA,CAAA,OAAJ,EAAd;IACA,KAAK,OAAL,GAAe,IAAI,SAAA,CAAA,OAAJ,EAAf;IACA,KAAK,IAAL,GAAY,UAAA,CAAA,gBAAA,CAAiB,IAAjB,EAAZ;IACA,KAAK,IAAL,GAAY,EAAZ;IACA,KAAK,KAAL,GAAa,SAAA,CAAA,OAAA,CAAQ,IAAR,EAAb;IAEA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAApB;IAEA,OAAA,CAAA,eAAA,CAAgB,SAAhB,EAA2B,KAAK,OAAhC;IACA,OAAA,CAAA,eAAA,CAAgB,MAAhB,EAAwB,KAAK,IAA7B;IAEA,KAAK,OAAL,CAAa,cAAb;IACA,KAAK,IAAL,GAAY,KAAK,IAAL,IAAa,EAAzB;IACA,KAAK,MAAL,GAAc,KAAK,MAAL,IAAe,IAAI,SAAA,CAAA,OAAJ,EAA7B;IACA,KAAK,KAAL,GAAa,KAAK,KAAL,IAAc,SAAA,CAAA,OAAA,CAAQ,IAAR,EAA3B;EACH;;;;WAED,yBAAa;MACT,IAAI,OAAO,GAAQ;QACf,aAAa,KAAK,OAAL,CAAa,MAAb,EADE;QAEf,YAAY,KAAK,IAAL,CAAU,QAAV,EAFG;QAGf,QAAQ,IAAI,eAAA,CAAA,aAAJ,GAAoB,eAApB,CAAoC,KAAK,IAAzC,CAHO;QAIf,SAAS,KAAK,KAAL,CAAW,QAAX;MAJM,CAAnB;;MAOA,IAAI,CAAC,KAAK,MAAL,CAAY,OAAZ,EAAL,EAA4B;QACxB,OAAO,CAAC,QAAD,CAAP,GAAoB,KAAK,MAAL,CAAY,MAAZ,EAApB;MACH;;MAED,OAAO,OAAP;IACH;;;;;;AAtCL,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Query = exports.MaxUint64 = void 0;\nconst function_1 = require(\"./function\");\nconst balance_1 = require(\"../balance\");\nconst address_1 = require(\"../address\");\nconst utils_1 = require(\"../utils\");\nconst argSerializer_1 = require(\"./argSerializer\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nexports.MaxUint64 = new bignumber_js_1.default(\"18446744073709551615\");\nclass Query {\n    constructor(init) {\n        this.caller = new address_1.Address();\n        this.address = new address_1.Address();\n        this.func = function_1.ContractFunction.none();\n        this.args = [];\n        this.value = balance_1.Balance.Zero();\n        Object.assign(this, init);\n        utils_1.guardValueIsSet(\"address\", this.address);\n        utils_1.guardValueIsSet(\"func\", this.func);\n        this.address.assertNotEmpty();\n        this.args = this.args || [];\n        this.caller = this.caller || new address_1.Address();\n        this.value = this.value || balance_1.Balance.Zero();\n    }\n    toHttpRequest() {\n        let request = {\n            \"scAddress\": this.address.bech32(),\n            \"funcName\": this.func.toString(),\n            \"args\": new argSerializer_1.ArgSerializer().valuesToStrings(this.args),\n            \"value\": this.value.toString()\n        };\n        if (!this.caller.isEmpty()) {\n            request[\"caller\"] = this.caller.bech32();\n        }\n        return request;\n    }\n}\nexports.Query = Query;\n//# sourceMappingURL=query.js.map"]},"metadata":{},"sourceType":"script"}