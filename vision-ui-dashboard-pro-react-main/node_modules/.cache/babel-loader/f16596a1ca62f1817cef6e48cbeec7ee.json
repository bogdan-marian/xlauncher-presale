{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncTimer = void 0;\n\nvar errors = __importStar(require(\"./errors\"));\n\nvar errors_1 = require(\"./errors\");\n\nvar logger_1 = require(\"./logger\");\n/*\n * AsyncTimer is an async-friendly abstraction that wraps JavaScript's setTimeout() and clearTimeout().\n */\n\n\nvar AsyncTimer = /*#__PURE__*/function () {\n  /**\n   * Creates an AsyncTimer.\n   */\n  function AsyncTimer(name) {\n    _classCallCheck(this, AsyncTimer);\n\n    this.timeoutHandle = null;\n    this.rejectionFunc = null;\n    this.name = name;\n    this.correlationTag = 0;\n  }\n  /**\n   * Starts the timer.\n   * @param timeout The time (in milliseconds) to wait until resolving the promise.\n   */\n\n\n  _createClass(AsyncTimer, [{\n    key: \"start\",\n    value: function start(timeout) {\n      var _this = this;\n\n      if (this.timeoutHandle) {\n        throw new errors.ErrAsyncTimerAlreadyRunning();\n      }\n\n      this.correlationTag++;\n      logger_1.Logger.trace(\"AsyncTimer[\".concat(this.name, \"'\").concat(this.correlationTag, \"].start()\"));\n      return new Promise(function (resolve, reject) {\n        _this.rejectionFunc = reject;\n\n        var timeoutCallback = function timeoutCallback() {\n          _this.rejectionFunc = null;\n\n          _this.stop();\n\n          resolve();\n        };\n\n        _this.timeoutHandle = setTimeout(timeoutCallback, timeout);\n      });\n    }\n    /**\n     * Aborts the timer: rejects the promise (if any) and stops the timer.\n     */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      logger_1.Logger.trace(\"AsyncTimer[\".concat(this.name, \"'\").concat(this.correlationTag, \"].abort()\"));\n\n      if (this.rejectionFunc) {\n        this.rejectionFunc(new errors_1.ErrAsyncTimerAborted());\n        this.rejectionFunc = null;\n      }\n\n      this.stop();\n    }\n    /**\n     * Stops the timer.\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.isStopped()) {\n        return;\n      }\n\n      logger_1.Logger.trace(\"AsyncTimer[\".concat(this.name, \"'\").concat(this.correlationTag, \"].stop()\"));\n\n      if (this.timeoutHandle) {\n        clearTimeout(this.timeoutHandle);\n        this.timeoutHandle = null;\n      }\n    }\n    /**\n     * Returns whether the timer is stopped.\n     */\n\n  }, {\n    key: \"isStopped\",\n    value: function isStopped() {\n      return this.timeoutHandle ? false : true;\n    }\n  }]);\n\n  return AsyncTimer;\n}();\n\nexports.AsyncTimer = AsyncTimer;","map":{"version":3,"sources":["../src/asyncTimer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA;;AAEG;;;IACU,U;EAMT;;AAEG;EACH,oBAAY,IAAZ,EAAwB;IAAA;;IAPhB,KAAA,aAAA,GAAqB,IAArB;IACA,KAAA,aAAA,GAAqB,IAArB;IAOJ,KAAK,IAAL,GAAY,IAAZ;IACA,KAAK,cAAL,GAAsB,CAAtB;EACH;EAED;;;AAGG;;;;;WACI,eAAM,OAAN,EAAqB;MAAA;;MACxB,IAAI,KAAK,aAAT,EAAwB;QACpB,MAAM,IAAI,MAAM,CAAC,2BAAX,EAAN;MACH;;MAED,KAAK,cAAL;MACA,QAAA,CAAA,MAAA,CAAO,KAAP,sBAA2B,KAAK,IAAhC,cAAwC,KAAK,cAA7C;MAEA,OAAO,IAAI,OAAJ,CAAkB,UAAC,OAAD,EAAU,MAAV,EAAoB;QACzC,KAAI,CAAC,aAAL,GAAqB,MAArB;;QAEA,IAAI,eAAe,GAAG,SAAlB,eAAkB,GAAK;UACvB,KAAI,CAAC,aAAL,GAAqB,IAArB;;UACA,KAAI,CAAC,IAAL;;UACA,OAAO;QACV,CAJD;;QAMA,KAAI,CAAC,aAAL,GAAqB,UAAU,CAAC,eAAD,EAAkB,OAAlB,CAA/B;MACH,CAVM,CAAP;IAWH;IAED;;AAEG;;;;WACI,iBAAK;MACR,QAAA,CAAA,MAAA,CAAO,KAAP,sBAA2B,KAAK,IAAhC,cAAwC,KAAK,cAA7C;;MAEA,IAAI,KAAK,aAAT,EAAwB;QACpB,KAAK,aAAL,CAAmB,IAAI,QAAA,CAAA,oBAAJ,EAAnB;QACA,KAAK,aAAL,GAAqB,IAArB;MACH;;MAED,KAAK,IAAL;IACH;IAED;;AAEG;;;;WACI,gBAAI;MACP,IAAI,KAAK,SAAL,EAAJ,EAAsB;QAClB;MACH;;MAED,QAAA,CAAA,MAAA,CAAO,KAAP,sBAA2B,KAAK,IAAhC,cAAwC,KAAK,cAA7C;;MAEA,IAAI,KAAK,aAAT,EAAwB;QACpB,YAAY,CAAC,KAAK,aAAN,CAAZ;QACA,KAAK,aAAL,GAAqB,IAArB;MACH;IACJ;IAED;;AAEG;;;;WACI,qBAAS;MACZ,OAAO,KAAK,aAAL,GAAqB,KAArB,GAA6B,IAApC;IACH;;;;;;AA1EL,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncTimer = void 0;\nconst errors = __importStar(require(\"./errors\"));\nconst errors_1 = require(\"./errors\");\nconst logger_1 = require(\"./logger\");\n/*\n * AsyncTimer is an async-friendly abstraction that wraps JavaScript's setTimeout() and clearTimeout().\n */\nclass AsyncTimer {\n    /**\n     * Creates an AsyncTimer.\n     */\n    constructor(name) {\n        this.timeoutHandle = null;\n        this.rejectionFunc = null;\n        this.name = name;\n        this.correlationTag = 0;\n    }\n    /**\n     * Starts the timer.\n     * @param timeout The time (in milliseconds) to wait until resolving the promise.\n     */\n    start(timeout) {\n        if (this.timeoutHandle) {\n            throw new errors.ErrAsyncTimerAlreadyRunning();\n        }\n        this.correlationTag++;\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].start()`);\n        return new Promise((resolve, reject) => {\n            this.rejectionFunc = reject;\n            let timeoutCallback = () => {\n                this.rejectionFunc = null;\n                this.stop();\n                resolve();\n            };\n            this.timeoutHandle = setTimeout(timeoutCallback, timeout);\n        });\n    }\n    /**\n     * Aborts the timer: rejects the promise (if any) and stops the timer.\n     */\n    abort() {\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].abort()`);\n        if (this.rejectionFunc) {\n            this.rejectionFunc(new errors_1.ErrAsyncTimerAborted());\n            this.rejectionFunc = null;\n        }\n        this.stop();\n    }\n    /**\n     * Stops the timer.\n     */\n    stop() {\n        if (this.isStopped()) {\n            return;\n        }\n        logger_1.Logger.trace(`AsyncTimer[${this.name}'${this.correlationTag}].stop()`);\n        if (this.timeoutHandle) {\n            clearTimeout(this.timeoutHandle);\n            this.timeoutHandle = null;\n        }\n    }\n    /**\n     * Returns whether the timer is stopped.\n     */\n    isStopped() {\n        return this.timeoutHandle ? false : true;\n    }\n}\nexports.AsyncTimer = AsyncTimer;\n//# sourceMappingURL=asyncTimer.js.map"]},"metadata":{},"sourceType":"script"}