{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\n\nvar types_1 = require(\"./types\");\n\nvar TokenIdentifierType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(TokenIdentifierType, _types_1$PrimitiveTyp);\n\n  var _super = _createSuper(TokenIdentifierType);\n\n  function TokenIdentifierType() {\n    _classCallCheck(this, TokenIdentifierType);\n\n    return _super.call(this, \"TokenIdentifier\");\n  }\n\n  return _createClass(TokenIdentifierType);\n}(types_1.PrimitiveType);\n\nexports.TokenIdentifierType = TokenIdentifierType;\n\nvar TokenIdentifierValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(TokenIdentifierValue, _types_1$PrimitiveVal);\n\n  var _super2 = _createSuper(TokenIdentifierValue);\n\n  function TokenIdentifierValue(value) {\n    var _this;\n\n    _classCallCheck(this, TokenIdentifierValue);\n\n    _this = _super2.call(this, new TokenIdentifierType());\n    _this.value = value;\n    return _this;\n  }\n\n  _createClass(TokenIdentifierValue, [{\n    key: \"getLength\",\n    value: function getLength() {\n      return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (this.getLength() != other.getLength()) {\n        return false;\n      }\n\n      return this.value.equals(other.value);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n  }]);\n\n  return TokenIdentifierValue;\n}(types_1.PrimitiveValue);\n\nexports.TokenIdentifierValue = TokenIdentifierValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/tokenIdentifier.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,mB;;;;;EACT,+BAAA;IAAA;;IAAA,yBACU,iBADV;EAEC;;;EAHoC,OAAA,CAAA,a;;AAAzC,OAAA,CAAA,mBAAA,GAAA,mBAAA;;IAMa,oB;;;;;EAGT,8BAAY,KAAZ,EAAyB;IAAA;;IAAA;;IACrB,2BAAM,IAAI,mBAAJ,EAAN;IACA,MAAK,KAAL,GAAa,KAAb;IAFqB;EAGxB;;;;WAED,qBAAS;MACL,OAAO,KAAK,KAAL,CAAW,MAAlB;IACH;IAED;;AAEG;;;;WACH,gBAAO,KAAP,EAAkC;MAC9B,IAAI,KAAK,SAAL,MAAoB,KAAK,CAAC,SAAN,EAAxB,EAA2C;QACvC,OAAO,KAAP;MACH;;MAED,OAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAAP;IACH;;;WAED,mBAAO;MACH,OAAO,KAAK,KAAZ;IACH;;;WAED,oBAAQ;MACJ,OAAO,KAAK,KAAL,CAAW,QAAX,EAAP;IACH;;;;EA7BqC,OAAA,CAAA,c;;AAA1C,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\nconst types_1 = require(\"./types\");\nclass TokenIdentifierType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"TokenIdentifier\");\n    }\n}\nexports.TokenIdentifierType = TokenIdentifierType;\nclass TokenIdentifierValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new TokenIdentifierType());\n        this.value = value;\n    }\n    getLength() {\n        return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n    equals(other) {\n        if (this.getLength() != other.getLength()) {\n            return false;\n        }\n        return this.value.equals(other.value);\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString() {\n        return this.value.toString();\n    }\n}\nexports.TokenIdentifierValue = TokenIdentifierValue;\n//# sourceMappingURL=tokenIdentifier.js.map"]},"metadata":{},"sourceType":"script"}