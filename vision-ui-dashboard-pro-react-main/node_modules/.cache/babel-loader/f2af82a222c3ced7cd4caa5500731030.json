{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _regeneratorRuntime = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/ionut/Desktop/xlauncher-presale/vision-ui-dashboard-pro-react-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGasFromValue = exports.SystemWrapper = exports.SystemConstants = void 0;\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar __1 = require(\"..\");\n\nvar __2 = require(\"../..\");\n\nvar testutils_1 = require(\"../../testutils\");\n\nvar nativeSerializer_1 = require(\"../nativeSerializer\");\n\nvar argumentErrorContext_1 = require(\"../argumentErrorContext\");\n\nvar chainSendContext_1 = require(\"./chainSendContext\");\n\nvar SystemConstants;\n\n(function (SystemConstants) {\n  SystemConstants.SYSTEM_ABI_PATH = path_1.default.join(path_1.default.dirname(__filename), \"../../abi\");\n  SystemConstants.ESDT_CONTRACT_ADDRESS = new __2.Address(\"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\");\n  SystemConstants.MIN_TRANSACTION_GAS = 50000;\n  SystemConstants.ESDT_ISSUE_GAS_LIMIT = 60000000;\n  SystemConstants.ESDT_TRANSFER_GAS_LIMIT = 500000;\n  SystemConstants.ESDT_NFT_TRANSFER_GAS_LIMIT = 1000000;\n  SystemConstants.ESDT_BASE_GAS_LIMIT = 6000000;\n})(SystemConstants = exports.SystemConstants || (exports.SystemConstants = {}));\n\nvar SystemWrapper = /*#__PURE__*/function (_chainSendContext_1$C) {\n  _inherits(SystemWrapper, _chainSendContext_1$C);\n\n  var _super = _createSuper(SystemWrapper);\n\n  function SystemWrapper(provider, context, sendContract, esdtSystemContract, issueCost, builtinFunctions) {\n    var _this;\n\n    _classCallCheck(this, SystemWrapper);\n\n    _this = _super.call(this, context);\n    _this.provider = provider;\n    _this.sendWrapper = sendContract;\n    _this.esdtSystemContract = esdtSystemContract;\n    _this.issueCost = issueCost;\n    _this.builtinFunctions = builtinFunctions;\n    return _this;\n  }\n\n  _createClass(SystemWrapper, [{\n    key: \"loadWrapper\",\n    value: function loadWrapper(projectPath, filenameHint, context) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return __1.ContractWrapper.loadProject(this.provider, this.builtinFunctions, projectPath, filenameHint, context);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"send\",\n    value: function send(receiver) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                address = nativeSerializer_1.NativeSerializer.convertNativeToAddress(receiver, new argumentErrorContext_1.ArgumentErrorContext(\"send\", \"0\", new __1.EndpointParameterDefinition(\"receiver\", \"\", new __1.AddressType())));\n                _context2.next = 3;\n                return this.sendWrapper.address(address).autoGas(0).call[\"\"]();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"issueFungible\",\n    value: function issueFungible() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this$esdtSystemContr;\n\n        var _yield$this$esdtSyste, _yield$this$esdtSyste2, issueResult, _2$EsdtHelpers$extra, tokenIdentifier;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (_this$esdtSystemContr = this.esdtSystemContract.gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT).value(this.issueCost).results).issue.apply(_this$esdtSystemContr, args);\n\n              case 2:\n                _yield$this$esdtSyste = _context3.sent;\n                _yield$this$esdtSyste2 = _slicedToArray(_yield$this$esdtSyste.resultingCalls, 1);\n                issueResult = _yield$this$esdtSyste2[0];\n                _2$EsdtHelpers$extra = __2.EsdtHelpers.extractFieldsFromEsdtTransferDataField(issueResult.data), tokenIdentifier = _2$EsdtHelpers$extra.tokenIdentifier;\n                tokenIdentifier = Buffer.from(tokenIdentifier, \"hex\").toString();\n                return _context3.abrupt(\"return\", this.recallToken(tokenIdentifier));\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"issueSemiFungible\",\n    value: function issueSemiFungible() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this$esdtSystemContr2;\n\n        var tokenIdentifier;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (_this$esdtSystemContr2 = this.esdtSystemContract.gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT).value(this.issueCost).call).issueSemiFungible.apply(_this$esdtSystemContr2, args);\n\n              case 2:\n                tokenIdentifier = _context4.sent.toString();\n                return _context4.abrupt(\"return\", this.recallToken(tokenIdentifier));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"issueNonFungible\",\n    value: function issueNonFungible() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this$esdtSystemContr3;\n\n        var tokenIdentifier;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (_this$esdtSystemContr3 = this.esdtSystemContract.gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT).value(this.issueCost).call).issueNonFungible.apply(_this$esdtSystemContr3, args);\n\n              case 2:\n                tokenIdentifier = _context5.sent.toString();\n                return _context5.abrupt(\"return\", this.recallToken(tokenIdentifier));\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"esdtNftCreate\",\n    value: function esdtNftCreate(balanceBuilder) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var _this$builtinFunction;\n\n        var nonce;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return (_this$builtinFunction = this.builtinFunctions.address(this.context.getSender()).gas(SystemConstants.ESDT_BASE_GAS_LIMIT).call).ESDTNFTCreate.apply(_this$builtinFunction, [balanceBuilder].concat(args));\n\n              case 2:\n                nonce = _context6.sent;\n                return _context6.abrupt(\"return\", balanceBuilder.nonce(nonce));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"recallToken\",\n    value: function recallToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var tokenProperties, token;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.esdtSystemContract.query.getTokenProperties(tokenIdentifier);\n\n              case 2:\n                tokenProperties = _context7.sent;\n                token = __2.Token.fromTokenProperties(tokenIdentifier, tokenProperties);\n                return _context7.abrupt(\"return\", __2.createBalanceBuilder(token));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance(address, balanceBuilder) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var typedAddress, tokenData;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                typedAddress = nativeSerializer_1.NativeSerializer.convertNativeToAddress(address, new argumentErrorContext_1.ArgumentErrorContext(\"getBalance\", \"0\", new __1.EndpointParameterDefinition(\"account\", \"\", new __1.AddressType())));\n\n                if (!balanceBuilder.getToken().isEgld()) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                _context8.next = 4;\n                return this.provider.getAccount(typedAddress).then(function (account) {\n                  return account.balance;\n                });\n\n              case 4:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 5:\n                _context8.next = 7;\n                return this.getTokenData(typedAddress, balanceBuilder);\n\n              case 7:\n                tokenData = _context8.sent;\n                return _context8.abrupt(\"return\", balanceBuilder.raw(tokenData.balance));\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getBalanceList\",\n    value: function getBalanceList(address, balanceBuilder) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var typedAddress;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                typedAddress = nativeSerializer_1.NativeSerializer.convertNativeToAddress(address, new argumentErrorContext_1.ArgumentErrorContext(\"getBalanceList\", \"0\", new __1.EndpointParameterDefinition(\"account\", \"\", new __1.AddressType())));\n\n                if (!(balanceBuilder.getToken().isNft() && balanceBuilder.hasNonce())) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                _context9.next = 4;\n                return this.getBalance(typedAddress, balanceBuilder);\n\n              case 4:\n                _context9.t0 = _context9.sent;\n                return _context9.abrupt(\"return\", [_context9.t0]);\n\n              case 6:\n                _context9.next = 8;\n                return this.provider.getAddressEsdtList(typedAddress).then(function (esdtList) {\n                  var tokenBalances = [];\n                  var filterIdentifier = balanceBuilder.getTokenIdentifier() + '-';\n\n                  for (var _i = 0, _Object$entries = Object.entries(esdtList); _i < _Object$entries.length; _i++) {\n                    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                        identifier = _Object$entries$_i[0],\n                        details = _Object$entries$_i[1];\n\n                    if (identifier.startsWith(filterIdentifier)) {\n                      tokenBalances.push(balanceBuilder.nonce(details.nonce).raw(details.balance));\n                    }\n                  }\n\n                  return tokenBalances;\n                });\n\n              case 8:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 9:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"getTokenData\",\n    value: function getTokenData(address, balanceBuilder) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var tokenIdentifier;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                tokenIdentifier = balanceBuilder.getTokenIdentifier();\n\n                if (!balanceBuilder.getToken().isFungible()) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                _context10.next = 4;\n                return this.provider.getAddressEsdt(address, tokenIdentifier);\n\n              case 4:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 7:\n                _context10.next = 9;\n                return this.provider.getAddressNft(address, tokenIdentifier, balanceBuilder.getNonce());\n\n              case 9:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 10:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"currentNonce\",\n    value: function currentNonce() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var networkStatus;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.provider.getNetworkStatus();\n\n              case 2:\n                networkStatus = _context11.sent;\n                return _context11.abrupt(\"return\", networkStatus.Nonce);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }], [{\n    key: \"getEsdtContractConfig\",\n    value: function getEsdtContractConfig(esdtSystemContract) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var _yield$esdtSystemCont, _yield$esdtSystemCont2, ownerAddress, baseIssuingCost, minTokenNameLength, maxTokenNameLength;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return esdtSystemContract.query.getContractConfig();\n\n              case 2:\n                _yield$esdtSystemCont = _context12.sent;\n                _yield$esdtSystemCont2 = _slicedToArray(_yield$esdtSystemCont, 4);\n                ownerAddress = _yield$esdtSystemCont2[0];\n                baseIssuingCost = _yield$esdtSystemCont2[1];\n                minTokenNameLength = _yield$esdtSystemCont2[2];\n                maxTokenNameLength = _yield$esdtSystemCont2[3];\n                return _context12.abrupt(\"return\", {\n                  ownerAddress: ownerAddress,\n                  baseIssuingCost: __2.Egld.raw(baseIssuingCost),\n                  minTokenNameLength: minTokenNameLength,\n                  maxTokenNameLength: maxTokenNameLength\n                });\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n    }\n  }, {\n    key: \"load\",\n    value: function load(provider) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var context, builtinFunctions, sendWrapper, esdtSystemContract, issueCost, contractConfig;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                context = new __1.SendContext(provider).logger(new __1.ContractLogger());\n                _context13.next = 3;\n                return __1.ContractWrapper.loadProject(provider, null, SystemConstants.SYSTEM_ABI_PATH, \"builtinFunctions\", context);\n\n              case 3:\n                builtinFunctions = _context13.sent;\n                _context13.next = 6;\n                return __1.ContractWrapper.loadProject(provider, builtinFunctions, SystemConstants.SYSTEM_ABI_PATH, \"sendWrapper\", context);\n\n              case 6:\n                sendWrapper = _context13.sent;\n                _context13.next = 9;\n                return __1.ContractWrapper.loadProject(provider, builtinFunctions, SystemConstants.SYSTEM_ABI_PATH, \"esdtSystemContract\", context);\n\n              case 9:\n                esdtSystemContract = _context13.sent;\n                esdtSystemContract.address(SystemConstants.ESDT_CONTRACT_ADDRESS);\n\n                if (!(provider instanceof testutils_1.MockProvider)) {\n                  _context13.next = 15;\n                  break;\n                }\n\n                issueCost = __2.Balance.Zero();\n                _context13.next = 19;\n                break;\n\n              case 15:\n                _context13.next = 17;\n                return this.getEsdtContractConfig(esdtSystemContract);\n\n              case 17:\n                contractConfig = _context13.sent;\n                issueCost = contractConfig.baseIssuingCost;\n\n              case 19:\n                return _context13.abrupt(\"return\", new SystemWrapper(provider, context, sendWrapper, esdtSystemContract, issueCost, builtinFunctions));\n\n              case 20:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }]);\n\n  return SystemWrapper;\n}(chainSendContext_1.ChainSendContext);\n\nexports.SystemWrapper = SystemWrapper;\n\nfunction getGasFromValue(baseGas, value) {\n  if (!value || value.isEgld()) {\n    return Math.max(baseGas, SystemConstants.MIN_TRANSACTION_GAS);\n  }\n\n  if (value.token.isFungible()) {\n    return baseGas + SystemConstants.ESDT_TRANSFER_GAS_LIMIT;\n  } else {\n    return baseGas + SystemConstants.ESDT_NFT_TRANSFER_GAS_LIMIT;\n  }\n}\n\nexports.getGasFromValue = getGasFromValue;","map":{"version":3,"sources":["../../../src/smartcontracts/wrapper/systemWrapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGasFromValue = exports.SystemWrapper = exports.SystemConstants = void 0;\nconst path_1 = __importDefault(require(\"path\"));\nconst __1 = require(\"..\");\nconst __2 = require(\"../..\");\nconst testutils_1 = require(\"../../testutils\");\nconst nativeSerializer_1 = require(\"../nativeSerializer\");\nconst argumentErrorContext_1 = require(\"../argumentErrorContext\");\nconst chainSendContext_1 = require(\"./chainSendContext\");\nvar SystemConstants;\n(function (SystemConstants) {\n    SystemConstants.SYSTEM_ABI_PATH = path_1.default.join(path_1.default.dirname(__filename), \"../../abi\");\n    SystemConstants.ESDT_CONTRACT_ADDRESS = new __2.Address(\"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\");\n    SystemConstants.MIN_TRANSACTION_GAS = 50000;\n    SystemConstants.ESDT_ISSUE_GAS_LIMIT = 60000000;\n    SystemConstants.ESDT_TRANSFER_GAS_LIMIT = 500000;\n    SystemConstants.ESDT_NFT_TRANSFER_GAS_LIMIT = 1000000;\n    SystemConstants.ESDT_BASE_GAS_LIMIT = 6000000;\n})(SystemConstants = exports.SystemConstants || (exports.SystemConstants = {}));\nclass SystemWrapper extends chainSendContext_1.ChainSendContext {\n    constructor(provider, context, sendContract, esdtSystemContract, issueCost, builtinFunctions) {\n        super(context);\n        this.provider = provider;\n        this.sendWrapper = sendContract;\n        this.esdtSystemContract = esdtSystemContract;\n        this.issueCost = issueCost;\n        this.builtinFunctions = builtinFunctions;\n    }\n    loadWrapper(projectPath, filenameHint, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield __1.ContractWrapper.loadProject(this.provider, this.builtinFunctions, projectPath, filenameHint, context);\n        });\n    }\n    static getEsdtContractConfig(esdtSystemContract) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [ownerAddress, baseIssuingCost, minTokenNameLength, maxTokenNameLength] = yield esdtSystemContract.query.getContractConfig();\n            return { ownerAddress, baseIssuingCost: __2.Egld.raw(baseIssuingCost), minTokenNameLength, maxTokenNameLength };\n        });\n    }\n    static load(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let context = new __1.SendContext(provider).logger(new __1.ContractLogger());\n            let builtinFunctions = yield __1.ContractWrapper.loadProject(provider, null, SystemConstants.SYSTEM_ABI_PATH, \"builtinFunctions\", context);\n            let sendWrapper = yield __1.ContractWrapper.loadProject(provider, builtinFunctions, SystemConstants.SYSTEM_ABI_PATH, \"sendWrapper\", context);\n            let esdtSystemContract = yield __1.ContractWrapper.loadProject(provider, builtinFunctions, SystemConstants.SYSTEM_ABI_PATH, \"esdtSystemContract\", context);\n            esdtSystemContract.address(SystemConstants.ESDT_CONTRACT_ADDRESS);\n            let issueCost;\n            if (provider instanceof testutils_1.MockProvider) {\n                issueCost = __2.Balance.Zero();\n            }\n            else {\n                let contractConfig = yield this.getEsdtContractConfig(esdtSystemContract);\n                issueCost = contractConfig.baseIssuingCost;\n            }\n            return new SystemWrapper(provider, context, sendWrapper, esdtSystemContract, issueCost, builtinFunctions);\n        });\n    }\n    send(receiver) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let address = nativeSerializer_1.NativeSerializer.convertNativeToAddress(receiver, new argumentErrorContext_1.ArgumentErrorContext(\"send\", \"0\", new __1.EndpointParameterDefinition(\"receiver\", \"\", new __1.AddressType())));\n            yield this.sendWrapper.address(address).autoGas(0).call[\"\"]();\n        });\n    }\n    issueFungible(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { resultingCalls: [issueResult] } = yield this.esdtSystemContract\n                .gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT)\n                .value(this.issueCost)\n                .results.issue(...args);\n            let { tokenIdentifier } = __2.EsdtHelpers.extractFieldsFromEsdtTransferDataField(issueResult.data);\n            tokenIdentifier = Buffer.from(tokenIdentifier, \"hex\").toString();\n            return this.recallToken(tokenIdentifier);\n        });\n    }\n    issueSemiFungible(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tokenIdentifier = (yield this.esdtSystemContract\n                .gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT)\n                .value(this.issueCost)\n                .call.issueSemiFungible(...args)).toString();\n            return this.recallToken(tokenIdentifier);\n        });\n    }\n    issueNonFungible(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tokenIdentifier = (yield this.esdtSystemContract\n                .gas(SystemConstants.ESDT_ISSUE_GAS_LIMIT)\n                .value(this.issueCost)\n                .call.issueNonFungible(...args)).toString();\n            return this.recallToken(tokenIdentifier);\n        });\n    }\n    esdtNftCreate(balanceBuilder, ...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let nonce = yield this.builtinFunctions\n                .address(this.context.getSender())\n                .gas(SystemConstants.ESDT_BASE_GAS_LIMIT)\n                .call\n                .ESDTNFTCreate(balanceBuilder, ...args);\n            return balanceBuilder.nonce(nonce);\n        });\n    }\n    recallToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tokenProperties = yield this.esdtSystemContract.query.getTokenProperties(tokenIdentifier);\n            let token = __2.Token.fromTokenProperties(tokenIdentifier, tokenProperties);\n            return __2.createBalanceBuilder(token);\n        });\n    }\n    getBalance(address, balanceBuilder) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let typedAddress = nativeSerializer_1.NativeSerializer.convertNativeToAddress(address, new argumentErrorContext_1.ArgumentErrorContext(\"getBalance\", \"0\", new __1.EndpointParameterDefinition(\"account\", \"\", new __1.AddressType())));\n            if (balanceBuilder.getToken().isEgld()) {\n                return yield this.provider.getAccount(typedAddress).then((account) => account.balance);\n            }\n            let tokenData = yield this.getTokenData(typedAddress, balanceBuilder);\n            return balanceBuilder.raw(tokenData.balance);\n        });\n    }\n    getBalanceList(address, balanceBuilder) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let typedAddress = nativeSerializer_1.NativeSerializer.convertNativeToAddress(address, new argumentErrorContext_1.ArgumentErrorContext(\"getBalanceList\", \"0\", new __1.EndpointParameterDefinition(\"account\", \"\", new __1.AddressType())));\n            if (balanceBuilder.getToken().isNft() && balanceBuilder.hasNonce()) {\n                return [yield this.getBalance(typedAddress, balanceBuilder)];\n            }\n            return yield this.provider.getAddressEsdtList(typedAddress).then((esdtList) => {\n                let tokenBalances = [];\n                let filterIdentifier = balanceBuilder.getTokenIdentifier() + '-';\n                for (let [identifier, details] of Object.entries(esdtList)) {\n                    if (identifier.startsWith(filterIdentifier)) {\n                        tokenBalances.push(balanceBuilder.nonce(details.nonce).raw(details.balance));\n                    }\n                }\n                return tokenBalances;\n            });\n        });\n    }\n    getTokenData(address, balanceBuilder) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tokenIdentifier = balanceBuilder.getTokenIdentifier();\n            if (balanceBuilder.getToken().isFungible()) {\n                return yield this.provider.getAddressEsdt(address, tokenIdentifier);\n            }\n            else {\n                return yield this.provider.getAddressNft(address, tokenIdentifier, balanceBuilder.getNonce());\n            }\n        });\n    }\n    currentNonce() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let networkStatus = yield this.provider.getNetworkStatus();\n            return networkStatus.Nonce;\n        });\n    }\n}\nexports.SystemWrapper = SystemWrapper;\nfunction getGasFromValue(baseGas, value) {\n    if (!value || value.isEgld()) {\n        return Math.max(baseGas, SystemConstants.MIN_TRANSACTION_GAS);\n    }\n    if (value.token.isFungible()) {\n        return baseGas + SystemConstants.ESDT_TRANSFER_GAS_LIMIT;\n    }\n    else {\n        return baseGas + SystemConstants.ESDT_NFT_TRANSFER_GAS_LIMIT;\n    }\n}\nexports.getGasFromValue = getGasFromValue;\n//# sourceMappingURL=systemWrapper.js.map"]},"metadata":{},"sourceType":"script"}