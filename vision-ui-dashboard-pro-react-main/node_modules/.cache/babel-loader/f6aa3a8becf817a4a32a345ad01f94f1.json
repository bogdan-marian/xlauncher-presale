{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeBigNumber = exports.decodeString = exports.decodeBool = exports.decodeUnsignedNumber = void 0;\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst typesystem_1 = require(\"../typesystem\");\n\nconst binary_1 = require(\"./binary\");\n\nconst Codec = new binary_1.BinaryCodec();\n\nfunction decodeUnsignedNumber(buffer) {\n  let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n  let raw = Number(value.valueOf());\n  return raw;\n}\n\nexports.decodeUnsignedNumber = decodeUnsignedNumber;\n\nfunction decodeBool(buffer) {\n  let value = Codec.decodeTopLevel(buffer, new typesystem_1.BooleanType());\n  let raw = Boolean(value.valueOf());\n  return raw;\n}\n\nexports.decodeBool = decodeBool;\n\nfunction decodeString(buffer) {\n  let value = Codec.decodeTopLevel(buffer, new typesystem_1.BytesType());\n  let raw = String(value.valueOf());\n  return raw;\n}\n\nexports.decodeString = decodeString;\n\nfunction decodeBigNumber(buffer) {\n  let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n  let raw = new bignumber_js_1.default(value.valueOf());\n  return raw;\n}\n\nexports.decodeBigNumber = decodeBigNumber;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/binaryCodecUtils.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAM,KAAK,GAAG,IAAI,QAAA,CAAA,WAAJ,EAAd;;AAEA,SAAgB,oBAAhB,CAAqC,MAArC,EAAmD;EAC/C,IAAI,KAAK,GAAG,KAAK,CAAC,cAAN,CAAqB,MAArB,EAA6B,IAAI,YAAA,CAAA,WAAJ,EAA7B,CAAZ;EACA,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAN,EAAD,CAAhB;EACA,OAAO,GAAP;AACH;;AAJD,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAMA,SAAgB,UAAhB,CAA2B,MAA3B,EAAyC;EACrC,IAAI,KAAK,GAAG,KAAK,CAAC,cAAN,CAAqB,MAArB,EAA6B,IAAI,YAAA,CAAA,WAAJ,EAA7B,CAAZ;EACA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,OAAN,EAAD,CAAjB;EACA,OAAO,GAAP;AACH;;AAJD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAMA,SAAgB,YAAhB,CAA6B,MAA7B,EAA2C;EACvC,IAAI,KAAK,GAAG,KAAK,CAAC,cAAN,CAAqB,MAArB,EAA6B,IAAI,YAAA,CAAA,SAAJ,EAA7B,CAAZ;EACA,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAN,EAAD,CAAhB;EACA,OAAO,GAAP;AACH;;AAJD,OAAA,CAAA,YAAA,GAAA,YAAA;;AAMA,SAAgB,eAAhB,CAAgC,MAAhC,EAA8C;EAC1C,IAAI,KAAK,GAAG,KAAK,CAAC,cAAN,CAAqB,MAArB,EAA6B,IAAI,YAAA,CAAA,WAAJ,EAA7B,CAAZ;EACA,IAAI,GAAG,GAAG,IAAI,cAAA,CAAA,OAAJ,CAAc,KAAK,CAAC,OAAN,EAAd,CAAV;EACA,OAAO,GAAP;AACH;;AAJD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBigNumber = exports.decodeString = exports.decodeBool = exports.decodeUnsignedNumber = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst typesystem_1 = require(\"../typesystem\");\nconst binary_1 = require(\"./binary\");\nconst Codec = new binary_1.BinaryCodec();\nfunction decodeUnsignedNumber(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n    let raw = Number(value.valueOf());\n    return raw;\n}\nexports.decodeUnsignedNumber = decodeUnsignedNumber;\nfunction decodeBool(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BooleanType());\n    let raw = Boolean(value.valueOf());\n    return raw;\n}\nexports.decodeBool = decodeBool;\nfunction decodeString(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BytesType());\n    let raw = String(value.valueOf());\n    return raw;\n}\nexports.decodeString = decodeString;\nfunction decodeBigNumber(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n    let raw = new bignumber_js_1.default(value.valueOf());\n    return raw;\n}\nexports.decodeBigNumber = decodeBigNumber;\n//# sourceMappingURL=binaryCodecUtils.js.map"]},"metadata":{},"sourceType":"script"}